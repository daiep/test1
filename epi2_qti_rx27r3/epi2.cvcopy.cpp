/*
 * epi2.cvcopy.cpp 
 *
 * This file is automatically generated by the '/ESE_RX27.0_R03/psd/bin/contigCVs' script.
 * It contains code when identifies the CVs and TGT export variables
 * to be downloaded to the target PSD and a function to endian convert
 * these variables.
 *
 * Generated on Thu May 23 11:06:01 2019 
 */

#ifndef h_epi2_cvcopy_cpp
#define h_epi2_cvcopy_cpp

#include "cvcopy_proto.h"

#if defined(PSD_HW) && defined(HOST_TGT)
/* Include endian converter functions */
#include "epi2.cnvendian.globalvar.h"
#include "epi2.cnvendian.c"
#endif /* PSD_HW && HOST_TGT */

/* CVs and TGT Export variables to copy */
static const cvcopy_table_entry cvcopy_table[] = {
    { &psd_annefact_level, sizeof(psd_annefact_level) },
    { &rhpsd_annefact_level, sizeof(rhpsd_annefact_level) },
    { &psd_relative_excited_volume_freq, sizeof(psd_relative_excited_volume_freq) },
    { &psd_relative_excited_volume_phase, sizeof(psd_relative_excited_volume_phase) },
    { &psd_relative_excited_volume_slice, sizeof(psd_relative_excited_volume_slice) },
    { &psd_relative_encoded_volume_freq, sizeof(psd_relative_encoded_volume_freq) },
    { &psd_relative_encoded_volume_phase, sizeof(psd_relative_encoded_volume_phase) },
    { &psd_relative_encoded_volume_slice, sizeof(psd_relative_encoded_volume_slice) },
    { &opresearch, sizeof(opresearch) },
    { &opweight, sizeof(opweight) },
    { &oplandmark, sizeof(oplandmark) },
    { &optabent, sizeof(optabent) },
    { &opentry, sizeof(opentry) },
    { &oppos, sizeof(oppos) },
    { &opplane, sizeof(opplane) },
    { &opphysplane, sizeof(opphysplane) },
    { &opobplane, sizeof(opobplane) },
    { &opimode, sizeof(opimode) },
    { &oppseq, sizeof(oppseq) },
    { &opgradmode, sizeof(opgradmode) },
    { &opanatomy, sizeof(opanatomy) },
    { &piimgoptlist, sizeof(piimgoptlist) },
    { &opcgate, sizeof(opcgate) },
    { &opexor, sizeof(opexor) },
    { &opcmon, sizeof(opcmon) },
    { &opfcomp, sizeof(opfcomp) },
    { &opgrx, sizeof(opgrx) },
    { &opgrxroi, sizeof(opgrxroi) },
    { &opnopwrap, sizeof(opnopwrap) },
    { &opptsize, sizeof(opptsize) },
    { &oppomp, sizeof(oppomp) },
    { &opscic, sizeof(opscic) },
    { &oprect, sizeof(oprect) },
    { &opsquare, sizeof(opsquare) },
    { &opvbw, sizeof(opvbw) },
    { &opblim, sizeof(opblim) },
    { &opfast, sizeof(opfast) },
    { &opcs, sizeof(opcs) },
    { &opdeprep, sizeof(opdeprep) },
    { &opirprep, sizeof(opirprep) },
    { &opsrprep, sizeof(opsrprep) },
    { &opmph, sizeof(opmph) },
    { &opdynaplan, sizeof(opdynaplan) },
    { &opdynaplan_mask_phase, sizeof(opdynaplan_mask_phase) },
    { &opbsp, sizeof(opbsp) },
    { &oprealtime, sizeof(oprealtime) },
    { &opfluorotrigger, sizeof(opfluorotrigger) },
    { &opET, sizeof(opET) },
    { &opmultistation, sizeof(opmultistation) },
    { &opepi, sizeof(opepi) },
    { &opflair, sizeof(opflair) },
    { &opt1flair, sizeof(opt1flair) },
    { &opt2flair, sizeof(opt2flair) },
    { &opdoubleir, sizeof(opdoubleir) },
    { &optissuet1, sizeof(optissuet1) },
    { &opautotissuet1, sizeof(opautotissuet1) },
    { &optlrdrf, sizeof(optlrdrf) },
    { &opfulltrain, sizeof(opfulltrain) },
    { &opirmode, sizeof(opirmode) },
    { &opmt, sizeof(opmt) },
    { &opzip512, sizeof(opzip512) },
    { &opzip1024, sizeof(opzip1024) },
    { &opslzip2, sizeof(opslzip2) },
    { &opslzip4, sizeof(opslzip4) },
    { &opsmartprep, sizeof(opsmartprep) },
    { &opssrf, sizeof(opssrf) },
    { &opt2prep, sizeof(opt2prep) },
    { &opspiral, sizeof(opspiral) },
    { &opnav, sizeof(opnav) },
    { &opfmri, sizeof(opfmri) },
    { &opectricks, sizeof(opectricks) },
    { &optricksdel, sizeof(optricksdel) },
    { &optrickspause, sizeof(optrickspause) },
    { &opfr, sizeof(opfr) },
    { &opcube, sizeof(opcube) },
    { &ophydro, sizeof(ophydro) },
    { &opphasecycle, sizeof(opphasecycle) },
    { &oplava, sizeof(oplava) },
    { &op3dcine_fiesta, sizeof(op3dcine_fiesta) },
    { &op3dcine_spgr, sizeof(op3dcine_spgr) },
    { &op4dflow, sizeof(op4dflow) },
    { &opbrava, sizeof(opbrava) },
    { &opcosmic, sizeof(opcosmic) },
    { &opvibrant, sizeof(opvibrant) },
    { &opbravo, sizeof(opbravo) },
    { &opdisco, sizeof(opdisco) },
    { &opmprage, sizeof(opmprage) },
    { &oppromo, sizeof(oppromo) },
    { &opprop, sizeof(opprop) },
    { &opdwprop, sizeof(opdwprop) },
    { &opdwpropduo, sizeof(opdwpropduo) },
    { &opmuse, sizeof(opmuse) },
    { &opallowedrescantime, sizeof(opallowedrescantime) },
    { &opbreastmrs, sizeof(opbreastmrs) },
    { &opjrmode, sizeof(opjrmode) },
    { &opssfse, sizeof(opssfse) },
    { &t1flair_flag, sizeof(t1flair_flag) },
    { &opphsen, sizeof(opphsen) },
    { &opbc, sizeof(opbc) },
    { &opfatwater, sizeof(opfatwater) },
    { &oprtbc, sizeof(oprtbc) },
    { &opnseg, sizeof(opnseg) },
    { &opnnex, sizeof(opnnex) },
    { &opsilent, sizeof(opsilent) },
    { &opsilentlevel, sizeof(opsilentlevel) },
    { &opmerge, sizeof(opmerge) },
    { &opswan, sizeof(opswan) },
    { &opphaseimage, sizeof(opphaseimage) },
    { &opdixon, sizeof(opdixon) },
    { &opdixproc, sizeof(opdixproc) },
    { &opmedal, sizeof(opmedal) },
    { &opquickstep, sizeof(opquickstep) },
    { &opidealiq, sizeof(opidealiq) },
    { &opsilentmr, sizeof(opsilentmr) },
    { &opmagic, sizeof(opmagic) },
    { &opzoom_fov_xy, sizeof(opzoom_fov_xy) },
    { &opzoom_fov_z, sizeof(opzoom_fov_z) },
    { &opzoom_dist_ax, sizeof(opzoom_dist_ax) },
    { &opzoom_dist_cor, sizeof(opzoom_dist_cor) },
    { &opzoom_dist_sag, sizeof(opzoom_dist_sag) },
    { &app_grad_type, sizeof(app_grad_type) },
    { &opzoom_coil_ind, sizeof(opzoom_coil_ind) },
    { &pizoom_index, sizeof(pizoom_index) },
    { &opsat, sizeof(opsat) },
    { &opsatx, sizeof(opsatx) },
    { &opsaty, sizeof(opsaty) },
    { &opsatz, sizeof(opsatz) },
    { &opsatxloc1, sizeof(opsatxloc1) },
    { &opsatxloc2, sizeof(opsatxloc2) },
    { &opsatyloc1, sizeof(opsatyloc1) },
    { &opsatyloc2, sizeof(opsatyloc2) },
    { &opsatzloc1, sizeof(opsatzloc1) },
    { &opsatzloc2, sizeof(opsatzloc2) },
    { &opsatxthick, sizeof(opsatxthick) },
    { &opsatythick, sizeof(opsatythick) },
    { &opsatzthick, sizeof(opsatzthick) },
    { &opsatmask, sizeof(opsatmask) },
    { &opfat, sizeof(opfat) },
    { &opwater, sizeof(opwater) },
    { &opccsat, sizeof(opccsat) },
    { &opfatcl, sizeof(opfatcl) },
    { &opspecir, sizeof(opspecir) },
    { &opexsatmask, sizeof(opexsatmask) },
    { &opexsathick1, sizeof(opexsathick1) },
    { &opexsathick2, sizeof(opexsathick2) },
    { &opexsathick3, sizeof(opexsathick3) },
    { &opexsathick4, sizeof(opexsathick4) },
    { &opexsathick5, sizeof(opexsathick5) },
    { &opexsathick6, sizeof(opexsathick6) },
    { &opexsatloc1, sizeof(opexsatloc1) },
    { &opexsatloc2, sizeof(opexsatloc2) },
    { &opexsatloc3, sizeof(opexsatloc3) },
    { &opexsatloc4, sizeof(opexsatloc4) },
    { &opexsatloc5, sizeof(opexsatloc5) },
    { &opexsatloc6, sizeof(opexsatloc6) },
    { &opexsatparal, sizeof(opexsatparal) },
    { &opexsatoff1, sizeof(opexsatoff1) },
    { &opexsatoff2, sizeof(opexsatoff2) },
    { &opexsatoff3, sizeof(opexsatoff3) },
    { &opexsatoff4, sizeof(opexsatoff4) },
    { &opexsatoff5, sizeof(opexsatoff5) },
    { &opexsatoff6, sizeof(opexsatoff6) },
    { &opexsatlen1, sizeof(opexsatlen1) },
    { &opexsatlen2, sizeof(opexsatlen2) },
    { &opexsatlen3, sizeof(opexsatlen3) },
    { &opexsatlen4, sizeof(opexsatlen4) },
    { &opexsatlen5, sizeof(opexsatlen5) },
    { &opexsatlen6, sizeof(opexsatlen6) },
    { &opdfsathick1, sizeof(opdfsathick1) },
    { &opdfsathick2, sizeof(opdfsathick2) },
    { &opdfsathick3, sizeof(opdfsathick3) },
    { &opdfsathick4, sizeof(opdfsathick4) },
    { &opdfsathick5, sizeof(opdfsathick5) },
    { &opdfsathick6, sizeof(opdfsathick6) },
    { &exsat1_normth_R, sizeof(exsat1_normth_R) },
    { &exsat1_normth_A, sizeof(exsat1_normth_A) },
    { &exsat1_normth_S, sizeof(exsat1_normth_S) },
    { &exsat2_normth_R, sizeof(exsat2_normth_R) },
    { &exsat2_normth_A, sizeof(exsat2_normth_A) },
    { &exsat2_normth_S, sizeof(exsat2_normth_S) },
    { &exsat3_normth_R, sizeof(exsat3_normth_R) },
    { &exsat3_normth_A, sizeof(exsat3_normth_A) },
    { &exsat3_normth_S, sizeof(exsat3_normth_S) },
    { &exsat4_normth_R, sizeof(exsat4_normth_R) },
    { &exsat4_normth_A, sizeof(exsat4_normth_A) },
    { &exsat4_normth_S, sizeof(exsat4_normth_S) },
    { &exsat5_normth_R, sizeof(exsat5_normth_R) },
    { &exsat5_normth_A, sizeof(exsat5_normth_A) },
    { &exsat5_normth_S, sizeof(exsat5_normth_S) },
    { &exsat6_normth_R, sizeof(exsat6_normth_R) },
    { &exsat6_normth_A, sizeof(exsat6_normth_A) },
    { &exsat6_normth_S, sizeof(exsat6_normth_S) },
    { &exsat1_dist, sizeof(exsat1_dist) },
    { &exsat2_dist, sizeof(exsat2_dist) },
    { &exsat3_dist, sizeof(exsat3_dist) },
    { &exsat4_dist, sizeof(exsat4_dist) },
    { &exsat5_dist, sizeof(exsat5_dist) },
    { &exsat6_dist, sizeof(exsat6_dist) },
    { &pigirscrn, sizeof(pigirscrn) },
    { &piautoirbands, sizeof(piautoirbands) },
    { &pigirdefthick, sizeof(pigirdefthick) },
    { &pinumgir, sizeof(pinumgir) },
    { &opnumgir, sizeof(opnumgir) },
    { &pigirmode, sizeof(pigirmode) },
    { &opgirmode, sizeof(opgirmode) },
    { &optagging, sizeof(optagging) },
    { &optagspc, sizeof(optagspc) },
    { &optagangle, sizeof(optagangle) },
    { &opvenc, sizeof(opvenc) },
    { &opflaxx, sizeof(opflaxx) },
    { &opflaxy, sizeof(opflaxy) },
    { &opflaxz, sizeof(opflaxz) },
    { &opflaxall, sizeof(opflaxall) },
    { &opproject, sizeof(opproject) },
    { &opcollapse, sizeof(opcollapse) },
    { &oprlflow, sizeof(oprlflow) },
    { &opapflow, sizeof(opapflow) },
    { &opsiflow, sizeof(opsiflow) },
    { &opmagc, sizeof(opmagc) },
    { &opflrecon, sizeof(opflrecon) },
    { &oprampdir, sizeof(oprampdir) },
    { &project, sizeof(project) },
    { &vas_ovrhd, sizeof(vas_ovrhd) },
    { &slice_col, sizeof(slice_col) },
    { &phase_col, sizeof(phase_col) },
    { &read_col, sizeof(read_col) },
    { &mag_mask, sizeof(mag_mask) },
    { &phase_cor, sizeof(phase_cor) },
    { &extras, sizeof(extras) },
    { &mag_create, sizeof(mag_create) },
    { &rl_flow, sizeof(rl_flow) },
    { &ap_flow, sizeof(ap_flow) },
    { &si_flow, sizeof(si_flow) },
    { &imagenum, sizeof(imagenum) },
    { &motsa_ovrhd, sizeof(motsa_ovrhd) },
    { &opslinky, sizeof(opslinky) },
    { &opinhance, sizeof(opinhance) },
    { &opmavric, sizeof(opmavric) },
    { &opinhsflow, sizeof(opinhsflow) },
    { &opmsde, sizeof(opmsde) },
    { &opvest, sizeof(opvest) },
    { &opmsdeaxx, sizeof(opmsdeaxx) },
    { &opmsdeaxy, sizeof(opmsdeaxy) },
    { &opmsdeaxz, sizeof(opmsdeaxz) },
    { &opbreathhold, sizeof(opbreathhold) },
    { &opautosubtract, sizeof(opautosubtract) },
    { &opsepseries, sizeof(opsepseries) },
    { &pititle, sizeof(pititle) },
    { &opuser0, sizeof(opuser0) },
    { &opuser1, sizeof(opuser1) },
    { &opuser2, sizeof(opuser2) },
    { &opuser3, sizeof(opuser3) },
    { &opuser4, sizeof(opuser4) },
    { &opuser5, sizeof(opuser5) },
    { &opuser6, sizeof(opuser6) },
    { &opuser7, sizeof(opuser7) },
    { &opuser8, sizeof(opuser8) },
    { &opuser9, sizeof(opuser9) },
    { &opuser10, sizeof(opuser10) },
    { &opuser11, sizeof(opuser11) },
    { &opuser12, sizeof(opuser12) },
    { &opuser13, sizeof(opuser13) },
    { &opuser14, sizeof(opuser14) },
    { &opuser15, sizeof(opuser15) },
    { &opuser16, sizeof(opuser16) },
    { &opuser17, sizeof(opuser17) },
    { &opuser18, sizeof(opuser18) },
    { &opuser19, sizeof(opuser19) },
    { &opuser20, sizeof(opuser20) },
    { &opuser21, sizeof(opuser21) },
    { &opuser22, sizeof(opuser22) },
    { &opuser23, sizeof(opuser23) },
    { &opuser24, sizeof(opuser24) },
    { &opuser25, sizeof(opuser25) },
    { &opuser26, sizeof(opuser26) },
    { &opuser27, sizeof(opuser27) },
    { &opuser28, sizeof(opuser28) },
    { &opuser29, sizeof(opuser29) },
    { &opuser30, sizeof(opuser30) },
    { &opuser31, sizeof(opuser31) },
    { &opuser32, sizeof(opuser32) },
    { &opuser33, sizeof(opuser33) },
    { &opuser34, sizeof(opuser34) },
    { &opuser35, sizeof(opuser35) },
    { &opuser36, sizeof(opuser36) },
    { &opuser37, sizeof(opuser37) },
    { &opuser38, sizeof(opuser38) },
    { &opuser39, sizeof(opuser39) },
    { &opuser40, sizeof(opuser40) },
    { &opuser41, sizeof(opuser41) },
    { &opuser42, sizeof(opuser42) },
    { &opuser43, sizeof(opuser43) },
    { &opuser44, sizeof(opuser44) },
    { &opuser45, sizeof(opuser45) },
    { &opuser46, sizeof(opuser46) },
    { &opuser47, sizeof(opuser47) },
    { &opuser48, sizeof(opuser48) },
    { &opnostations, sizeof(opnostations) },
    { &opstation, sizeof(opstation) },
    { &oploadprotocol, sizeof(oploadprotocol) },
    { &opmask, sizeof(opmask) },
    { &opvenous, sizeof(opvenous) },
    { &opprotRxMode, sizeof(opprotRxMode) },
    { &opacqo, sizeof(opacqo) },
    { &opfphases, sizeof(opfphases) },
    { &opsldelay, sizeof(opsldelay) },
    { &avminsldelay, sizeof(avminsldelay) },
    { &optphases, sizeof(optphases) },
    { &opdynaplan_nphases, sizeof(opdynaplan_nphases) },
    { &opvsphases, sizeof(opvsphases) },
    { &opdiffuse, sizeof(opdiffuse) },
    { &opsavedf, sizeof(opsavedf) },
    { &opmintedif, sizeof(opmintedif) },
    { &opseparatesynb, sizeof(opseparatesynb) },
    { &opdfaxx, sizeof(opdfaxx) },
    { &opdfaxy, sizeof(opdfaxy) },
    { &opdfaxz, sizeof(opdfaxz) },
    { &opdfaxall, sizeof(opdfaxall) },
    { &opdfaxtetra, sizeof(opdfaxtetra) },
    { &opdfax3in1, sizeof(opdfax3in1) },
    { &opbval, sizeof(opbval) },
    { &opnumbvals, sizeof(opnumbvals) },
    { &opautonumbvals, sizeof(opautonumbvals) },
    { &opnumsynbvals, sizeof(opnumsynbvals) },
    { &opdifnext2, sizeof(opdifnext2) },
    { &opautodifnext2, sizeof(opautodifnext2) },
    { &optensor, sizeof(optensor) },
    { &opdifnumdirs, sizeof(opdifnumdirs) },
    { &opdifnumt2, sizeof(opdifnumt2) },
    { &opautodifnumt2, sizeof(opautodifnumt2) },
    { &opdualspinecho, sizeof(opdualspinecho) },
    { &opdifproctype, sizeof(opdifproctype) },
    { &opdifnumbvalues, sizeof(opdifnumbvalues) },
    { &dti_plus_flag, sizeof(dti_plus_flag) },
    { &optouch, sizeof(optouch) },
    { &optouchfreq, sizeof(optouchfreq) },
    { &optouchmegfreq, sizeof(optouchmegfreq) },
    { &optouchamp, sizeof(optouchamp) },
    { &optouchtphases, sizeof(optouchtphases) },
    { &optouchcyc, sizeof(optouchcyc) },
    { &optouchax, sizeof(optouchax) },
    { &opaslprep, sizeof(opaslprep) },
    { &opasl, sizeof(opasl) },
    { &oppostlabeldelay, sizeof(oppostlabeldelay) },
    { &rhchannel_combine_method, sizeof(rhchannel_combine_method) },
    { &rhasl_perf_weighted_scale, sizeof(rhasl_perf_weighted_scale) },
    { &cfslew_artmedium, sizeof(cfslew_artmedium) },
    { &cfgmax_artmedium, sizeof(cfgmax_artmedium) },
    { &cfslew_arthigh, sizeof(cfslew_arthigh) },
    { &cfgmax_arthigh, sizeof(cfgmax_arthigh) },
    { &cfnumartlevels, sizeof(cfnumartlevels) },
    { &pinumartlevels, sizeof(pinumartlevels) },
    { &cfslew_artmediumopt, sizeof(cfslew_artmediumopt) },
    { &cfgmax_artmediumopt, sizeof(cfgmax_artmediumopt) },
    { &oprep_active, sizeof(oprep_active) },
    { &oprep_rest, sizeof(oprep_rest) },
    { &opdda, sizeof(opdda) },
    { &opinit_state, sizeof(opinit_state) },
    { &opfMRIPDTYPE, sizeof(opfMRIPDTYPE) },
    { &opview_order, sizeof(opview_order) },
    { &opslice_order, sizeof(opslice_order) },
    { &oppsd_trig, sizeof(oppsd_trig) },
    { &oppdgm_str, sizeof(oppdgm_str) },
    { &opbwrt, sizeof(opbwrt) },
    { &cont_flag, sizeof(cont_flag) },
    { &opautonecho, sizeof(opautonecho) },
    { &opnecho, sizeof(opnecho) },
    { &opnshots, sizeof(opnshots) },
    { &opautote, sizeof(opautote) },
    { &opte, sizeof(opte) },
    { &opte2, sizeof(opte2) },
    { &optefw, sizeof(optefw) },
    { &opti, sizeof(opti) },
    { &opbspti, sizeof(opbspti) },
    { &opautoti, sizeof(opautoti) },
    { &opautobti, sizeof(opautobti) },
    { &optrecovery, sizeof(optrecovery) },
    { &optlabel, sizeof(optlabel) },
    { &opt2prepte, sizeof(opt2prepte) },
    { &opautotr, sizeof(opautotr) },
    { &opnspokes, sizeof(opnspokes) },
    { &opoversamplingfactor, sizeof(opoversamplingfactor) },
    { &opacs, sizeof(opacs) },
    { &opharmonize, sizeof(opharmonize) },
    { &pieffbladewidth, sizeof(pieffbladewidth) },
    { &opinrangetr, sizeof(opinrangetr) },
    { &opinrangetrmin, sizeof(opinrangetrmin) },
    { &opinrangetrmax, sizeof(opinrangetrmax) },
    { &optr, sizeof(optr) },
    { &opflip, sizeof(opflip) },
    { &opautoflip, sizeof(opautoflip) },
    { &opautoetl, sizeof(opautoetl) },
    { &opetl, sizeof(opetl) },
    { &opautorbw, sizeof(opautorbw) },
    { &oprbw, sizeof(oprbw) },
    { &oprbw2, sizeof(oprbw2) },
    { &opfov, sizeof(opfov) },
    { &opphasefov, sizeof(opphasefov) },
    { &opnpwfactor, sizeof(opnpwfactor) },
    { &opfreqfov, sizeof(opfreqfov) },
    { &opautoslquant, sizeof(opautoslquant) },
    { &opslquant, sizeof(opslquant) },
    { &opsllocs, sizeof(opsllocs) },
    { &opslthick, sizeof(opslthick) },
    { &opslspace, sizeof(opslspace) },
    { &opileave, sizeof(opileave) },
    { &opcoax, sizeof(opcoax) },
    { &opvthick, sizeof(opvthick) },
    { &opvquant, sizeof(opvquant) },
    { &opovl, sizeof(opovl) },
    { &oplenrl, sizeof(oplenrl) },
    { &oplenap, sizeof(oplenap) },
    { &oplensi, sizeof(oplensi) },
    { &oplocrl, sizeof(oplocrl) },
    { &oplocap, sizeof(oplocap) },
    { &oplocsi, sizeof(oplocsi) },
    { &oprlcsiis, sizeof(oprlcsiis) },
    { &opapcsiis, sizeof(opapcsiis) },
    { &opsicsiis, sizeof(opsicsiis) },
    { &opmonfov, sizeof(opmonfov) },
    { &opmonthick, sizeof(opmonthick) },
    { &opinittrigdelay, sizeof(opinittrigdelay) },
    { &opxres, sizeof(opxres) },
    { &opyres, sizeof(opyres) },
    { &opautonex, sizeof(opautonex) },
    { &opnex, sizeof(opnex) },
    { &opslicecnt, sizeof(opslicecnt) },
    { &opnbh, sizeof(opnbh) },
    { &opspf, sizeof(opspf) },
    { &opcfsel, sizeof(opcfsel) },
    { &opfcaxis, sizeof(opfcaxis) },
    { &opphcor, sizeof(opphcor) },
    { &opdose, sizeof(opdose) },
    { &opcontrast, sizeof(opcontrast) },
    { &opchrate, sizeof(opchrate) },
    { &opcphases, sizeof(opcphases) },
    { &opaphases, sizeof(opaphases) },
    { &opclocs, sizeof(opclocs) },
    { &ophrate, sizeof(ophrate) },
    { &oparr, sizeof(oparr) },
    { &ophrep, sizeof(ophrep) },
    { &opautotdel1, sizeof(opautotdel1) },
    { &optdel1, sizeof(optdel1) },
    { &optseq, sizeof(optseq) },
    { &opphases, sizeof(opphases) },
    { &opcardseq, sizeof(opcardseq) },
    { &opmphases, sizeof(opmphases) },
    { &oparrmon, sizeof(oparrmon) },
    { &opvps, sizeof(opvps) },
    { &opautovps, sizeof(opautovps) },
    { &opcgatetype, sizeof(opcgatetype) },
    { &opadvgate, sizeof(opadvgate) },
    { &opfcine, sizeof(opfcine) },
    { &opcineir, sizeof(opcineir) },
    { &opstress, sizeof(opstress) },
    { &opnrr, sizeof(opnrr) },
    { &opnrr_dda, sizeof(opnrr_dda) },
    { &oprtcgate, sizeof(oprtcgate) },
    { &oprtrate, sizeof(oprtrate) },
    { &oprtrep, sizeof(oprtrep) },
    { &oprttdel1, sizeof(oprttdel1) },
    { &oprttseq, sizeof(oprttseq) },
    { &oprtcardseq, sizeof(oprtcardseq) },
    { &oprtarr, sizeof(oprtarr) },
    { &oprtpoint, sizeof(oprtpoint) },
    { &opnavrrmeas, sizeof(opnavrrmeas) },
    { &opnavrrmeastime, sizeof(opnavrrmeastime) },
    { &opnavrrmeasrr, sizeof(opnavrrmeasrr) },
    { &opnavsltrack, sizeof(opnavsltrack) },
    { &opnavautoaccwin, sizeof(opnavautoaccwin) },
    { &opnavaccwin, sizeof(opnavaccwin) },
    { &opnavautotrigtime, sizeof(opnavautotrigtime) },
    { &opnavpsctime, sizeof(opnavpsctime) },
    { &opnavmaxinterval, sizeof(opnavmaxinterval) },
    { &opnavtype, sizeof(opnavtype) },
    { &opnavpscpause, sizeof(opnavpscpause) },
    { &opnavsigenhance, sizeof(opnavsigenhance) },
    { &opasset, sizeof(opasset) },
    { &opassetcal, sizeof(opassetcal) },
    { &opassetscan, sizeof(opassetscan) },
    { &rhcoilno, sizeof(rhcoilno) },
    { &rhcal_options, sizeof(rhcal_options) },
    { &rhasset, sizeof(rhasset) },
    { &rhasset_calthresh, sizeof(rhasset_calthresh) },
    { &rhasset_R, sizeof(rhasset_R) },
    { &rhasset_phases, sizeof(rhasset_phases) },
    { &rhscancent, sizeof(rhscancent) },
    { &rhasset_alt_cal, sizeof(rhasset_alt_cal) },
    { &rhasset_torso, sizeof(rhasset_torso) },
    { &rhasset_localTx, sizeof(rhasset_localTx) },
    { &rhasset_TuningFactor, sizeof(rhasset_TuningFactor) },
    { &rhasset_SnrMin, sizeof(rhasset_SnrMin) },
    { &rhasset_SnrMax, sizeof(rhasset_SnrMax) },
    { &rhasset_SnrScalar, sizeof(rhasset_SnrScalar) },
    { &oppure, sizeof(oppure) },
    { &rhpure, sizeof(rhpure) },
    { &oppurecal, sizeof(oppurecal) },
    { &rhpurechannel, sizeof(rhpurechannel) },
    { &rhpurefilter, sizeof(rhpurefilter) },
    { &rhpure_scale_factor, sizeof(rhpure_scale_factor) },
    { &cfpure_filtering_mode, sizeof(cfpure_filtering_mode) },
    { &rhpure_filtering_mode, sizeof(rhpure_filtering_mode) },
    { &rhpure_lambda, sizeof(rhpure_lambda) },
    { &rhpure_tuning_factor_surface, sizeof(rhpure_tuning_factor_surface) },
    { &rhpure_tuning_factor_body, sizeof(rhpure_tuning_factor_body) },
    { &rhpure_derived_cal_fraction, sizeof(rhpure_derived_cal_fraction) },
    { &rhpure_cal_reapodization, sizeof(rhpure_cal_reapodization) },
    { &opcalrequired, sizeof(opcalrequired) },
    { &rhpure_blur_enable, sizeof(rhpure_blur_enable) },
    { &rhpure_blur, sizeof(rhpure_blur) },
    { &rhpure_mix_lambda, sizeof(rhpure_mix_lambda) },
    { &rhpure_mix_tuning_factor_surface, sizeof(rhpure_mix_tuning_factor_surface) },
    { &rhpure_mix_tuning_factor_body, sizeof(rhpure_mix_tuning_factor_body) },
    { &rhpure_mix_blur_enable, sizeof(rhpure_mix_blur_enable) },
    { &rhpure_mix_blur, sizeof(rhpure_mix_blur) },
    { &rhpure_mix_alpha, sizeof(rhpure_mix_alpha) },
    { &rhpure_mix_otsu_class_qty, sizeof(rhpure_mix_otsu_class_qty) },
    { &rhpure_mix_exp_wt, sizeof(rhpure_mix_exp_wt) },
    { &rhpure_mix_erode_dist, sizeof(rhpure_mix_erode_dist) },
    { &rhpure_mix_dilate_dist, sizeof(rhpure_mix_dilate_dist) },
    { &rhpure_mix_aniso_blur, sizeof(rhpure_mix_aniso_blur) },
    { &rhpure_mix_aniso_erode_dist, sizeof(rhpure_mix_aniso_erode_dist) },
    { &rhpure_mix_aniso_dilate_dist, sizeof(rhpure_mix_aniso_dilate_dist) },
    { &opcalmode, sizeof(opcalmode) },
    { &rhcalmode, sizeof(rhcalmode) },
    { &opcaldelay, sizeof(opcaldelay) },
    { &rhcal_pass_set_vector, sizeof(rhcal_pass_set_vector) },
    { &rhcal_nex_vector, sizeof(rhcal_nex_vector) },
    { &rhcal_weight_vector, sizeof(rhcal_weight_vector) },
    { &sifsetwokey, sizeof(sifsetwokey) },
    { &opautosldelay, sizeof(opautosldelay) },
    { &specnuc, sizeof(specnuc) },
    { &specpts, sizeof(specpts) },
    { &specwidth, sizeof(specwidth) },
    { &specnavs, sizeof(specnavs) },
    { &specnex, sizeof(specnex) },
    { &specdwells, sizeof(specdwells) },
    { &acquire_type, sizeof(acquire_type) },
    { &pixmtband, sizeof(pixmtband) },
    { &pibbandfilt, sizeof(pibbandfilt) },
    { &opwarmup, sizeof(opwarmup) },
    { &pscahead, sizeof(pscahead) },
    { &opprescanopt, sizeof(opprescanopt) },
    { &autoadvtoscn, sizeof(autoadvtoscn) },
    { &opapa, sizeof(opapa) },
    { &oppscapa, sizeof(oppscapa) },
    { &PSslice_ind, sizeof(PSslice_ind) },
    { &oppscshimtg, sizeof(oppscshimtg) },
    { &opdyntg, sizeof(opdyntg) },
    { &dynTG_fov, sizeof(dynTG_fov) },
    { &dynTG_slquant, sizeof(dynTG_slquant) },
    { &dynTG_flipangle, sizeof(dynTG_flipangle) },
    { &dynTG_slthick, sizeof(dynTG_slthick) },
    { &dynTG_xres, sizeof(dynTG_xres) },
    { &dynTG_yres, sizeof(dynTG_yres) },
    { &dynTG_baseline, sizeof(dynTG_baseline) },
    { &dynTG_ptsize, sizeof(dynTG_ptsize) },
    { &dynTG_b1factor, sizeof(dynTG_b1factor) },
    { &rfshim_fov, sizeof(rfshim_fov) },
    { &rfshim_slquant, sizeof(rfshim_slquant) },
    { &rfshim_flipangle, sizeof(rfshim_flipangle) },
    { &rfshim_slthick, sizeof(rfshim_slthick) },
    { &rfshim_xres, sizeof(rfshim_xres) },
    { &rfshim_yres, sizeof(rfshim_yres) },
    { &rfshim_baseline, sizeof(rfshim_baseline) },
    { &rfshim_ptsize, sizeof(rfshim_ptsize) },
    { &rfshim_b1factor, sizeof(rfshim_b1factor) },
    { &cal_xres, sizeof(cal_xres) },
    { &cal_yres, sizeof(cal_yres) },
    { &cal_slq, sizeof(cal_slq) },
    { &cal_nex, sizeof(cal_nex) },
    { &cal_interleave, sizeof(cal_interleave) },
    { &cal_fov, sizeof(cal_fov) },
    { &cal_slthick, sizeof(cal_slthick) },
    { &cal_pass, sizeof(cal_pass) },
    { &coil_xres, sizeof(coil_xres) },
    { &coil_yres, sizeof(coil_yres) },
    { &coil_slq, sizeof(coil_slq) },
    { &coil_nex, sizeof(coil_nex) },
    { &coil_fov, sizeof(coil_fov) },
    { &coil_slthick, sizeof(coil_slthick) },
    { &coil_pass, sizeof(coil_pass) },
    { &coil_interleave, sizeof(coil_interleave) },
    { &asfov, sizeof(asfov) },
    { &asslquant, sizeof(asslquant) },
    { &asflip, sizeof(asflip) },
    { &asslthick, sizeof(asslthick) },
    { &asxres, sizeof(asxres) },
    { &asyres, sizeof(asyres) },
    { &asbaseline, sizeof(asbaseline) },
    { &asrhblank, sizeof(asrhblank) },
    { &asptsize, sizeof(asptsize) },
    { &opascalcfov, sizeof(opascalcfov) },
    { &tgfov, sizeof(tgfov) },
    { &tgcap, sizeof(tgcap) },
    { &tgwindow, sizeof(tgwindow) },
    { &oppscvquant, sizeof(oppscvquant) },
    { &opdrivemode, sizeof(opdrivemode) },
    { &pidrivemodenub, sizeof(pidrivemodenub) },
    { &opexcitemode, sizeof(opexcitemode) },
    { &lp_stretch, sizeof(lp_stretch) },
    { &lp_mode, sizeof(lp_mode) },
    { &derateb1_body_factor, sizeof(derateb1_body_factor) },
    { &SAR_bodyNV_weight_lim, sizeof(SAR_bodyNV_weight_lim) },
    { &derateb1_NV_factor, sizeof(derateb1_NV_factor) },
    { &jstd_multiplier_body, sizeof(jstd_multiplier_body) },
    { &jstd_multiplier_NV, sizeof(jstd_multiplier_NV) },
    { &jstd_exponent_body, sizeof(jstd_exponent_body) },
    { &jstd_exponent_NV, sizeof(jstd_exponent_NV) },
    { &pidiffmode, sizeof(pidiffmode) },
    { &pifmriscrn, sizeof(pifmriscrn) },
    { &piresol, sizeof(piresol) },
    { &pioverlap, sizeof(pioverlap) },
    { &piforkvrgf, sizeof(piforkvrgf) },
    { &pinofreqoffset, sizeof(pinofreqoffset) },
    { &pirepactivenub, sizeof(pirepactivenub) },
    { &pireprestnub, sizeof(pireprestnub) },
    { &piddanub, sizeof(piddanub) },
    { &piinitstatnub, sizeof(piinitstatnub) },
    { &piviewordernub, sizeof(piviewordernub) },
    { &pisliceordnub, sizeof(pisliceordnub) },
    { &pipsdtrignub, sizeof(pipsdtrignub) },
    { &pispssupnub, sizeof(pispssupnub) },
    { &pi_neg_sp, sizeof(pi_neg_sp) },
    { &piisvaldef, sizeof(piisvaldef) },
    { &pi2dmde, sizeof(pi2dmde) },
    { &pidmode, sizeof(pidmode) },
    { &piviews, sizeof(piviews) },
    { &piclckcnt, sizeof(piclckcnt) },
    { &avmintscan, sizeof(avmintscan) },
    { &pitslice, sizeof(pitslice) },
    { &pitscan, sizeof(pitscan) },
    { &pimscan, sizeof(pimscan) },
    { &pivsscan, sizeof(pivsscan) },
    { &pireconlag, sizeof(pireconlag) },
    { &pitres, sizeof(pitres) },
    { &pitres2, sizeof(pitres2) },
    { &pisaveinter, sizeof(pisaveinter) },
    { &pivextras, sizeof(pivextras) },
    { &pinecho, sizeof(pinecho) },
    { &piscancenter, sizeof(piscancenter) },
    { &pilandmark, sizeof(pilandmark) },
    { &pitableposition, sizeof(pitableposition) },
    { &pismode, sizeof(pismode) },
    { &pishldctrl, sizeof(pishldctrl) },
    { &pinolr, sizeof(pinolr) },
    { &pinoadc, sizeof(pinoadc) },
    { &pimixtime, sizeof(pimixtime) },
    { &pishim2, sizeof(pishim2) },
    { &pi1stshimb, sizeof(pi1stshimb) },
    { &pifractecho, sizeof(pifractecho) },
    { &nope, sizeof(nope) },
    { &opuser_usage_tag, sizeof(opuser_usage_tag) },
    { &rhuser_usage_tag, sizeof(rhuser_usage_tag) },
    { &rhFillMapMSW, sizeof(rhFillMapMSW) },
    { &rhFillMapLSW, sizeof(rhFillMapLSW) },
    { &rhbline, sizeof(rhbline) },
    { &rhblank, sizeof(rhblank) },
    { &rhnex, sizeof(rhnex) },
    { &rhnavs, sizeof(rhnavs) },
    { &rhnslices, sizeof(rhnslices) },
    { &rhnrefslices, sizeof(rhnrefslices) },
    { &rhnframes, sizeof(rhnframes) },
    { &rhfrsize, sizeof(rhfrsize) },
    { &rhnecho, sizeof(rhnecho) },
    { &rhnphases, sizeof(rhnphases) },
    { &rhmphasetype, sizeof(rhmphasetype) },
    { &rhtrickstype, sizeof(rhtrickstype) },
    { &rhtype, sizeof(rhtype) },
    { &rhtype1, sizeof(rhtype1) },
    { &rhformat, sizeof(rhformat) },
    { &rhptsize, sizeof(rhptsize) },
    { &rhnpomp, sizeof(rhnpomp) },
    { &rhrcctrl, sizeof(rhrcctrl) },
    { &rhdacqctrl, sizeof(rhdacqctrl) },
    { &rhexecctrl, sizeof(rhexecctrl) },
    { &rhfdctrl, sizeof(rhfdctrl) },
    { &rhxoff, sizeof(rhxoff) },
    { &rhyoff, sizeof(rhyoff) },
    { &rhrecon, sizeof(rhrecon) },
    { &rhdatacq, sizeof(rhdatacq) },
    { &rhvquant, sizeof(rhvquant) },
    { &rhslblank, sizeof(rhslblank) },
    { &rhhnover, sizeof(rhhnover) },
    { &rhfeextra, sizeof(rhfeextra) },
    { &rhheover, sizeof(rhheover) },
    { &rhoscans, sizeof(rhoscans) },
    { &rhddaover, sizeof(rhddaover) },
    { &rhzeroph, sizeof(rhzeroph) },
    { &rhalpha, sizeof(rhalpha) },
    { &rhnwin, sizeof(rhnwin) },
    { &rhntran, sizeof(rhntran) },
    { &rhherawflt, sizeof(rhherawflt) },
    { &rhherawflt_befnwin, sizeof(rhherawflt_befnwin) },
    { &rhherawflt_befntran, sizeof(rhherawflt_befntran) },
    { &rhherawflt_befamp, sizeof(rhherawflt_befamp) },
    { &rhherawflt_hpfamp, sizeof(rhherawflt_hpfamp) },
    { &rhfermw, sizeof(rhfermw) },
    { &rhfermr, sizeof(rhfermr) },
    { &rhferme, sizeof(rhferme) },
    { &rhclipmin, sizeof(rhclipmin) },
    { &rhclipmax, sizeof(rhclipmax) },
    { &rhdoffset, sizeof(rhdoffset) },
    { &rhudasave, sizeof(rhudasave) },
    { &rhsspsave, sizeof(rhsspsave) },
    { &rh2dscale, sizeof(rh2dscale) },
    { &rh3dscale, sizeof(rh3dscale) },
    { &rhnpasses, sizeof(rhnpasses) },
    { &rhincrpass, sizeof(rhincrpass) },
    { &rhinitpass, sizeof(rhinitpass) },
    { &rhmethod, sizeof(rhmethod) },
    { &rhdaxres, sizeof(rhdaxres) },
    { &rhdayres, sizeof(rhdayres) },
    { &rhrcxres, sizeof(rhrcxres) },
    { &rhrcyres, sizeof(rhrcyres) },
    { &rhimsize, sizeof(rhimsize) },
    { &rhnoncart_dual_traj, sizeof(rhnoncart_dual_traj) },
    { &rhnoncart_traj_kmax_ratio, sizeof(rhnoncart_traj_kmax_ratio) },
    { &rhnspokes_lowres, sizeof(rhnspokes_lowres) },
    { &rhnspokes_highres, sizeof(rhnspokes_highres) },
    { &rhnoncart_traj_merge_start, sizeof(rhnoncart_traj_merge_start) },
    { &rhnoncart_traj_merge_end, sizeof(rhnoncart_traj_merge_end) },
    { &rhoversamplingfactor, sizeof(rhoversamplingfactor) },
    { &rhnoncart_grid_factor, sizeof(rhnoncart_grid_factor) },
    { &rhnoncart_traj_mode, sizeof(rhnoncart_traj_mode) },
    { &rhviewSharing3D, sizeof(rhviewSharing3D) },
    { &rhdaviewsPerBlade, sizeof(rhdaviewsPerBlade) },
    { &rhrotationThreshold, sizeof(rhrotationThreshold) },
    { &rhshiftThreshold, sizeof(rhshiftThreshold) },
    { &rhcorrelationThreshold, sizeof(rhcorrelationThreshold) },
    { &rhphaseCorrFiltFreqRadius, sizeof(rhphaseCorrFiltFreqRadius) },
    { &rhphaseCorrFiltPhaseRadius, sizeof(rhphaseCorrFiltPhaseRadius) },
    { &rhnpwfactor, sizeof(rhnpwfactor) },
    { &rhuser0, sizeof(rhuser0) },
    { &rhuser1, sizeof(rhuser1) },
    { &rhuser2, sizeof(rhuser2) },
    { &rhuser3, sizeof(rhuser3) },
    { &rhuser4, sizeof(rhuser4) },
    { &rhuser5, sizeof(rhuser5) },
    { &rhuser6, sizeof(rhuser6) },
    { &rhuser7, sizeof(rhuser7) },
    { &rhuser8, sizeof(rhuser8) },
    { &rhuser9, sizeof(rhuser9) },
    { &rhuser10, sizeof(rhuser10) },
    { &rhuser11, sizeof(rhuser11) },
    { &rhuser12, sizeof(rhuser12) },
    { &rhuser13, sizeof(rhuser13) },
    { &rhuser14, sizeof(rhuser14) },
    { &rhuser15, sizeof(rhuser15) },
    { &rhuser16, sizeof(rhuser16) },
    { &rhuser17, sizeof(rhuser17) },
    { &rhuser18, sizeof(rhuser18) },
    { &rhuser19, sizeof(rhuser19) },
    { &rhuser20, sizeof(rhuser20) },
    { &rhuser21, sizeof(rhuser21) },
    { &rhuser22, sizeof(rhuser22) },
    { &rhuser23, sizeof(rhuser23) },
    { &rhuser24, sizeof(rhuser24) },
    { &rhuser25, sizeof(rhuser25) },
    { &rhuser26, sizeof(rhuser26) },
    { &rhuser27, sizeof(rhuser27) },
    { &rhuser28, sizeof(rhuser28) },
    { &rhuser29, sizeof(rhuser29) },
    { &rhuser30, sizeof(rhuser30) },
    { &rhuser31, sizeof(rhuser31) },
    { &rhuser32, sizeof(rhuser32) },
    { &rhuser33, sizeof(rhuser33) },
    { &rhuser34, sizeof(rhuser34) },
    { &rhuser35, sizeof(rhuser35) },
    { &rhuser36, sizeof(rhuser36) },
    { &rhuser37, sizeof(rhuser37) },
    { &rhuser38, sizeof(rhuser38) },
    { &rhuser39, sizeof(rhuser39) },
    { &rhuser40, sizeof(rhuser40) },
    { &rhuser41, sizeof(rhuser41) },
    { &rhuser42, sizeof(rhuser42) },
    { &rhuser43, sizeof(rhuser43) },
    { &rhuser44, sizeof(rhuser44) },
    { &rhuser45, sizeof(rhuser45) },
    { &rhuser46, sizeof(rhuser46) },
    { &rhuser47, sizeof(rhuser47) },
    { &rhuser48, sizeof(rhuser48) },
    { &rhdab0s, sizeof(rhdab0s) },
    { &rhdab0e, sizeof(rhdab0e) },
    { &rhctr, sizeof(rhctr) },
    { &rhcrrtime, sizeof(rhcrrtime) },
    { &rhcphases, sizeof(rhcphases) },
    { &rhaphases, sizeof(rhaphases) },
    { &rhovl, sizeof(rhovl) },
    { &rhvtype, sizeof(rhvtype) },
    { &rhvenc, sizeof(rhvenc) },
    { &rhvcoefxa, sizeof(rhvcoefxa) },
    { &rhvcoefxb, sizeof(rhvcoefxb) },
    { &rhvcoefxc, sizeof(rhvcoefxc) },
    { &rhvcoefxd, sizeof(rhvcoefxd) },
    { &rhvcoefya, sizeof(rhvcoefya) },
    { &rhvcoefyb, sizeof(rhvcoefyb) },
    { &rhvcoefyc, sizeof(rhvcoefyc) },
    { &rhvcoefyd, sizeof(rhvcoefyd) },
    { &rhvcoefza, sizeof(rhvcoefza) },
    { &rhvcoefzb, sizeof(rhvcoefzb) },
    { &rhvcoefzc, sizeof(rhvcoefzc) },
    { &rhvcoefzd, sizeof(rhvcoefzd) },
    { &rhvmcoef1, sizeof(rhvmcoef1) },
    { &rhvmcoef2, sizeof(rhvmcoef2) },
    { &rhvmcoef3, sizeof(rhvmcoef3) },
    { &rhvmcoef4, sizeof(rhvmcoef4) },
    { &rhphasescale, sizeof(rhphasescale) },
    { &rhfreqscale, sizeof(rhfreqscale) },
    { &rawmode, sizeof(rawmode) },
    { &rhileaves, sizeof(rhileaves) },
    { &rhkydir, sizeof(rhkydir) },
    { &rhalt, sizeof(rhalt) },
    { &rhreps, sizeof(rhreps) },
    { &rhref, sizeof(rhref) },
    { &rhpcthrespts, sizeof(rhpcthrespts) },
    { &rhpcthrespct, sizeof(rhpcthrespct) },
    { &rhpcdiscbeg, sizeof(rhpcdiscbeg) },
    { &rhpcdiscmid, sizeof(rhpcdiscmid) },
    { &rhpcdiscend, sizeof(rhpcdiscend) },
    { &rhpcileave, sizeof(rhpcileave) },
    { &rhpcextcorr, sizeof(rhpcextcorr) },
    { &rhrefframes, sizeof(rhrefframes) },
    { &rhpcsnore, sizeof(rhpcsnore) },
    { &rhpcspacial, sizeof(rhpcspacial) },
    { &rhpctemporal, sizeof(rhpctemporal) },
    { &rhpcbestky, sizeof(rhpcbestky) },
    { &rhhdbestky, sizeof(rhhdbestky) },
    { &rhpcinvft, sizeof(rhpcinvft) },
    { &rhpcctrl, sizeof(rhpcctrl) },
    { &rhpctest, sizeof(rhpctest) },
    { &rhpcgraph, sizeof(rhpcgraph) },
    { &rhpclin, sizeof(rhpclin) },
    { &rhpclinnorm, sizeof(rhpclinnorm) },
    { &rhpclinnpts, sizeof(rhpclinnpts) },
    { &rhpclinorder, sizeof(rhpclinorder) },
    { &rhpclinfitwt, sizeof(rhpclinfitwt) },
    { &rhpclinavg, sizeof(rhpclinavg) },
    { &rhpccon, sizeof(rhpccon) },
    { &rhpcconnorm, sizeof(rhpcconnorm) },
    { &rhpcconnpts, sizeof(rhpcconnpts) },
    { &rhpcconorder, sizeof(rhpcconorder) },
    { &rhpcconfitwt, sizeof(rhpcconfitwt) },
    { &rhvrgfxres, sizeof(rhvrgfxres) },
    { &rhvrgf, sizeof(rhvrgf) },
    { &rhbp_corr, sizeof(rhbp_corr) },
    { &rhrecv_freq_s, sizeof(rhrecv_freq_s) },
    { &rhrecv_freq_e, sizeof(rhrecv_freq_e) },
    { &rhhniter, sizeof(rhhniter) },
    { &rhfast_rec, sizeof(rhfast_rec) },
    { &rhgridcontrol, sizeof(rhgridcontrol) },
    { &rhb0map, sizeof(rhb0map) },
    { &rhtediff, sizeof(rhtediff) },
    { &rhradiusa, sizeof(rhradiusa) },
    { &rhradiusb, sizeof(rhradiusb) },
    { &rhmaxgrad, sizeof(rhmaxgrad) },
    { &rhslewmax, sizeof(rhslewmax) },
    { &rhscanfov, sizeof(rhscanfov) },
    { &rhtsamp, sizeof(rhtsamp) },
    { &rhdensityfactor, sizeof(rhdensityfactor) },
    { &rhdispfov, sizeof(rhdispfov) },
    { &rhmotioncomp, sizeof(rhmotioncomp) },
    { &grid_fov_factor, sizeof(grid_fov_factor) },
    { &rhte, sizeof(rhte) },
    { &rhte2, sizeof(rhte2) },
    { &rhdfm, sizeof(rhdfm) },
    { &rhdfmnavsperpass, sizeof(rhdfmnavsperpass) },
    { &rhdfmnavsperview, sizeof(rhdfmnavsperview) },
    { &rhdfmrbw, sizeof(rhdfmrbw) },
    { &rhdfmptsize, sizeof(rhdfmptsize) },
    { &rhdfmxres, sizeof(rhdfmxres) },
    { &rhdfmdebug, sizeof(rhdfmdebug) },
    { &rhdfmthreshold, sizeof(rhdfmthreshold) },
    { &rh_rc_enhance_enable, sizeof(rh_rc_enhance_enable) },
    { &rh_ime_scic_enable, sizeof(rh_ime_scic_enable) },
    { &rh_ime_scic_edge, sizeof(rh_ime_scic_edge) },
    { &rh_ime_scic_smooth, sizeof(rh_ime_scic_smooth) },
    { &rh_ime_scic_focus, sizeof(rh_ime_scic_focus) },
    { &rh_ime_clariview_type, sizeof(rh_ime_clariview_type) },
    { &rh_ime_clariview_edge, sizeof(rh_ime_clariview_edge) },
    { &rh_ime_clariview_smooth, sizeof(rh_ime_clariview_smooth) },
    { &rh_ime_clariview_focus, sizeof(rh_ime_clariview_focus) },
    { &rh_ime_definefilter_nr, sizeof(rh_ime_definefilter_nr) },
    { &rh_ime_definefilter_sh, sizeof(rh_ime_definefilter_sh) },
    { &rh_ime_scic_reduction, sizeof(rh_ime_scic_reduction) },
    { &rh_ime_scic_gauss, sizeof(rh_ime_scic_gauss) },
    { &rh_ime_scic_threshold, sizeof(rh_ime_scic_threshold) },
    { &rh_ime_scic_contrast, sizeof(rh_ime_scic_contrast) },
    { &cfscic_allowed, sizeof(cfscic_allowed) },
    { &cfscic_edge, sizeof(cfscic_edge) },
    { &cfscic_smooth, sizeof(cfscic_smooth) },
    { &cfscic_focus, sizeof(cfscic_focus) },
    { &cfscic_reduction, sizeof(cfscic_reduction) },
    { &cfscic_gauss, sizeof(cfscic_gauss) },
    { &cfscic_threshold, sizeof(cfscic_threshold) },
    { &cfscic_contrast, sizeof(cfscic_contrast) },
    { &piscic, sizeof(piscic) },
    { &cfscenic, sizeof(cfscenic) },
    { &piscenic, sizeof(piscenic) },
    { &opscenic, sizeof(opscenic) },
    { &rhscenic_type, sizeof(rhscenic_type) },
    { &cfn4_allowed, sizeof(cfn4_allowed) },
    { &cfn4_slice_down_sample_rate, sizeof(cfn4_slice_down_sample_rate) },
    { &cfn4_inplane_down_sample_rate, sizeof(cfn4_inplane_down_sample_rate) },
    { &cfn4_num_levels_max, sizeof(cfn4_num_levels_max) },
    { &cfn4_num_iterations_max, sizeof(cfn4_num_iterations_max) },
    { &cfn4_convergence_threshold, sizeof(cfn4_convergence_threshold) },
    { &cfn4_gain_clamp_mode, sizeof(cfn4_gain_clamp_mode) },
    { &cfn4_gain_clamp_value, sizeof(cfn4_gain_clamp_value) },
    { &rhn4_slice_down_sample_rate, sizeof(rhn4_slice_down_sample_rate) },
    { &rhn4_inplane_down_sample_rate, sizeof(rhn4_inplane_down_sample_rate) },
    { &rhn4_num_levels_max, sizeof(rhn4_num_levels_max) },
    { &rhn4_num_iterations_max, sizeof(rhn4_num_iterations_max) },
    { &rhn4_convergence_threshold, sizeof(rhn4_convergence_threshold) },
    { &rhn4_gain_clamp_mode, sizeof(rhn4_gain_clamp_mode) },
    { &rhn4_gain_clamp_value, sizeof(rhn4_gain_clamp_value) },
    { &rhpure_gain_clamp_mode, sizeof(rhpure_gain_clamp_mode) },
    { &rhpure_gain_clamp_value, sizeof(rhpure_gain_clamp_value) },
    { &rhphsen_pixel_offset, sizeof(rhphsen_pixel_offset) },
    { &rhapp, sizeof(rhapp) },
    { &rhapp_option, sizeof(rhapp_option) },
    { &rhncoilsel, sizeof(rhncoilsel) },
    { &rhncoillimit, sizeof(rhncoillimit) },
    { &rhrefframep, sizeof(rhrefframep) },
    { &rhscnframe, sizeof(rhscnframe) },
    { &rhpasframe, sizeof(rhpasframe) },
    { &rhpcfitorig, sizeof(rhpcfitorig) },
    { &rhpcshotfirst, sizeof(rhpcshotfirst) },
    { &rhpcshotlast, sizeof(rhpcshotlast) },
    { &rhpcmultegrp, sizeof(rhpcmultegrp) },
    { &rhpclinfix, sizeof(rhpclinfix) },
    { &rhpclinslope, sizeof(rhpclinslope) },
    { &rhpcconfix, sizeof(rhpcconfix) },
    { &rhpcconslope, sizeof(rhpcconslope) },
    { &rhpccoil, sizeof(rhpccoil) },
    { &rhmaxcoef1a, sizeof(rhmaxcoef1a) },
    { &rhmaxcoef1b, sizeof(rhmaxcoef1b) },
    { &rhmaxcoef1c, sizeof(rhmaxcoef1c) },
    { &rhmaxcoef1d, sizeof(rhmaxcoef1d) },
    { &rhmaxcoef2a, sizeof(rhmaxcoef2a) },
    { &rhmaxcoef2b, sizeof(rhmaxcoef2b) },
    { &rhmaxcoef2c, sizeof(rhmaxcoef2c) },
    { &rhmaxcoef2d, sizeof(rhmaxcoef2d) },
    { &rhmaxcoef3a, sizeof(rhmaxcoef3a) },
    { &rhmaxcoef3b, sizeof(rhmaxcoef3b) },
    { &rhmaxcoef3c, sizeof(rhmaxcoef3c) },
    { &rhmaxcoef3d, sizeof(rhmaxcoef3d) },
    { &rhdptype, sizeof(rhdptype) },
    { &rhnumbvals, sizeof(rhnumbvals) },
    { &rhdifnext2, sizeof(rhdifnext2) },
    { &rhnumdifdirs, sizeof(rhnumdifdirs) },
    { &rhutctrl, sizeof(rhutctrl) },
    { &rhzipfact, sizeof(rhzipfact) },
    { &rhfcinemode, sizeof(rhfcinemode) },
    { &rhfcinearw, sizeof(rhfcinearw) },
    { &rhvps, sizeof(rhvps) },
    { &rhvvsaimgs, sizeof(rhvvsaimgs) },
    { &rhvvstr, sizeof(rhvvstr) },
    { &rhvvsgender, sizeof(rhvvsgender) },
    { &rhgradmode, sizeof(rhgradmode) },
    { &rhfatwater, sizeof(rhfatwater) },
    { &rhfiesta, sizeof(rhfiesta) },
    { &rhlcfiesta, sizeof(rhlcfiesta) },
    { &rhlcfiesta_phase, sizeof(rhlcfiesta_phase) },
    { &rhdwnavview, sizeof(rhdwnavview) },
    { &rhdwnavcorecho, sizeof(rhdwnavcorecho) },
    { &rhdwnavsview, sizeof(rhdwnavsview) },
    { &rhdwnaveview, sizeof(rhdwnaveview) },
    { &rhdwnavsshot, sizeof(rhdwnavsshot) },
    { &rhdwnaveshot, sizeof(rhdwnaveshot) },
    { &rhdwnavcoeff, sizeof(rhdwnavcoeff) },
    { &rhdwnavcor, sizeof(rhdwnavcor) },
    { &rhassetsl_R, sizeof(rhassetsl_R) },
    { &rhasset_slwrap, sizeof(rhasset_slwrap) },
    { &rh3dwintype, sizeof(rh3dwintype) },
    { &rh3dwina, sizeof(rh3dwina) },
    { &rh3dwinq, sizeof(rh3dwinq) },
    { &rhectricks_num_regions, sizeof(rhectricks_num_regions) },
    { &rhectricks_input_regions, sizeof(rhectricks_input_regions) },
    { &rhretro_control, sizeof(rhretro_control) },
    { &rhetl, sizeof(rhetl) },
    { &rhleft_blank, sizeof(rhleft_blank) },
    { &rhright_blank, sizeof(rhright_blank) },
    { &rhspecwidth, sizeof(rhspecwidth) },
    { &rhspeccsidims, sizeof(rhspeccsidims) },
    { &rhspecrescsix, sizeof(rhspecrescsix) },
    { &rhspecrescsiy, sizeof(rhspecrescsiy) },
    { &rhspecrescsiz, sizeof(rhspecrescsiz) },
    { &rhspecroilenx, sizeof(rhspecroilenx) },
    { &rhspecroileny, sizeof(rhspecroileny) },
    { &rhspecroilenz, sizeof(rhspecroilenz) },
    { &rhspecroilocx, sizeof(rhspecroilocx) },
    { &rhspecroilocy, sizeof(rhspecroilocy) },
    { &rhspecroilocz, sizeof(rhspecroilocz) },
    { &rhexciterusage, sizeof(rhexciterusage) },
    { &rhexciterfreqs, sizeof(rhexciterfreqs) },
    { &rhwiener, sizeof(rhwiener) },
    { &rhwienera, sizeof(rhwienera) },
    { &rhwienerb, sizeof(rhwienerb) },
    { &rhwienert2, sizeof(rhwienert2) },
    { &rhwieneresp, sizeof(rhwieneresp) },
    { &rhflipfilter, sizeof(rhflipfilter) },
    { &rhdbgrecon, sizeof(rhdbgrecon) },
    { &rhech2skip, sizeof(rhech2skip) },
    { &rhrcideal, sizeof(rhrcideal) },
    { &rhrcdixproc, sizeof(rhrcdixproc) },
    { &rhrcidealctrl, sizeof(rhrcidealctrl) },
    { &rhdf, sizeof(rhdf) },
    { &rhmedal_mode, sizeof(rhmedal_mode) },
    { &rhmedal_nstack_size, sizeof(rhmedal_nstack_size) },
    { &rhmedal_echo_order, sizeof(rhmedal_echo_order) },
    { &rhmedal_up_kernel_size, sizeof(rhmedal_up_kernel_size) },
    { &rhmedal_down_kernel_size, sizeof(rhmedal_down_kernel_size) },
    { &rhmedal_smooth_kernel_size, sizeof(rhmedal_smooth_kernel_size) },
    { &rhmedal_starting_slice, sizeof(rhmedal_starting_slice) },
    { &rhmedal_ending_slice, sizeof(rhmedal_ending_slice) },
    { &rhmedal_param, sizeof(rhmedal_param) },
    { &rhvibrant, sizeof(rhvibrant) },
    { &rhkacq_uid, sizeof(rhkacq_uid) },
    { &rhnex_unacquired, sizeof(rhnex_unacquired) },
    { &rhdiskacqctrl, sizeof(rhdiskacqctrl) },
    { &rhechopc_extra_bot, sizeof(rhechopc_extra_bot) },
    { &rhechopc_ylines, sizeof(rhechopc_ylines) },
    { &rhechopc_primary_yfirst, sizeof(rhechopc_primary_yfirst) },
    { &rhechopc_reverse_yfirst, sizeof(rhechopc_reverse_yfirst) },
    { &rhechopc_zlines, sizeof(rhechopc_zlines) },
    { &rhechopc_yxfitorder, sizeof(rhechopc_yxfitorder) },
    { &rhechopc_ctrl, sizeof(rhechopc_ctrl) },
    { &rhchannel_combine_filter_type, sizeof(rhchannel_combine_filter_type) },
    { &rhchannel_combine_filter_width, sizeof(rhchannel_combine_filter_width) },
    { &rhchannel_combine_filter_beta, sizeof(rhchannel_combine_filter_beta) },
    { &rh_low_pass_nex_filter_width, sizeof(rh_low_pass_nex_filter_width) },
    { &rh3dgw_interptype, sizeof(rh3dgw_interptype) },
    { &rhrc3dcinectrl, sizeof(rhrc3dcinectrl) },
    { &rhncycles_cine, sizeof(rhncycles_cine) },
    { &rhnvircchannel, sizeof(rhnvircchannel) },
    { &rhrc_cardt1map_ctrl, sizeof(rhrc_cardt1map_ctrl) },
    { &rhrc_moco_ctrl, sizeof(rhrc_moco_ctrl) },
    { &rhrc_algorithm_ctrl, sizeof(rhrc_algorithm_ctrl) },
    { &ihtr, sizeof(ihtr) },
    { &ihti, sizeof(ihti) },
    { &ihtdel1, sizeof(ihtdel1) },
    { &ihnex, sizeof(ihnex) },
    { &ihflip, sizeof(ihflip) },
    { &ihte1, sizeof(ihte1) },
    { &ihte2, sizeof(ihte2) },
    { &ihte3, sizeof(ihte3) },
    { &ihte4, sizeof(ihte4) },
    { &ihte5, sizeof(ihte5) },
    { &ihte6, sizeof(ihte6) },
    { &ihte7, sizeof(ihte7) },
    { &ihte8, sizeof(ihte8) },
    { &ihte9, sizeof(ihte9) },
    { &ihte10, sizeof(ihte10) },
    { &ihte11, sizeof(ihte11) },
    { &ihte12, sizeof(ihte12) },
    { &ihte13, sizeof(ihte13) },
    { &ihte14, sizeof(ihte14) },
    { &ihte15, sizeof(ihte15) },
    { &ihte16, sizeof(ihte16) },
    { &ihdixonte, sizeof(ihdixonte) },
    { &ihdixonipte, sizeof(ihdixonipte) },
    { &ihdixonoopte, sizeof(ihdixonoopte) },
    { &ihvbw1, sizeof(ihvbw1) },
    { &ihvbw2, sizeof(ihvbw2) },
    { &ihvbw3, sizeof(ihvbw3) },
    { &ihvbw4, sizeof(ihvbw4) },
    { &ihvbw5, sizeof(ihvbw5) },
    { &ihvbw6, sizeof(ihvbw6) },
    { &ihvbw7, sizeof(ihvbw7) },
    { &ihvbw8, sizeof(ihvbw8) },
    { &ihvbw9, sizeof(ihvbw9) },
    { &ihvbw10, sizeof(ihvbw10) },
    { &ihvbw11, sizeof(ihvbw11) },
    { &ihvbw12, sizeof(ihvbw12) },
    { &ihvbw13, sizeof(ihvbw13) },
    { &ihvbw14, sizeof(ihvbw14) },
    { &ihvbw15, sizeof(ihvbw15) },
    { &ihvbw16, sizeof(ihvbw16) },
    { &ihnegscanspacing, sizeof(ihnegscanspacing) },
    { &ihoffsetfreq, sizeof(ihoffsetfreq) },
    { &ihbsoffsetfreq, sizeof(ihbsoffsetfreq) },
    { &iheesp, sizeof(iheesp) },
    { &ihfcineim, sizeof(ihfcineim) },
    { &ihfcinent, sizeof(ihfcinent) },
    { &ihbspti, sizeof(ihbspti) },
    { &ihtagfa, sizeof(ihtagfa) },
    { &ihtagor, sizeof(ihtagor) },
    { &ih_idealdbg_cv1, sizeof(ih_idealdbg_cv1) },
    { &ih_idealdbg_cv2, sizeof(ih_idealdbg_cv2) },
    { &ih_idealdbg_cv3, sizeof(ih_idealdbg_cv3) },
    { &ih_idealdbg_cv4, sizeof(ih_idealdbg_cv4) },
    { &ih_idealdbg_cv5, sizeof(ih_idealdbg_cv5) },
    { &ih_idealdbg_cv6, sizeof(ih_idealdbg_cv6) },
    { &ih_idealdbg_cv7, sizeof(ih_idealdbg_cv7) },
    { &ih_idealdbg_cv8, sizeof(ih_idealdbg_cv8) },
    { &ih_idealdbg_cv9, sizeof(ih_idealdbg_cv9) },
    { &ih_idealdbg_cv10, sizeof(ih_idealdbg_cv10) },
    { &ih_idealdbg_cv11, sizeof(ih_idealdbg_cv11) },
    { &ih_idealdbg_cv12, sizeof(ih_idealdbg_cv12) },
    { &ih_idealdbg_cv13, sizeof(ih_idealdbg_cv13) },
    { &ih_idealdbg_cv14, sizeof(ih_idealdbg_cv14) },
    { &ih_idealdbg_cv15, sizeof(ih_idealdbg_cv15) },
    { &ih_idealdbg_cv16, sizeof(ih_idealdbg_cv16) },
    { &ih_idealdbg_cv17, sizeof(ih_idealdbg_cv17) },
    { &ih_idealdbg_cv18, sizeof(ih_idealdbg_cv18) },
    { &ih_idealdbg_cv19, sizeof(ih_idealdbg_cv19) },
    { &ih_idealdbg_cv20, sizeof(ih_idealdbg_cv20) },
    { &ih_idealdbg_cv21, sizeof(ih_idealdbg_cv21) },
    { &ih_idealdbg_cv22, sizeof(ih_idealdbg_cv22) },
    { &ih_idealdbg_cv23, sizeof(ih_idealdbg_cv23) },
    { &ih_idealdbg_cv24, sizeof(ih_idealdbg_cv24) },
    { &ih_idealdbg_cv25, sizeof(ih_idealdbg_cv25) },
    { &ih_idealdbg_cv26, sizeof(ih_idealdbg_cv26) },
    { &ih_idealdbg_cv27, sizeof(ih_idealdbg_cv27) },
    { &ih_idealdbg_cv28, sizeof(ih_idealdbg_cv28) },
    { &ih_idealdbg_cv29, sizeof(ih_idealdbg_cv29) },
    { &ih_idealdbg_cv30, sizeof(ih_idealdbg_cv30) },
    { &ih_idealdbg_cv31, sizeof(ih_idealdbg_cv31) },
    { &ih_idealdbg_cv32, sizeof(ih_idealdbg_cv32) },
    { &ihlabeltime, sizeof(ihlabeltime) },
    { &ihpostlabeldelay, sizeof(ihpostlabeldelay) },
    { &ihnew_series, sizeof(ihnew_series) },
    { &ihcardt1map_hb_pattern, sizeof(ihcardt1map_hb_pattern) },
    { &dbdt_option_key_status, sizeof(dbdt_option_key_status) },
    { &dbdt_mode, sizeof(dbdt_mode) },
    { &opsarmode, sizeof(opsarmode) },
    { &cfdbdttype, sizeof(cfdbdttype) },
    { &cfrinf, sizeof(cfrinf) },
    { &cfrfact, sizeof(cfrfact) },
    { &cfdbdtper_norm, sizeof(cfdbdtper_norm) },
    { &cfdbdtper_cont, sizeof(cfdbdtper_cont) },
    { &cfdbdtper_max, sizeof(cfdbdtper_max) },
    { &cfnumicn, sizeof(cfnumicn) },
    { &cfdppericn, sizeof(cfdppericn) },
    { &cfgradcoil, sizeof(cfgradcoil) },
    { &cfswgut, sizeof(cfswgut) },
    { &cfswrfut, sizeof(cfswrfut) },
    { &cfswssput, sizeof(cfswssput) },
    { &cfhwgut, sizeof(cfhwgut) },
    { &cfhwrfut, sizeof(cfhwrfut) },
    { &cfhwssput, sizeof(cfhwssput) },
    { &cfoption, sizeof(cfoption) },
    { &cfrfboardtype, sizeof(cfrfboardtype) },
    { &psd_board_type, sizeof(psd_board_type) },
    { &opdfm, sizeof(opdfm) },
    { &opdfmprescan, sizeof(opdfmprescan) },
    { &cfdfm, sizeof(cfdfm) },
    { &cfdfmTG, sizeof(cfdfmTG) },
    { &cfdfmR1, sizeof(cfdfmR1) },
    { &cfdfmDX, sizeof(cfdfmDX) },
    { &derate_ACGD, sizeof(derate_ACGD) },
    { &rhextra_frames_top, sizeof(rhextra_frames_top) },
    { &rhextra_frames_bot, sizeof(rhextra_frames_bot) },
    { &rhpc_ref_start, sizeof(rhpc_ref_start) },
    { &rhpc_ref_stop, sizeof(rhpc_ref_stop) },
    { &rhpc_ref_skip, sizeof(rhpc_ref_skip) },
    { &opaxial_slice, sizeof(opaxial_slice) },
    { &opsagittal_slice, sizeof(opsagittal_slice) },
    { &opcoronal_slice, sizeof(opcoronal_slice) },
    { &opvrg, sizeof(opvrg) },
    { &opmart, sizeof(opmart) },
    { &piassetscrn, sizeof(piassetscrn) },
    { &opseriessave, sizeof(opseriessave) },
    { &opt1map, sizeof(opt1map) },
    { &opt2map, sizeof(opt2map) },
    { &opmer2, sizeof(opmer2) },
    { &rhnew_wnd_level_flag, sizeof(rhnew_wnd_level_flag) },
    { &rhwnd_image_hist_area, sizeof(rhwnd_image_hist_area) },
    { &rhwnd_high_hist, sizeof(rhwnd_high_hist) },
    { &rhwnd_lower_hist, sizeof(rhwnd_lower_hist) },
    { &rhrcmavric_control, sizeof(rhrcmavric_control) },
    { &rhrcmavric_image, sizeof(rhrcmavric_image) },
    { &rhrcmavric_bin_separation, sizeof(rhrcmavric_bin_separation) },
    { &cfrfupa, sizeof(cfrfupa) },
    { &cfrfupd, sizeof(cfrfupd) },
    { &cfrfminblank, sizeof(cfrfminblank) },
    { &cfrfminunblk, sizeof(cfrfminunblk) },
    { &cfrfminblanktorcv, sizeof(cfrfminblanktorcv) },
    { &cfrfampftconst, sizeof(cfrfampftconst) },
    { &cfrfampftlinear, sizeof(cfrfampftlinear) },
    { &cfrfampftquadratic, sizeof(cfrfampftquadratic) },
    { &opradialrx, sizeof(opradialrx) },
    { &cfsupportreceivefreqbands, sizeof(cfsupportreceivefreqbands) },
    { &cfcntfreefreqlow, sizeof(cfcntfreefreqlow) },
    { &cfcntfreefreqhigh, sizeof(cfcntfreefreqhigh) },
    { &optracq, sizeof(optracq) },
    { &opswift, sizeof(opswift) },
    { &rhswiftenable, sizeof(rhswiftenable) },
    { &rhnumCoilConfigs, sizeof(rhnumCoilConfigs) },
    { &rhnumslabs, sizeof(rhnumslabs) },
    { &opncoils, sizeof(opncoils) },
    { &rtsar_first_series_flag, sizeof(rtsar_first_series_flag) },
    { &rtsar_enable_flag, sizeof(rtsar_enable_flag) },
    { &measured_TG, sizeof(measured_TG) },
    { &predicted_TG, sizeof(predicted_TG) },
    { &sar_correction_factor, sizeof(sar_correction_factor) },
    { &gradHeatMethod, sizeof(gradHeatMethod) },
    { &gradHeatFile, sizeof(gradHeatFile) },
    { &gradCoilMethod, sizeof(gradCoilMethod) },
    { &gradHeatFlag, sizeof(gradHeatFlag) },
    { &xgd_optimization, sizeof(xgd_optimization) },
    { &gradChokeFlag, sizeof(gradChokeFlag) },
    { &piburstmode, sizeof(piburstmode) },
    { &opburstmode, sizeof(opburstmode) },
    { &burstreps, sizeof(burstreps) },
    { &piburstcooltime, sizeof(piburstcooltime) },
    { &opaccel_ph_stride, sizeof(opaccel_ph_stride) },
    { &opaccel_sl_stride, sizeof(opaccel_sl_stride) },
    { &opaccel_t_stride, sizeof(opaccel_t_stride) },
    { &opaccel_mb_stride, sizeof(opaccel_mb_stride) },
    { &opmb, sizeof(opmb) },
    { &rhmb_factor, sizeof(rhmb_factor) },
    { &rhmb_slice_fov_shift_factor, sizeof(rhmb_slice_fov_shift_factor) },
    { &rhmb_slice_order_sign, sizeof(rhmb_slice_order_sign) },
    { &rhmuse, sizeof(rhmuse) },
    { &rhmuse_nav, sizeof(rhmuse_nav) },
    { &rhmuse_nav_accel, sizeof(rhmuse_nav_accel) },
    { &rhmuse_nav_hnover, sizeof(rhmuse_nav_hnover) },
    { &rhmuse_nav_yres, sizeof(rhmuse_nav_yres) },
    { &opaccel_cs_stride, sizeof(opaccel_cs_stride) },
    { &opcompressedsensing, sizeof(opcompressedsensing) },
    { &rhcs_factor, sizeof(rhcs_factor) },
    { &rhcs_flag, sizeof(rhcs_flag) },
    { &rhcs_maxiter, sizeof(rhcs_maxiter) },
    { &rhcs_consistency, sizeof(rhcs_consistency) },
    { &rhcs_ph_stride, sizeof(rhcs_ph_stride) },
    { &rhcs_sl_stride, sizeof(rhcs_sl_stride) },
    { &oparc, sizeof(oparc) },
    { &opaccel_kt_stride, sizeof(opaccel_kt_stride) },
    { &rhkt_factor, sizeof(rhkt_factor) },
    { &rhkt_cal_factor, sizeof(rhkt_cal_factor) },
    { &rhkt_calwidth_ph, sizeof(rhkt_calwidth_ph) },
    { &rhkt_calwidth_sl, sizeof(rhkt_calwidth_sl) },
    { &opab1, sizeof(opab1) },
    { &op3dgradwarp, sizeof(op3dgradwarp) },
    { &opauto3dgradwarp, sizeof(opauto3dgradwarp) },
    { &cfmaxtransmitoffsetfreq, sizeof(cfmaxtransmitoffsetfreq) },
    { &cfreceiveroffsetfreq, sizeof(cfreceiveroffsetfreq) },
    { &cfcoilswitchmethod, sizeof(cfcoilswitchmethod) },
    { &TG_record, sizeof(TG_record) },
    { &ab1_enable, sizeof(ab1_enable) },
    { &cfreceivertype, sizeof(cfreceivertype) },
    { &cfreceiverswitchtype, sizeof(cfreceiverswitchtype) },
    { &cfEllipticDriveEnable, sizeof(cfEllipticDriveEnable) },
    { &pi3dgradwarpnub, sizeof(pi3dgradwarpnub) },
    { &cfDualDriveCapable, sizeof(cfDualDriveCapable) },
    { &optrip, sizeof(optrip) },
    { &oprtb0, sizeof(oprtb0) },
    { &pirtb0vis, sizeof(pirtb0vis) },
    { &pirtb0nub, sizeof(pirtb0nub) },
    { &ophoecc, sizeof(ophoecc) },
    { &rhhoecc, sizeof(rhhoecc) },
    { &rhhoec_fit_order, sizeof(rhhoec_fit_order) },
    { &opdistcorr, sizeof(opdistcorr) },
    { &pidistcorrnub, sizeof(pidistcorrnub) },
    { &pidistcorrdefval, sizeof(pidistcorrdefval) },
    { &rhdistcorr_ctrl, sizeof(rhdistcorr_ctrl) },
    { &rhdistcorr_B0_filter_size, sizeof(rhdistcorr_B0_filter_size) },
    { &rhdistcorr_B0_filter_std_dev, sizeof(rhdistcorr_B0_filter_std_dev) },
    { &ihdistcorr, sizeof(ihdistcorr) },
    { &rhtensor_file_number, sizeof(rhtensor_file_number) },
    { &ihpepolar, sizeof(ihpepolar) },
    { &rhesp, sizeof(rhesp) },
    { &viewshd_num, sizeof(viewshd_num) },
    { &grad_intensity_thres, sizeof(grad_intensity_thres) },
    { &anne_mask_dilation_length, sizeof(anne_mask_dilation_length) },
    { &anne_intensity_thres, sizeof(anne_intensity_thres) },
    { &anne_channel_percentage, sizeof(anne_channel_percentage) },
    { &ec3_iterations, sizeof(ec3_iterations) },
    { &combined_coil_map_thres, sizeof(combined_coil_map_thres) },
    { &coil_map_smooth_factor, sizeof(coil_map_smooth_factor) },
    { &coil_map_2_filter_width, sizeof(coil_map_2_filter_width) },
    { &ec3_iteration_method, sizeof(ec3_iteration_method) },
    { &edr_support, sizeof(edr_support) },
    { &recon_bandwidth_factor, sizeof(recon_bandwidth_factor) },
    { &dacq_data_type, sizeof(dacq_data_type) },
    { &rawmode_scaling, sizeof(rawmode_scaling) },
    { &rawmode_scaling_factor, sizeof(rawmode_scaling_factor) },
    { &oprgcalmode, sizeof(oprgcalmode) },
    { &opnumgroups, sizeof(opnumgroups) },
    { &opsarburst, sizeof(opsarburst) },
    { &opheadscout, sizeof(opheadscout) },
    { &rhposition_detection, sizeof(rhposition_detection) },
    { &opfus, sizeof(opfus) },
    { &opexamnum, sizeof(opexamnum) },
    { &opseriesnum, sizeof(opseriesnum) },
    { &vol_shift_type, sizeof(vol_shift_type) },
    { &vol_shift_constraint_type, sizeof(vol_shift_constraint_type) },
    { &vol_scale_type, sizeof(vol_scale_type) },
    { &vol_scale_constraint_type, sizeof(vol_scale_constraint_type) },
    { &rhsnrnoise, sizeof(rhsnrnoise) },
    { &rhvircpolicy, sizeof(rhvircpolicy) },
    { &rhvirsenstype, sizeof(rhvirsenstype) },
    { &rhvircoiltype, sizeof(rhvircoiltype) },
    { &rhvircoilunif, sizeof(rhvircoilunif) },
    { &rhvircoilchannels, sizeof(rhvircoilchannels) },
    { &cffield, sizeof(cffield) },
    { &act_field_strength, sizeof(act_field_strength) },
    { &enableReceiveFreqBands, sizeof(enableReceiveFreqBands) },
    { &offsetReceiveFreqLower, sizeof(offsetReceiveFreqLower) },
    { &offsetReceiveFreqHigher, sizeof(offsetReceiveFreqHigher) },
    { &cfrfamptyp, sizeof(cfrfamptyp) },
    { &cfssctype, sizeof(cfssctype) },
    { &cfbodycoiltype, sizeof(cfbodycoiltype) },
    { &cfptxcapable, sizeof(cfptxcapable) },
    { &cfbdcabletglimit, sizeof(cfbdcabletglimit) },
    { &cfcablefreq, sizeof(cfcablefreq) },
    { &cfcabletg, sizeof(cfcabletg) },
    { &cfcablebw, sizeof(cfcablebw) },
    { &opgradshim, sizeof(opgradshim) },
    { &track_flag, sizeof(track_flag) },
    { &prevent_scan_under_emul, sizeof(prevent_scan_under_emul) },
    { &acqs, sizeof(acqs) },
    { &avround, sizeof(avround) },
    { &baseline, sizeof(baseline) },
    { &nex, sizeof(nex) },
    { &trunex, sizeof(trunex) },
    { &isOddNexGreaterThanOne, sizeof(isOddNexGreaterThanOne) },
    { &isNonIntNexGreaterThanOne, sizeof(isNonIntNexGreaterThanOne) },
    { &fn, sizeof(fn) },
    { &enablfracdec, sizeof(enablfracdec) },
    { &npw_flag, sizeof(npw_flag) },
    { &nop, sizeof(nop) },
    { &acq_type, sizeof(acq_type) },
    { &seq_type, sizeof(seq_type) },
    { &num_images, sizeof(num_images) },
    { &recon_mag_image, sizeof(recon_mag_image) },
    { &recon_pha_image, sizeof(recon_pha_image) },
    { &recon_imag_image, sizeof(recon_imag_image) },
    { &recon_qmag_image, sizeof(recon_qmag_image) },
    { &slquant1, sizeof(slquant1) },
    { &psd_grd_wait, sizeof(psd_grd_wait) },
    { &psd_rf_wait, sizeof(psd_rf_wait) },
    { &pos_moment_start, sizeof(pos_moment_start) },
    { &mps1rf1_inst, sizeof(mps1rf1_inst) },
    { &scanrf1_inst, sizeof(scanrf1_inst) },
    { &cfcarddelay, sizeof(cfcarddelay) },
    { &psd_card_hdwr_delay, sizeof(psd_card_hdwr_delay) },
    { &GAM, sizeof(GAM) },
    { &off90, sizeof(off90) },
    { &TR_SLOP, sizeof(TR_SLOP) },
    { &TR_PASS, sizeof(TR_PASS) },
    { &TR_PASS3D, sizeof(TR_PASS3D) },
    { &csweight, sizeof(csweight) },
    { &exnex, sizeof(exnex) },
    { &truenex, sizeof(truenex) },
    { &eg_phaseres, sizeof(eg_phaseres) },
    { &sp_satcard_loc, sizeof(sp_satcard_loc) },
    { &min_rfdycc, sizeof(min_rfdycc) },
    { &min_rfavgpow, sizeof(min_rfavgpow) },
    { &min_rfrmsb1, sizeof(min_rfrmsb1) },
    { &coll_prefls, sizeof(coll_prefls) },
    { &maxGradRes, sizeof(maxGradRes) },
    { &dfg, sizeof(dfg) },
    { &pg_beta, sizeof(pg_beta) },
    { &split_dab, sizeof(split_dab) },
    { &freq_scale, sizeof(freq_scale) },
    { &numrecv, sizeof(numrecv) },
    { &pe_on, sizeof(pe_on) },
    { &psd_targetscale, sizeof(psd_targetscale) },
    { &psd_zero, sizeof(psd_zero) },
    { &lx_pwmtime, sizeof(lx_pwmtime) },
    { &ly_pwmtime, sizeof(ly_pwmtime) },
    { &lz_pwmtime, sizeof(lz_pwmtime) },
    { &px_pwmtime, sizeof(px_pwmtime) },
    { &py_pwmtime, sizeof(py_pwmtime) },
    { &pz_pwmtime, sizeof(pz_pwmtime) },
    { &min_seqgrad, sizeof(min_seqgrad) },
    { &min_seqrfamp, sizeof(min_seqrfamp) },
    { &xa2s, sizeof(xa2s) },
    { &ya2s, sizeof(ya2s) },
    { &za2s, sizeof(za2s) },
    { &minseqcoil_t, sizeof(minseqcoil_t) },
    { &minseqcoilx_t, sizeof(minseqcoilx_t) },
    { &minseqcoily_t, sizeof(minseqcoily_t) },
    { &minseqcoilz_t, sizeof(minseqcoilz_t) },
    { &minseqcoilburst_t, sizeof(minseqcoilburst_t) },
    { &minseqcoilvrms_t, sizeof(minseqcoilvrms_t) },
    { &minseqgram_t, sizeof(minseqgram_t) },
    { &minseqchoke_t, sizeof(minseqchoke_t) },
    { &minseqcable_t, sizeof(minseqcable_t) },
    { &minseqcable_maxpow_t, sizeof(minseqcable_maxpow_t) },
    { &minseqcableburst_t, sizeof(minseqcableburst_t) },
    { &minseqbusbar_t, sizeof(minseqbusbar_t) },
    { &minseqps_t, sizeof(minseqps_t) },
    { &minseqpdu_t, sizeof(minseqpdu_t) },
    { &minseqpdubreaker_t, sizeof(minseqpdubreaker_t) },
    { &minseqcoilcool_t, sizeof(minseqcoilcool_t) },
    { &minseqsyscool_t, sizeof(minseqsyscool_t) },
    { &minseqccucool_t, sizeof(minseqccucool_t) },
    { &minseqxfmr_t, sizeof(minseqxfmr_t) },
    { &minseqresist_t, sizeof(minseqresist_t) },
    { &minseqgrddrv_t, sizeof(minseqgrddrv_t) },
    { &minseqgrddrv_case_t, sizeof(minseqgrddrv_case_t) },
    { &minseqgrddrvx_t, sizeof(minseqgrddrvx_t) },
    { &minseqgrddrvy_t, sizeof(minseqgrddrvy_t) },
    { &minseqgrddrvz_t, sizeof(minseqgrddrvz_t) },
    { &powerx, sizeof(powerx) },
    { &powery, sizeof(powery) },
    { &powerz, sizeof(powerz) },
    { &pospowerx, sizeof(pospowerx) },
    { &pospowery, sizeof(pospowery) },
    { &pospowerz, sizeof(pospowerz) },
    { &negpowerx, sizeof(negpowerx) },
    { &negpowery, sizeof(negpowery) },
    { &negpowerz, sizeof(negpowerz) },
    { &amptrans_lx, sizeof(amptrans_lx) },
    { &amptrans_ly, sizeof(amptrans_ly) },
    { &amptrans_lz, sizeof(amptrans_lz) },
    { &amptrans_px, sizeof(amptrans_px) },
    { &amptrans_py, sizeof(amptrans_py) },
    { &amptrans_pz, sizeof(amptrans_pz) },
    { &abspower_lx, sizeof(abspower_lx) },
    { &abspower_ly, sizeof(abspower_ly) },
    { &abspower_lz, sizeof(abspower_lz) },
    { &abspower_px, sizeof(abspower_px) },
    { &abspower_py, sizeof(abspower_py) },
    { &abspower_pz, sizeof(abspower_pz) },
    { &minseqpwm_x, sizeof(minseqpwm_x) },
    { &minseqpwm_y, sizeof(minseqpwm_y) },
    { &minseqpwm_z, sizeof(minseqpwm_z) },
    { &minseqgpm_t, sizeof(minseqgpm_t) },
    { &minseqgpm_maxpow_t, sizeof(minseqgpm_maxpow_t) },
    { &vol_ratio_est_req, sizeof(vol_ratio_est_req) },
    { &skip_waveform_rotmat_check, sizeof(skip_waveform_rotmat_check) },
    { &set_realtime_rotmat, sizeof(set_realtime_rotmat) },
    { &skip_rotmat_search, sizeof(skip_rotmat_search) },
    { &enforce_minseqseg, sizeof(enforce_minseqseg) },
    { &enforce_dbdtopt, sizeof(enforce_dbdtopt) },
    { &skip_minseqseg, sizeof(skip_minseqseg) },
    { &skip_initialize_dbdtopt, sizeof(skip_initialize_dbdtopt) },
    { &time_pgen, sizeof(time_pgen) },
    { &cont_debug, sizeof(cont_debug) },
    { &maxpc_cor, sizeof(maxpc_cor) },
    { &maxpc_debug, sizeof(maxpc_debug) },
    { &maxpc_points, sizeof(maxpc_points) },
    { &pass_thru_mode, sizeof(pass_thru_mode) },
    { &tmin, sizeof(tmin) },
    { &tmin_total, sizeof(tmin_total) },
    { &psd_tol_value, sizeof(psd_tol_value) },
    { &bd_index, sizeof(bd_index) },
    { &use_ermes, sizeof(use_ermes) },
    { &fieldstrength, sizeof(fieldstrength) },
    { &asymmatrix, sizeof(asymmatrix) },
    { &psddebugcode, sizeof(psddebugcode) },
    { &psddebugcode2, sizeof(psddebugcode2) },
    { &serviceMode, sizeof(serviceMode) },
    { &upmxdisable, sizeof(upmxdisable) },
    { &tsamp, sizeof(tsamp) },
    { &seg_debug, sizeof(seg_debug) },
    { &CompositeRMS_method, sizeof(CompositeRMS_method) },
    { &gradDriverMethod, sizeof(gradDriverMethod) },
    { &gradDCsafeMethod, sizeof(gradDCsafeMethod) },
    { &stopwatchFlag, sizeof(stopwatchFlag) },
    { &seqEntryIndex, sizeof(seqEntryIndex) },
    { &dbdt_debug, sizeof(dbdt_debug) },
    { &reilly_mode, sizeof(reilly_mode) },
    { &dbdt_disable, sizeof(dbdt_disable) },
    { &use_dbdt_opt, sizeof(use_dbdt_opt) },
    { &srderate, sizeof(srderate) },
    { &config_update_mode, sizeof(config_update_mode) },
    { &phys_record_flag, sizeof(phys_record_flag) },
    { &phys_rec_resolution, sizeof(phys_rec_resolution) },
    { &phys_record_channelsel, sizeof(phys_record_channelsel) },
    { &rotateflag, sizeof(rotateflag) },
    { &rhpcspacial_dynamic, sizeof(rhpcspacial_dynamic) },
    { &rhpc_rationalscale, sizeof(rhpc_rationalscale) },
    { &rhpcmag, sizeof(rhpcmag) },
    { &mild_note_support, sizeof(mild_note_support) },
    { &save_grad_spec_flag, sizeof(save_grad_spec_flag) },
    { &grad_spec_change_flag, sizeof(grad_spec_change_flag) },
    { &value_system_flag, sizeof(value_system_flag) },
    { &rectfov_npw_support, sizeof(rectfov_npw_support) },
    { &pigeosrot, sizeof(pigeosrot) },
    { &minseqrf_cal, sizeof(minseqrf_cal) },
    { &min_rfampcpblty, sizeof(min_rfampcpblty) },
    { &b1derate_flag, sizeof(b1derate_flag) },
    { &oblmethod_dbdt_flag, sizeof(oblmethod_dbdt_flag) },
    { &minseqcoil_esp, sizeof(minseqcoil_esp) },
    { &aspir_flag, sizeof(aspir_flag) },
    { &rhrawsizeview, sizeof(rhrawsizeview) },
    { &chksum_scaninfo_view, sizeof(chksum_scaninfo_view) },
    { &chksum_rhdacqctrl_view, sizeof(chksum_rhdacqctrl_view) },
    { &fnecho_lim, sizeof(fnecho_lim) },
    { &psdcrucial_debug, sizeof(psdcrucial_debug) },
    { &b1max_scale, sizeof(b1max_scale) },
    { &disable_exciter_unblank, sizeof(disable_exciter_unblank) },
    { &TGlimit, sizeof(TGlimit) },
    { &sat_TGlimit, sizeof(sat_TGlimit) },
    { &autoparams_debug, sizeof(autoparams_debug) },
    { &num_autotr_cveval_iter, sizeof(num_autotr_cveval_iter) },
    { &apx_cveval_counter, sizeof(apx_cveval_counter) },
    { &enforce_inrangetr, sizeof(enforce_inrangetr) },
    { &passtime, sizeof(passtime) },
    { &retropc_extra, sizeof(retropc_extra) },
    { &esp, sizeof(esp) },
    { &echoint, sizeof(echoint) },
    { &arc_flag, sizeof(arc_flag) },
    { &arc_ph_calwidth, sizeof(arc_ph_calwidth) },
    { &arc_sl_calwidth, sizeof(arc_sl_calwidth) },
    { &vrgfsamp, sizeof(vrgfsamp) },
    { &srate_x, sizeof(srate_x) },
    { &glimit_x, sizeof(glimit_x) },
    { &srate_y, sizeof(srate_y) },
    { &glimit_y, sizeof(glimit_y) },
    { &srate_z, sizeof(srate_z) },
    { &glimit_z, sizeof(glimit_z) },
    { &act_srate_x, sizeof(act_srate_x) },
    { &act_srate_y, sizeof(act_srate_y) },
    { &act_srate_z, sizeof(act_srate_z) },
    { &mkgspec_x_sr_flag, sizeof(mkgspec_x_sr_flag) },
    { &mkgspec_x_gmax_flag, sizeof(mkgspec_x_gmax_flag) },
    { &mkgspec_y_sr_flag, sizeof(mkgspec_y_sr_flag) },
    { &mkgspec_y_gmax_flag, sizeof(mkgspec_y_gmax_flag) },
    { &mkgspec_z_sr_flag, sizeof(mkgspec_z_sr_flag) },
    { &mkgspec_z_gmax_flag, sizeof(mkgspec_z_gmax_flag) },
    { &mkgspec_flag, sizeof(mkgspec_flag) },
    { &mkgspec_epi2_flag, sizeof(mkgspec_epi2_flag) },
    { &pfkz_total, sizeof(pfkz_total) },
    { &fov_freq_scale, sizeof(fov_freq_scale) },
    { &fov_phase_scale, sizeof(fov_phase_scale) },
    { &slthick_scale, sizeof(slthick_scale) },
    { &silent_mode, sizeof(silent_mode) },
    { &silent_slew_rate, sizeof(silent_slew_rate) },
    { &rhpropellerCtrl, sizeof(rhpropellerCtrl) },
    { &prop_act_npwfactor, sizeof(prop_act_npwfactor) },
    { &prop_act_oversamplingfactor, sizeof(prop_act_oversamplingfactor) },
    { &navtrig_wait_before_imaging, sizeof(navtrig_wait_before_imaging) },
    { &xtg_volRecCoil, sizeof(xtg_volRecCoil) },
    { &minseqseg_max_full, sizeof(minseqseg_max_full) },
    { &sphericalGradient, sizeof(sphericalGradient) },
    { &minseqcoil_option, sizeof(minseqcoil_option) },
    { &minseqgrad_option, sizeof(minseqgrad_option) },
    { &rtp_bodyCoilCombine, sizeof(rtp_bodyCoilCombine) },
    { &ntxchannels, sizeof(ntxchannels) },
    { &napptxchannels, sizeof(napptxchannels) },
    { &seqcfgdebug, sizeof(seqcfgdebug) },
    { &enable_acoustic_model, sizeof(enable_acoustic_model) },
    { &acoustic_seq_repeat_time, sizeof(acoustic_seq_repeat_time) },
    { &avgSPL_non_weighted, sizeof(avgSPL_non_weighted) },
    { &noisecal_in_scan_flag, sizeof(noisecal_in_scan_flag) },
    { &cs_sat, sizeof(cs_sat) },
    { &cs_satstart, sizeof(cs_satstart) },
    { &cs_sattime, sizeof(cs_sattime) },
    { &a_rfcssatcfh, sizeof(a_rfcssatcfh) },
    { &flip_rfcssatcfh, sizeof(flip_rfcssatcfh) },
    { &pw_rfcssatcfh, sizeof(pw_rfcssatcfh) },
    { &ia_rfcssatcfh, sizeof(ia_rfcssatcfh) },
    { &ChemSatPulse, sizeof(ChemSatPulse) },
    { &area_gxkcs, sizeof(area_gxkcs) },
    { &area_gykcs, sizeof(area_gykcs) },
    { &area_gyakcs, sizeof(area_gyakcs) },
    { &area_gzkcs, sizeof(area_gzkcs) },
    { &csk_derate_factor, sizeof(csk_derate_factor) },
    { &pw_rfcssat, sizeof(pw_rfcssat) },
    { &pw_omega_hs_rfcssat, sizeof(pw_omega_hs_rfcssat) },
    { &off_rfcssat, sizeof(off_rfcssat) },
    { &ia_rfcssat, sizeof(ia_rfcssat) },
    { &ia_omega_hs_rfcssat, sizeof(ia_omega_hs_rfcssat) },
    { &cyc_rfcssat, sizeof(cyc_rfcssat) },
    { &a_rfcssat, sizeof(a_rfcssat) },
    { &a_omega_hs_rfcssat, sizeof(a_omega_hs_rfcssat) },
    { &alpha_rfcssat, sizeof(alpha_rfcssat) },
    { &gscale_rfcssat, sizeof(gscale_rfcssat) },
    { &flip_rfcssat, sizeof(flip_rfcssat) },
    { &a_gzrfcssat, sizeof(a_gzrfcssat) },
    { &ia_gzrfcssat, sizeof(ia_gzrfcssat) },
    { &pw_gzrfcssat, sizeof(pw_gzrfcssat) },
    { &res_gzrfcssat, sizeof(res_gzrfcssat) },
    { &a_gzrfcssat_wrf, sizeof(a_gzrfcssat_wrf) },
    { &a_thetarfcssat, sizeof(a_thetarfcssat) },
    { &ia_thetarfcssat, sizeof(ia_thetarfcssat) },
    { &pw_thetarfcssat, sizeof(pw_thetarfcssat) },
    { &res_thetarfcssat, sizeof(res_thetarfcssat) },
    { &off_thetarfcssat, sizeof(off_thetarfcssat) },
    { &bw_rfcssat, sizeof(bw_rfcssat) },
    { &selectiveChemsat, sizeof(selectiveChemsat) },
    { &selectiveChemsatBWscaler, sizeof(selectiveChemsatBWscaler) },
    { &offset_rfchemsat, sizeof(offset_rfchemsat) },
    { &num_gzrfcssat_lobe, sizeof(num_gzrfcssat_lobe) },
    { &pw_gzrfcssat_lobe, sizeof(pw_gzrfcssat_lobe) },
    { &pw_gzrfcssat_constant, sizeof(pw_gzrfcssat_constant) },
    { &pw_gzrfcssat_rampz, sizeof(pw_gzrfcssat_rampz) },
    { &num_gzrfcssat_lobe_norf, sizeof(num_gzrfcssat_lobe_norf) },
    { &pw_gzrfcssat_lobe_norf, sizeof(pw_gzrfcssat_lobe_norf) },
    { &pw_gzrfcssat_constant_norf, sizeof(pw_gzrfcssat_constant_norf) },
    { &pw_gzrfcssat_rampz_norf, sizeof(pw_gzrfcssat_rampz_norf) },
    { &ext_pw_rfcssat, sizeof(ext_pw_rfcssat) },
    { &ext_res_rfcssat, sizeof(ext_res_rfcssat) },
    { &ext_isodelay, sizeof(ext_isodelay) },
    { &ext_water_freq_flag, sizeof(ext_water_freq_flag) },
    { &ext_pw_grad_sub_lobe, sizeof(ext_pw_grad_sub_lobe) },
    { &ext_pw_grad_sub_lobe_ramp, sizeof(ext_pw_grad_sub_lobe_ramp) },
    { &ext_num_grad_sub_lobe, sizeof(ext_num_grad_sub_lobe) },
    { &ext_pw_grad_sub_lobe_norf, sizeof(ext_pw_grad_sub_lobe_norf) },
    { &ext_pw_grad_sub_lobe_ramp_norf, sizeof(ext_pw_grad_sub_lobe_ramp_norf) },
    { &ext_num_grad_sub_lobe_norf, sizeof(ext_num_grad_sub_lobe_norf) },
    { &ext_abswidth, sizeof(ext_abswidth) },
    { &ext_effwidth, sizeof(ext_effwidth) },
    { &ext_area, sizeof(ext_area) },
    { &ext_dtycyc, sizeof(ext_dtycyc) },
    { &ext_maxpw, sizeof(ext_maxpw) },
    { &ext_max_b1, sizeof(ext_max_b1) },
    { &ext_max_int_b1_sq, sizeof(ext_max_int_b1_sq) },
    { &ext_max_rms_b1, sizeof(ext_max_rms_b1) },
    { &ext_nom_fa, sizeof(ext_nom_fa) },
    { &ext_nom_pw, sizeof(ext_nom_pw) },
    { &ext_nom_bw, sizeof(ext_nom_bw) },
    { &ext_gzrfcssat_scale_fac, sizeof(ext_gzrfcssat_scale_fac) },
    { &ext_fatsat_min_slthick, sizeof(ext_fatsat_min_slthick) },
    { &duo_cs_flag, sizeof(duo_cs_flag) },
    { &w_debug_flag, sizeof(w_debug_flag) },
    { &n_cspulses, sizeof(n_cspulses) },
    { &flip_final_1, sizeof(flip_final_1) },
    { &flip_final_2, sizeof(flip_final_2) },
    { &killer_scale, sizeof(killer_scale) },
    { &delay_time_bkp, sizeof(delay_time_bkp) },
    { &tetime_bkp, sizeof(tetime_bkp) },
    { &rc_time_bkp, sizeof(rc_time_bkp) },
    { &slquant_bkp, sizeof(slquant_bkp) },
    { &tr_time_bkp, sizeof(tr_time_bkp) },
    { &sattime_bkp, sizeof(sattime_bkp) },
    { &flip_final_1_bkp, sizeof(flip_final_1_bkp) },
    { &flip_final_2_bkp, sizeof(flip_final_2_bkp) },
    { &fatsat_factor_bkp, sizeof(fatsat_factor_bkp) },
    { &phantom_test_flag, sizeof(phantom_test_flag) },
    { &phantom_fat_T1, sizeof(phantom_fat_T1) },
    { &DB_flag, sizeof(DB_flag) },
    { &DB_shift_ratio, sizeof(DB_shift_ratio) },
    { &DB_ChemShift, sizeof(DB_ChemShift) },
    { &DBgrad_flag, sizeof(DBgrad_flag) },
    { &DB_Buffer_X, sizeof(DB_Buffer_X) },
    { &DB_Buffer_Y, sizeof(DB_Buffer_Y) },
    { &DB_Chemical_Shift, sizeof(DB_Chemical_Shift) },
    { &dbcenterlocx1, sizeof(dbcenterlocx1) },
    { &dbcenterlocx2, sizeof(dbcenterlocx2) },
    { &dbcenterlocy1, sizeof(dbcenterlocy1) },
    { &dbcenterlocy2, sizeof(dbcenterlocy2) },
    { &dbcenterlocz1, sizeof(dbcenterlocz1) },
    { &dbcenterlocz2, sizeof(dbcenterlocz2) },
    { &dbsatthickx, sizeof(dbsatthickx) },
    { &dbsatthicky, sizeof(dbsatthicky) },
    { &dbsatthickz, sizeof(dbsatthickz) },
    { &dbbandlocx1, sizeof(dbbandlocx1) },
    { &dbbandlocx2, sizeof(dbbandlocx2) },
    { &dbbandlocy1, sizeof(dbbandlocy1) },
    { &dbbandlocy2, sizeof(dbbandlocy2) },
    { &dbbandlocz1, sizeof(dbbandlocz1) },
    { &dbbandlocz2, sizeof(dbbandlocz2) },
    { &off_rfcssat1, sizeof(off_rfcssat1) },
    { &off_rfcssat2, sizeof(off_rfcssat2) },
    { &bw_rfcssat_nom, sizeof(bw_rfcssat_nom) },
    { &bw_rfcssat_ramp, sizeof(bw_rfcssat_ramp) },
    { &bw_ramp, sizeof(bw_ramp) },
    { &fatsat_factor, sizeof(fatsat_factor) },
    { &csat_rfupa, sizeof(csat_rfupa) },
    { &csat_sys_type, sizeof(csat_sys_type) },
    { &aspir_delay, sizeof(aspir_delay) },
    { &aspir_cfoffset, sizeof(aspir_cfoffset) },
    { &aspir_minti, sizeof(aspir_minti) },
    { &aspir_T1, sizeof(aspir_T1) },
    { &aspir_TI, sizeof(aspir_TI) },
    { &aspir_TI_null, sizeof(aspir_TI_null) },
    { &aspir_TI_extra, sizeof(aspir_TI_extra) },
    { &aspir_TI_min, sizeof(aspir_TI_min) },
    { &aspir_eff, sizeof(aspir_eff) },
    { &fatFlag, sizeof(fatFlag) },
    { &cs_isodelay, sizeof(cs_isodelay) },
    { &cs_delay, sizeof(cs_delay) },
    { &recovery_time, sizeof(recovery_time) },
    { &flip_sat, sizeof(flip_sat) },
    { &flip_satcfh, sizeof(flip_satcfh) },
    { &fStrength, sizeof(fStrength) },
    { &use_spsp_fatsat, sizeof(use_spsp_fatsat) },
    { &debug_spsp_fatsat, sizeof(debug_spsp_fatsat) },
    { &spsp_fatsat_slthick, sizeof(spsp_fatsat_slthick) },
    { &spsp_fatsat_pulse_extra_time, sizeof(spsp_fatsat_pulse_extra_time) },
    { &spsp_fatsat_spatial_mode, sizeof(spsp_fatsat_spatial_mode) },
    { &spsp_fatsat_spatial_offset, sizeof(spsp_fatsat_spatial_offset) },
    { &spsp_fatsat_pulse_override, sizeof(spsp_fatsat_pulse_override) },
    { &spsp_fatsat_omega_scale, sizeof(spsp_fatsat_omega_scale) },
    { &max_aspir_fa, sizeof(max_aspir_fa) },
    { &fa_scale_debug, sizeof(fa_scale_debug) },
    { &cs_tr, sizeof(cs_tr) },
    { &cs_slquant, sizeof(cs_slquant) },
    { &cs_dda_per_trig_flag, sizeof(cs_dda_per_trig_flag) },
    { &psd_chemsat_seq_flag, sizeof(psd_chemsat_seq_flag) },
    { &cs_dda_flip, sizeof(cs_dda_flip) },
    { &ccs_dead, sizeof(ccs_dead) },
    { &ccs_relaxers, sizeof(ccs_relaxers) },
    { &ccs_relaxtime, sizeof(ccs_relaxtime) },
    { &ccs_relaxseqtime, sizeof(ccs_relaxseqtime) },
    { &SatRelaxers, sizeof(SatRelaxers) },
    { &gsat_scale, sizeof(gsat_scale) },
    { &cyc_rfs, sizeof(cyc_rfs) },
    { &pw_rfs, sizeof(pw_rfs) },
    { &pw_satrampx, sizeof(pw_satrampx) },
    { &pw_satrampy, sizeof(pw_satrampy) },
    { &pw_satrampz, sizeof(pw_satrampz) },
    { &sat_rot_ex_num, sizeof(sat_rot_ex_num) },
    { &sat_rot_df_num, sizeof(sat_rot_df_num) },
    { &sat_rot_index, sizeof(sat_rot_index) },
    { &pw_isisat, sizeof(pw_isisat) },
    { &pw_rotupdate, sizeof(pw_rotupdate) },
    { &isi_satdelay, sizeof(isi_satdelay) },
    { &rot_delay, sizeof(rot_delay) },
    { &isi_extra, sizeof(isi_extra) },
    { &sat_debug, sizeof(sat_debug) },
    { &spsat_host_debug, sizeof(spsat_host_debug) },
    { &sp_first_scan, sizeof(sp_first_scan) },
    { &sat_obl_debug, sizeof(sat_obl_debug) },
    { &sat_newgeo, sizeof(sat_newgeo) },
    { &spsat_rfupa, sizeof(spsat_rfupa) },
    { &spsat_sys_type, sizeof(spsat_sys_type) },
    { &xkiller_set, sizeof(xkiller_set) },
    { &maxkiller_time, sizeof(maxkiller_time) },
    { &satgapxpos, sizeof(satgapxpos) },
    { &satgapxneg, sizeof(satgapxneg) },
    { &satgapypos, sizeof(satgapypos) },
    { &satgapyneg, sizeof(satgapyneg) },
    { &satgapzpos, sizeof(satgapzpos) },
    { &satgapzneg, sizeof(satgapzneg) },
    { &satspacex1, sizeof(satspacex1) },
    { &satspacex2, sizeof(satspacex2) },
    { &satspacey1, sizeof(satspacey1) },
    { &satspacey2, sizeof(satspacey2) },
    { &satspacez1, sizeof(satspacez1) },
    { &satspacez2, sizeof(satspacez2) },
    { &satspace1, sizeof(satspace1) },
    { &satspace2, sizeof(satspace2) },
    { &satspace3, sizeof(satspace3) },
    { &satspace4, sizeof(satspace4) },
    { &satspace5, sizeof(satspace5) },
    { &satspace6, sizeof(satspace6) },
    { &satthickx1, sizeof(satthickx1) },
    { &satthickx2, sizeof(satthickx2) },
    { &satthickdfx, sizeof(satthickdfx) },
    { &satthicky1, sizeof(satthicky1) },
    { &satthicky2, sizeof(satthicky2) },
    { &satthickdfy, sizeof(satthickdfy) },
    { &satthickz1, sizeof(satthickz1) },
    { &satthickz2, sizeof(satthickz2) },
    { &satthickdfz, sizeof(satthickdfz) },
    { &exsatthick1, sizeof(exsatthick1) },
    { &exsatthick2, sizeof(exsatthick2) },
    { &exsatthick3, sizeof(exsatthick3) },
    { &exsatthick4, sizeof(exsatthick4) },
    { &exsatthick5, sizeof(exsatthick5) },
    { &exsatthick6, sizeof(exsatthick6) },
    { &satxlocpos, sizeof(satxlocpos) },
    { &satxlocneg, sizeof(satxlocneg) },
    { &satylocpos, sizeof(satylocpos) },
    { &satylocneg, sizeof(satylocneg) },
    { &satzlocpos, sizeof(satzlocpos) },
    { &satzlocneg, sizeof(satzlocneg) },
    { &satzloca, sizeof(satzloca) },
    { &satzlocb, sizeof(satzlocb) },
    { &satloce1, sizeof(satloce1) },
    { &satloce2, sizeof(satloce2) },
    { &satloce3, sizeof(satloce3) },
    { &satloce4, sizeof(satloce4) },
    { &satloce5, sizeof(satloce5) },
    { &satloce6, sizeof(satloce6) },
    { &area_rfsx1, sizeof(area_rfsx1) },
    { &area_rfsx2, sizeof(area_rfsx2) },
    { &area_rfsy1, sizeof(area_rfsy1) },
    { &area_rfsy2, sizeof(area_rfsy2) },
    { &area_rfsz1, sizeof(area_rfsz1) },
    { &area_rfsz2, sizeof(area_rfsz2) },
    { &area_rfse1, sizeof(area_rfse1) },
    { &area_rfse2, sizeof(area_rfse2) },
    { &area_rfse3, sizeof(area_rfse3) },
    { &area_rfse4, sizeof(area_rfse4) },
    { &area_rfse5, sizeof(area_rfse5) },
    { &area_rfse6, sizeof(area_rfse6) },
    { &area_gyksx1, sizeof(area_gyksx1) },
    { &area_gyksx2, sizeof(area_gyksx2) },
    { &area_gyksy1, sizeof(area_gyksy1) },
    { &area_gyksy2, sizeof(area_gyksy2) },
    { &area_gyksz1, sizeof(area_gyksz1) },
    { &area_gyksz2, sizeof(area_gyksz2) },
    { &area_gykse1, sizeof(area_gykse1) },
    { &area_gykse2, sizeof(area_gykse2) },
    { &area_gykse3, sizeof(area_gykse3) },
    { &area_gykse4, sizeof(area_gykse4) },
    { &area_gykse5, sizeof(area_gykse5) },
    { &area_gykse6, sizeof(area_gykse6) },
    { &area_gxksx1, sizeof(area_gxksx1) },
    { &area_gxksx2, sizeof(area_gxksx2) },
    { &area_gxksy1, sizeof(area_gxksy1) },
    { &area_gxksy2, sizeof(area_gxksy2) },
    { &area_gxksz1, sizeof(area_gxksz1) },
    { &area_gxksz2, sizeof(area_gxksz2) },
    { &area_gxkse1, sizeof(area_gxkse1) },
    { &area_gxkse2, sizeof(area_gxkse2) },
    { &area_gxkse3, sizeof(area_gxkse3) },
    { &area_gxkse4, sizeof(area_gxkse4) },
    { &area_gxkse5, sizeof(area_gxkse5) },
    { &area_gxkse6, sizeof(area_gxkse6) },
    { &sp_sattime, sizeof(sp_sattime) },
    { &sp_satstart, sizeof(sp_satstart) },
    { &vrgsat, sizeof(vrgsat) },
    { &numsatramp, sizeof(numsatramp) },
    { &had_sat, sizeof(had_sat) },
    { &rtia3d_sat_flip, sizeof(rtia3d_sat_flip) },
    { &rtia3d_sat_pos, sizeof(rtia3d_sat_pos) },
    { &sat_pulse_type, sizeof(sat_pulse_type) },
    { &satgap_opt_flag, sizeof(satgap_opt_flag) },
    { &autolock, sizeof(autolock) },
    { &blank, sizeof(blank) },
    { &nograd, sizeof(nograd) },
    { &nofermi, sizeof(nofermi) },
    { &rawdata, sizeof(rawdata) },
    { &saveinter, sizeof(saveinter) },
    { &zchop, sizeof(zchop) },
    { &eepf, sizeof(eepf) },
    { &oepf, sizeof(oepf) },
    { &eeff, sizeof(eeff) },
    { &oeff, sizeof(oeff) },
    { &cine_choplet, sizeof(cine_choplet) },
    { &fermi_rc, sizeof(fermi_rc) },
    { &fermi_wc, sizeof(fermi_wc) },
    { &apodize_level_flag, sizeof(apodize_level_flag) },
    { &fermi_r_factor, sizeof(fermi_r_factor) },
    { &fermi_w_factor, sizeof(fermi_w_factor) },
    { &pure_mix_tx_scale, sizeof(pure_mix_tx_scale) },
    { &channel_compression, sizeof(channel_compression) },
    { &optimal_channel_combine, sizeof(optimal_channel_combine) },
    { &enforce_cal_for_channel_combine, sizeof(enforce_cal_for_channel_combine) },
    { &override_opcalrequired, sizeof(override_opcalrequired) },
    { &dump_channel_comp_optimal_recon, sizeof(dump_channel_comp_optimal_recon) },
    { &dump_scenic_parameters, sizeof(dump_scenic_parameters) },
    { &PSsr_derate_factor, sizeof(PSsr_derate_factor) },
    { &PSamp_derate_factor, sizeof(PSamp_derate_factor) },
    { &PSassr_derate_factor, sizeof(PSassr_derate_factor) },
    { &PSasamp_derate_factor, sizeof(PSasamp_derate_factor) },
    { &PSTR_PASS, sizeof(PSTR_PASS) },
    { &mpsfov, sizeof(mpsfov) },
    { &fastprescan, sizeof(fastprescan) },
    { &pre_slice, sizeof(pre_slice) },
    { &PSslice_num, sizeof(PSslice_num) },
    { &xmtaddAPS1, sizeof(xmtaddAPS1) },
    { &xmtaddCFL, sizeof(xmtaddCFL) },
    { &xmtaddCFH, sizeof(xmtaddCFH) },
    { &xmtaddFTG, sizeof(xmtaddFTG) },
    { &xmtadd, sizeof(xmtadd) },
    { &xmtaddRCVN, sizeof(xmtaddRCVN) },
    { &ps1scale, sizeof(ps1scale) },
    { &cflscale, sizeof(cflscale) },
    { &cfhscale, sizeof(cfhscale) },
    { &ftgscale, sizeof(ftgscale) },
    { &extraScale, sizeof(extraScale) },
    { &PSdebugstate, sizeof(PSdebugstate) },
    { &PSfield_strength, sizeof(PSfield_strength) },
    { &PScs_sat, sizeof(PScs_sat) },
    { &PSir, sizeof(PSir) },
    { &PSmt, sizeof(PSmt) },
    { &ps1_rxcoil, sizeof(ps1_rxcoil) },
    { &ps_seed, sizeof(ps_seed) },
    { &tg_1_2_pw, sizeof(tg_1_2_pw) },
    { &tg_axial, sizeof(tg_axial) },
    { &coeff_pw_tg, sizeof(coeff_pw_tg) },
    { &fov_lim_mps, sizeof(fov_lim_mps) },
    { &TGspf, sizeof(TGspf) },
    { &flip_rf2cfh, sizeof(flip_rf2cfh) },
    { &flip_rf3cfh, sizeof(flip_rf3cfh) },
    { &flip_rf4cfh, sizeof(flip_rf4cfh) },
    { &ps1_tr, sizeof(ps1_tr) },
    { &cfl_tr, sizeof(cfl_tr) },
    { &cfh_tr, sizeof(cfh_tr) },
    { &rcvn_tr, sizeof(rcvn_tr) },
    { &cfh_ec_position, sizeof(cfh_ec_position) },
    { &cfl_dda, sizeof(cfl_dda) },
    { &cfl_nex, sizeof(cfl_nex) },
    { &cfh_dda, sizeof(cfh_dda) },
    { &cfh_nex, sizeof(cfh_nex) },
    { &rcvn_dda, sizeof(rcvn_dda) },
    { &rcvn_nex, sizeof(rcvn_nex) },
    { &local_tg, sizeof(local_tg) },
    { &fov_scaling, sizeof(fov_scaling) },
    { &flip_rf1xtg, sizeof(flip_rf1xtg) },
    { &gscale_rf1xtg, sizeof(gscale_rf1xtg) },
    { &init_xtg_deadtime, sizeof(init_xtg_deadtime) },
    { &flip_rf1mps1, sizeof(flip_rf1mps1) },
    { &gscale_rf1mps1, sizeof(gscale_rf1mps1) },
    { &presscfh_override, sizeof(presscfh_override) },
    { &presscfh, sizeof(presscfh) },
    { &presscfh_ctrl, sizeof(presscfh_ctrl) },
    { &presscfh_outrange, sizeof(presscfh_outrange) },
    { &presscfh_cgate, sizeof(presscfh_cgate) },
    { &presscfh_debug, sizeof(presscfh_debug) },
    { &presscfh_wait_rf12, sizeof(presscfh_wait_rf12) },
    { &presscfh_wait_rf23, sizeof(presscfh_wait_rf23) },
    { &presscfh_wait_rf34, sizeof(presscfh_wait_rf34) },
    { &presscfh_minte, sizeof(presscfh_minte) },
    { &presscfh_fov, sizeof(presscfh_fov) },
    { &presscfh_fov_ratio, sizeof(presscfh_fov_ratio) },
    { &presscfh_pfov_ratio, sizeof(presscfh_pfov_ratio) },
    { &presscfh_slab_ratio, sizeof(presscfh_slab_ratio) },
    { &presscfh_pfov, sizeof(presscfh_pfov) },
    { &presscfh_slthick, sizeof(presscfh_slthick) },
    { &presscfh_slice, sizeof(presscfh_slice) },
    { &presscfh_ir_slthick, sizeof(presscfh_ir_slthick) },
    { &presscfh_ir_noselect, sizeof(presscfh_ir_noselect) },
    { &presscfh_minfov_ratio, sizeof(presscfh_minfov_ratio) },
    { &cfh_steam_flag, sizeof(cfh_steam_flag) },
    { &steam_pg_gap, sizeof(steam_pg_gap) },
    { &area_gykcfl, sizeof(area_gykcfl) },
    { &area_gykcfh, sizeof(area_gykcfh) },
    { &area_xtgzkiller, sizeof(area_xtgzkiller) },
    { &area_xtgykiller, sizeof(area_xtgykiller) },
    { &PSoff90, sizeof(PSoff90) },
    { &dummy_pw, sizeof(dummy_pw) },
    { &min180te, sizeof(min180te) },
    { &PStloc, sizeof(PStloc) },
    { &PSrloc, sizeof(PSrloc) },
    { &PSphasoff, sizeof(PSphasoff) },
    { &PStrigger, sizeof(PStrigger) },
    { &PStloc_mod, sizeof(PStloc_mod) },
    { &PSrloc_mod, sizeof(PSrloc_mod) },
    { &PSphasoff_mod, sizeof(PSphasoff_mod) },
    { &thickPS_mod, sizeof(thickPS_mod) },
    { &asx_killer_area, sizeof(asx_killer_area) },
    { &asz_killer_area, sizeof(asz_killer_area) },
    { &cfhir_killer_area, sizeof(cfhir_killer_area) },
    { &ps_crusher_area, sizeof(ps_crusher_area) },
    { &cfh_crusher_area, sizeof(cfh_crusher_area) },
    { &target_cfh_crusher, sizeof(target_cfh_crusher) },
    { &target_cfh_crusher2, sizeof(target_cfh_crusher2) },
    { &cfh_newmode, sizeof(cfh_newmode) },
    { &cfh_rf1freq, sizeof(cfh_rf1freq) },
    { &cfh_rf2freq, sizeof(cfh_rf2freq) },
    { &cfh_rf3freq, sizeof(cfh_rf3freq) },
    { &cfh_rf4freq, sizeof(cfh_rf4freq) },
    { &cfh_fov, sizeof(cfh_fov) },
    { &cfh_ti, sizeof(cfh_ti) },
    { &eff_cfh_te, sizeof(eff_cfh_te) },
    { &PScfh_shimvol_debug, sizeof(PScfh_shimvol_debug) },
    { &debug_shimvol_slice, sizeof(debug_shimvol_slice) },
    { &wg_cfh_rf3, sizeof(wg_cfh_rf3) },
    { &wg_cfh_rf4, sizeof(wg_cfh_rf4) },
    { &FTGslthk, sizeof(FTGslthk) },
    { &FTGopslthickz1, sizeof(FTGopslthickz1) },
    { &FTGopslthickz2, sizeof(FTGopslthickz2) },
    { &FTGopslthickz3, sizeof(FTGopslthickz3) },
    { &ftgtr, sizeof(ftgtr) },
    { &FTGfov, sizeof(FTGfov) },
    { &FTGau, sizeof(FTGau) },
    { &FTGtecho, sizeof(FTGtecho) },
    { &FTGtau1, sizeof(FTGtau1) },
    { &FTGtau2, sizeof(FTGtau2) },
    { &FTGacq1, sizeof(FTGacq1) },
    { &FTGacq2, sizeof(FTGacq2) },
    { &epi_ir_on, sizeof(epi_ir_on) },
    { &ssfse_ir_on, sizeof(ssfse_ir_on) },
    { &ftg_dda, sizeof(ftg_dda) },
    { &FTGecho1bw, sizeof(FTGecho1bw) },
    { &FTGtestpulse, sizeof(FTGtestpulse) },
    { &FTGxres, sizeof(FTGxres) },
    { &FTGxmtadd, sizeof(FTGxmtadd) },
    { &pw_gxw2ftgleft, sizeof(pw_gxw2ftgleft) },
    { &xtgtr, sizeof(xtgtr) },
    { &XTGtau1, sizeof(XTGtau1) },
    { &XTGfov, sizeof(XTGfov) },
    { &pw_bsrf, sizeof(pw_bsrf) },
    { &xtg_offres_freq, sizeof(xtg_offres_freq) },
    { &XTGecho1bw, sizeof(XTGecho1bw) },
    { &XTGxres, sizeof(XTGxres) },
    { &xmtaddXTG, sizeof(xmtaddXTG) },
    { &xtgscale, sizeof(xtgscale) },
    { &xtg_dda, sizeof(xtg_dda) },
    { &XTGacq1, sizeof(XTGacq1) },
    { &TGopslthick, sizeof(TGopslthick) },
    { &TGopslthickx, sizeof(TGopslthickx) },
    { &TGopslthicky, sizeof(TGopslthicky) },
    { &XTG_minimizeYKillerGap, sizeof(XTG_minimizeYKillerGap) },
    { &dynTG_etl, sizeof(dynTG_etl) },
    { &dtg_iso_delay, sizeof(dtg_iso_delay) },
    { &dtg_off90, sizeof(dtg_off90) },
    { &dtg_dda, sizeof(dtg_dda) },
    { &rf1dtg_type, sizeof(rf1dtg_type) },
    { &echo1bwdtg, sizeof(echo1bwdtg) },
    { &dtgt_exa, sizeof(dtgt_exa) },
    { &dtgt_exb, sizeof(dtgt_exb) },
    { &tleaddtg, sizeof(tleaddtg) },
    { &td0dtg, sizeof(td0dtg) },
    { &dtgphorder, sizeof(dtgphorder) },
    { &dtgspgr_flag, sizeof(dtgspgr_flag) },
    { &pw_rf1dtg, sizeof(pw_rf1dtg) },
    { &a_rf1dtg, sizeof(a_rf1dtg) },
    { &min_dtgte, sizeof(min_dtgte) },
    { &dtg_esp, sizeof(dtg_esp) },
    { &tr_dtg, sizeof(tr_dtg) },
    { &time_ssidtg, sizeof(time_ssidtg) },
    { &rsaxial_flag, sizeof(rsaxial_flag) },
    { &rsspgr_flag, sizeof(rsspgr_flag) },
    { &multi_channel, sizeof(multi_channel) },
    { &minph_iso_delay, sizeof(minph_iso_delay) },
    { &rs_off90, sizeof(rs_off90) },
    { &rs_iso_delay, sizeof(rs_iso_delay) },
    { &echo1bwrs, sizeof(echo1bwrs) },
    { &rsphorder, sizeof(rsphorder) },
    { &rs_dda, sizeof(rs_dda) },
    { &rst_exa, sizeof(rst_exa) },
    { &rst_exb, sizeof(rst_exb) },
    { &tleadrs, sizeof(tleadrs) },
    { &td0rs, sizeof(td0rs) },
    { &pw_rf1rs, sizeof(pw_rf1rs) },
    { &ia_rf1rs, sizeof(ia_rf1rs) },
    { &a_rf1rs, sizeof(a_rf1rs) },
    { &rf1rs_type, sizeof(rf1rs_type) },
    { &gscale_rf1rs, sizeof(gscale_rf1rs) },
    { &flip_rf1rs, sizeof(flip_rf1rs) },
    { &flip_rfbrs, sizeof(flip_rfbrs) },
    { &cyc_rf1rs, sizeof(cyc_rf1rs) },
    { &flip_rf1dtg, sizeof(flip_rf1dtg) },
    { &flip_rfbdtg, sizeof(flip_rfbdtg) },
    { &cyc_rf1dtg, sizeof(cyc_rf1dtg) },
    { &gscale_rf1dtg, sizeof(gscale_rf1dtg) },
    { &ia_rf1dtg, sizeof(ia_rf1dtg) },
    { &rf1rs_scale, sizeof(rf1rs_scale) },
    { &rf1dtg_scale, sizeof(rf1dtg_scale) },
    { &xmtaddrs, sizeof(xmtaddrs) },
    { &xmtadddtg, sizeof(xmtadddtg) },
    { &pw_acqrs1, sizeof(pw_acqrs1) },
    { &pw_acqdtg1, sizeof(pw_acqdtg1) },
    { &min_rste, sizeof(min_rste) },
    { &rs_esp, sizeof(rs_esp) },
    { &tr_rs, sizeof(tr_rs) },
    { &tr_prep_rs, sizeof(tr_prep_rs) },
    { &rd_ext_rs, sizeof(rd_ext_rs) },
    { &rd_ext_dtg, sizeof(rd_ext_dtg) },
    { &fast_xtr, sizeof(fast_xtr) },
    { &attenlen, sizeof(attenlen) },
    { &tns_len, sizeof(tns_len) },
    { &e2_delay_rs, sizeof(e2_delay_rs) },
    { &e2_delay_dtg, sizeof(e2_delay_dtg) },
    { &time_ssirs, sizeof(time_ssirs) },
    { &rfshim_etl, sizeof(rfshim_etl) },
    { &B1Cal_mode, sizeof(B1Cal_mode) },
    { &DD_delay, sizeof(DD_delay) },
    { &DD_channels, sizeof(DD_channels) },
    { &DD_nCh, sizeof(DD_nCh) },
    { &DD_debug, sizeof(DD_debug) },
    { &endview_iamprs, sizeof(endview_iamprs) },
    { &endview_iampdtg, sizeof(endview_iampdtg) },
    { &endview_scalers, sizeof(endview_scalers) },
    { &endview_scaledtg, sizeof(endview_scaledtg) },
    { &echo1bwcal, sizeof(echo1bwcal) },
    { &cal_dda, sizeof(cal_dda) },
    { &cal_delay, sizeof(cal_delay) },
    { &cal_delay_dda, sizeof(cal_delay_dda) },
    { &calspgr_flag, sizeof(calspgr_flag) },
    { &cal_tr_interleave, sizeof(cal_tr_interleave) },
    { &cal_nex_interleave, sizeof(cal_nex_interleave) },
    { &cal_xfov, sizeof(cal_xfov) },
    { &cal_yfov, sizeof(cal_yfov) },
    { &cal_vthick, sizeof(cal_vthick) },
    { &cal_btw_rf_rba_ssp, sizeof(cal_btw_rf_rba_ssp) },
    { &cal_grd_rf_delays, sizeof(cal_grd_rf_delays) },
    { &tleadcal, sizeof(tleadcal) },
    { &td0cal, sizeof(td0cal) },
    { &calt_exa, sizeof(calt_exa) },
    { &calt_exb, sizeof(calt_exb) },
    { &tacq_cal, sizeof(tacq_cal) },
    { &te_cal, sizeof(te_cal) },
    { &tr_cal, sizeof(tr_cal) },
    { &flip_rf1cal, sizeof(flip_rf1cal) },
    { &cal_iso_delay, sizeof(cal_iso_delay) },
    { &endview_iampcal, sizeof(endview_iampcal) },
    { &endviewz_iampcal, sizeof(endviewz_iampcal) },
    { &endview_scalecal, sizeof(endview_scalecal) },
    { &endviewz_scalecal, sizeof(endviewz_scalecal) },
    { &a_combcal, sizeof(a_combcal) },
    { &a_endcal, sizeof(a_endcal) },
    { &a_combcal2, sizeof(a_combcal2) },
    { &a_endcal2, sizeof(a_endcal2) },
    { &time_ssical, sizeof(time_ssical) },
    { &xmtaddcal, sizeof(xmtaddcal) },
    { &cal_amplimit, sizeof(cal_amplimit) },
    { &cal_slewrate, sizeof(cal_slewrate) },
    { &cal_freq_scale, sizeof(cal_freq_scale) },
    { &cal_phase_scale, sizeof(cal_phase_scale) },
    { &area_gzkcal, sizeof(area_gzkcal) },
    { &cal_ampscale, sizeof(cal_ampscale) },
    { &cal_pfkr_flag, sizeof(cal_pfkr_flag) },
    { &cal_pfkr_fraction, sizeof(cal_pfkr_fraction) },
    { &cal_sampledPts, sizeof(cal_sampledPts) },
    { &echo1bwcoil, sizeof(echo1bwcoil) },
    { &coil_dda, sizeof(coil_dda) },
    { &coilspgr_flag, sizeof(coilspgr_flag) },
    { &coil_nex_interleave, sizeof(coil_nex_interleave) },
    { &coil_xfov, sizeof(coil_xfov) },
    { &coil_yfov, sizeof(coil_yfov) },
    { &coil_vthick, sizeof(coil_vthick) },
    { &tleadcoil, sizeof(tleadcoil) },
    { &td0coil, sizeof(td0coil) },
    { &coilt_exa, sizeof(coilt_exa) },
    { &coilt_exb, sizeof(coilt_exb) },
    { &tacq_coil, sizeof(tacq_coil) },
    { &te_coil, sizeof(te_coil) },
    { &tr_coil, sizeof(tr_coil) },
    { &flip_rf1coil, sizeof(flip_rf1coil) },
    { &coil_iso_delay, sizeof(coil_iso_delay) },
    { &endview_iampcoil, sizeof(endview_iampcoil) },
    { &endviewz_iampcoil, sizeof(endviewz_iampcoil) },
    { &endview_scalecoil, sizeof(endview_scalecoil) },
    { &endviewz_scalecoil, sizeof(endviewz_scalecoil) },
    { &a_combcoil, sizeof(a_combcoil) },
    { &a_endcoil, sizeof(a_endcoil) },
    { &a_combcoil2, sizeof(a_combcoil2) },
    { &a_endcoil2, sizeof(a_endcoil2) },
    { &time_ssicoil, sizeof(time_ssicoil) },
    { &xmtaddcoil, sizeof(xmtaddcoil) },
    { &coil_amplimit, sizeof(coil_amplimit) },
    { &coil_slewrate, sizeof(coil_slewrate) },
    { &coil_freq_scale, sizeof(coil_freq_scale) },
    { &coil_phase_scale, sizeof(coil_phase_scale) },
    { &coil_pfkr_flag, sizeof(coil_pfkr_flag) },
    { &coil_pfkr_fraction, sizeof(coil_pfkr_fraction) },
    { &coil_sampledPts, sizeof(coil_sampledPts) },
    { &CFLxres, sizeof(CFLxres) },
    { &CFHxres, sizeof(CFHxres) },
    { &echo1bwcfl, sizeof(echo1bwcfl) },
    { &echo1bwcfh, sizeof(echo1bwcfh) },
    { &echo1bwrcvn, sizeof(echo1bwrcvn) },
    { &rcvn_xres, sizeof(rcvn_xres) },
    { &rcvn_loops, sizeof(rcvn_loops) },
    { &pw_grdtrig, sizeof(pw_grdtrig) },
    { &wait_time_before_cfh, sizeof(wait_time_before_cfh) },
    { &echo1bwas, sizeof(echo1bwas) },
    { &off90as, sizeof(off90as) },
    { &td0as, sizeof(td0as) },
    { &t_exaas, sizeof(t_exaas) },
    { &time_ssias, sizeof(time_ssias) },
    { &tleadas, sizeof(tleadas) },
    { &te_as, sizeof(te_as) },
    { &tr_as, sizeof(tr_as) },
    { &as_dda, sizeof(as_dda) },
    { &pw_isislice, sizeof(pw_isislice) },
    { &pw_rotslice, sizeof(pw_rotslice) },
    { &isi_sliceextra, sizeof(isi_sliceextra) },
    { &rgfeature_enable, sizeof(rgfeature_enable) },
    { &enableMapTg, sizeof(enableMapTg) },
    { &aslenap, sizeof(aslenap) },
    { &aslenrl, sizeof(aslenrl) },
    { &aslensi, sizeof(aslensi) },
    { &aslocap, sizeof(aslocap) },
    { &aslocrl, sizeof(aslocrl) },
    { &aslocsi, sizeof(aslocsi) },
    { &area_gxwas, sizeof(area_gxwas) },
    { &area_gz1as, sizeof(area_gz1as) },
    { &area_readrampas, sizeof(area_readrampas) },
    { &avail_pwgx1as, sizeof(avail_pwgx1as) },
    { &avail_pwgz1as, sizeof(avail_pwgz1as) },
    { &bw_rf1as, sizeof(bw_rf1as) },
    { &flip_pctas, sizeof(flip_pctas) },
    { &dix_timeas, sizeof(dix_timeas) },
    { &xmtaddas, sizeof(xmtaddas) },
    { &xmtlogas, sizeof(xmtlogas) },
    { &ps1obl_debug, sizeof(ps1obl_debug) },
    { &asobl_debug, sizeof(asobl_debug) },
    { &ps1_newgeo, sizeof(ps1_newgeo) },
    { &as_newgeo, sizeof(as_newgeo) },
    { &pw_gy1as_tot, sizeof(pw_gy1as_tot) },
    { &endview_iampas, sizeof(endview_iampas) },
    { &endview_scaleas, sizeof(endview_scaleas) },
    { &cfh_newgeo, sizeof(cfh_newgeo) },
    { &cfhobl_debug, sizeof(cfhobl_debug) },
    { &deltf, sizeof(deltf) },
    { &IRinCFH, sizeof(IRinCFH) },
    { &cfh_each, sizeof(cfh_each) },
    { &cfh_slquant, sizeof(cfh_slquant) },
    { &noswitch_slab_psc, sizeof(noswitch_slab_psc) },
    { &noswitch_coil_psc, sizeof(noswitch_coil_psc) },
    { &PStest_slab, sizeof(PStest_slab) },
    { &pimrsapsflg, sizeof(pimrsapsflg) },
    { &pimrsaps1, sizeof(pimrsaps1) },
    { &pimrsaps2, sizeof(pimrsaps2) },
    { &pimrsaps3, sizeof(pimrsaps3) },
    { &pimrsaps4, sizeof(pimrsaps4) },
    { &pimrsaps5, sizeof(pimrsaps5) },
    { &pimrsaps6, sizeof(pimrsaps6) },
    { &pimrsaps7, sizeof(pimrsaps7) },
    { &pimrsaps8, sizeof(pimrsaps8) },
    { &pimrsaps9, sizeof(pimrsaps9) },
    { &pimrsaps10, sizeof(pimrsaps10) },
    { &pimrsaps11, sizeof(pimrsaps11) },
    { &pimrsaps12, sizeof(pimrsaps12) },
    { &pimrsaps13, sizeof(pimrsaps13) },
    { &pimrsaps14, sizeof(pimrsaps14) },
    { &pimrsaps15, sizeof(pimrsaps15) },
    { &pw_contrfhubsel, sizeof(pw_contrfhubsel) },
    { &delay_rfhubsel, sizeof(delay_rfhubsel) },
    { &pw_contrfsel, sizeof(pw_contrfsel) },
    { &csw_tr, sizeof(csw_tr) },
    { &csw_wait_sethubindeximm, sizeof(csw_wait_sethubindeximm) },
    { &csw_wait_setrcvportimm, sizeof(csw_wait_setrcvportimm) },
    { &csw_wait_before, sizeof(csw_wait_before) },
    { &csw_time_ssi, sizeof(csw_time_ssi) },
    { &area_gxkrcvn, sizeof(area_gxkrcvn) },
    { &area_gykrcvn, sizeof(area_gykrcvn) },
    { &area_gzkrcvn, sizeof(area_gzkrcvn) },
    { &pre_rcvn_tr, sizeof(pre_rcvn_tr) },
    { &rcvn_flag, sizeof(rcvn_flag) },
    { &psd_startta_override, sizeof(psd_startta_override) },
    { &psd_psctg, sizeof(psd_psctg) },
    { &psd_pscshim, sizeof(psd_pscshim) },
    { &psd_pscall, sizeof(psd_pscall) },
    { &bw_rf1cal, sizeof(bw_rf1cal) },
    { &bw_rf1coil, sizeof(bw_rf1coil) },
    { &yk0_killer_area, sizeof(yk0_killer_area) },
    { &ir_on, sizeof(ir_on) },
    { &ir_start, sizeof(ir_start) },
    { &irk_start, sizeof(irk_start) },
    { &ir_grad_time, sizeof(ir_grad_time) },
    { &ir_time, sizeof(ir_time) },
    { &ir_time_total, sizeof(ir_time_total) },
    { &ext_ir_pulse, sizeof(ext_ir_pulse) },
    { &rf0_phase, sizeof(rf0_phase) },
    { &irslquant, sizeof(irslquant) },
    { &pos_ir_start, sizeof(pos_ir_start) },
    { &bw_rf0, sizeof(bw_rf0) },
    { &hrf0, sizeof(hrf0) },
    { &ir_index, sizeof(ir_index) },
    { &csf_fact, sizeof(csf_fact) },
    { &ir_fa_scaling_flag, sizeof(ir_fa_scaling_flag) },
    { &inner_spacing, sizeof(inner_spacing) },
    { &post_spacing, sizeof(post_spacing) },
    { &invseqlen, sizeof(invseqlen) },
    { &ir_rfupa, sizeof(ir_rfupa) },
    { &ir_sys_type, sizeof(ir_sys_type) },
    { &invThickOpt, sizeof(invThickOpt) },
    { &invThickOpt_seqtime, sizeof(invThickOpt_seqtime) },
    { &t2flair_extra_ir_flag, sizeof(t2flair_extra_ir_flag) },
    { &packs, sizeof(packs) },
    { &ir_fa_scale_debug, sizeof(ir_fa_scale_debug) },
    { &ss_rf1, sizeof(ss_rf1) },
    { &fat_flag, sizeof(fat_flag) },
    { &fat_delta, sizeof(fat_delta) },
    { &fat_offset, sizeof(fat_offset) },
    { &sszchop, sizeof(sszchop) },
    { &pw_gzrf1lobe, sizeof(pw_gzrf1lobe) },
    { &pw_constant, sizeof(pw_constant) },
    { &num_rf1lobe, sizeof(num_rf1lobe) },
    { &gradient_mode, sizeof(gradient_mode) },
    { &ss_rf_wait, sizeof(ss_rf_wait) },
    { &pw_ss_rampz, sizeof(pw_ss_rampz) },
    { &ss_override, sizeof(ss_override) },
    { &whichss, sizeof(whichss) },
    { &nbw_ssrf, sizeof(nbw_ssrf) },
    { &ss_min_slthk, sizeof(ss_min_slthk) },
    { &ss_maxoff, sizeof(ss_maxoff) },
    { &ss_minslthk1, sizeof(ss_minslthk1) },
    { &ss_convolution_flag, sizeof(ss_convolution_flag) },
    { &breast_spsp_flag, sizeof(breast_spsp_flag) },
    { &ss_fa_scaling_flag, sizeof(ss_fa_scaling_flag) },
    { &ss_fa_scale_debug, sizeof(ss_fa_scale_debug) },
    { &max_ss_fa, sizeof(max_ss_fa) },
    { &ss_maxoffex, sizeof(ss_maxoffex) },
    { &off90minor, sizeof(off90minor) },
    { &omega_amp, sizeof(omega_amp) },
    { &gz1_zero_moment, sizeof(gz1_zero_moment) },
    { &gz1_first_moment, sizeof(gz1_first_moment) },
    { &a_gzrf1_ss_max, sizeof(a_gzrf1_ss_max) },
    { &freqSign, sizeof(freqSign) },
    { &cv_rfupa, sizeof(cv_rfupa) },
    { &system_type, sizeof(system_type) },
    { &cvlock, sizeof(cvlock) },
    { &psd_taps, sizeof(psd_taps) },
    { &fix_fermi, sizeof(fix_fermi) },
    { &grad_spec_ctrl, sizeof(grad_spec_ctrl) },
    { &srate, sizeof(srate) },
    { &glimit, sizeof(glimit) },
    { &save_gmax, sizeof(save_gmax) },
    { &save_srate, sizeof(save_srate) },
    { &save_cfxfull, sizeof(save_cfxfull) },
    { &save_cfyfull, sizeof(save_cfyfull) },
    { &save_cfzfull, sizeof(save_cfzfull) },
    { &save_cfxipeak, sizeof(save_cfxipeak) },
    { &save_cfyipeak, sizeof(save_cfyipeak) },
    { &save_cfzipeak, sizeof(save_cfzipeak) },
    { &save_ramptime, sizeof(save_ramptime) },
    { &debug_grad_spec, sizeof(debug_grad_spec) },
    { &act_srate, sizeof(act_srate) },
    { &val15_lock, sizeof(val15_lock) },
    { &avecrushpepowscale_for_SBM_XFD, sizeof(avecrushpepowscale_for_SBM_XFD) },
    { &dbdt_model, sizeof(dbdt_model) },
    { &dbdtper_new, sizeof(dbdtper_new) },
    { &esprange_check, sizeof(esprange_check) },
    { &espamp_check, sizeof(espamp_check) },
    { &espopt, sizeof(espopt) },
    { &espincway, sizeof(espincway) },
    { &epigradopt_debug, sizeof(epigradopt_debug) },
    { &epigradopt_output, sizeof(epigradopt_output) },
    { &disable_crc_check_for_esp, sizeof(disable_crc_check_for_esp) },
    { &dbdtperx, sizeof(dbdtperx) },
    { &dbdtpery, sizeof(dbdtpery) },
    { &dbdtperz, sizeof(dbdtperz) },
    { &max_dbdtper_hb_zblips, sizeof(max_dbdtper_hb_zblips) },
    { &scale_ramp, sizeof(scale_ramp) },
    { &debugTensor, sizeof(debugTensor) },
    { &tensor_flag, sizeof(tensor_flag) },
    { &num_tensor, sizeof(num_tensor) },
    { &validTensorFile, sizeof(validTensorFile) },
    { &validTensorFileAndEntry, sizeof(validTensorFileAndEntry) },
    { &num_B0, sizeof(num_B0) },
    { &sep_time, sizeof(sep_time) },
    { &min180_echo_tim, sizeof(min180_echo_tim) },
    { &min180_echo_tim2, sizeof(min180_echo_tim2) },
    { &calc_bmatrix_flag, sizeof(calc_bmatrix_flag) },
    { &bmax_fixed, sizeof(bmax_fixed) },
    { &pgen_calc_bval_flag, sizeof(pgen_calc_bval_flag) },
    { &tensor_host_sort_flag, sizeof(tensor_host_sort_flag) },
    { &tensor_host_sort_debug, sizeof(tensor_host_sort_debug) },
    { &sse_manualte_derating, sizeof(sse_manualte_derating) },
    { &sse_manualte_derating_debug, sizeof(sse_manualte_derating_debug) },
    { &spherical_derating_limit, sizeof(spherical_derating_limit) },
    { &collect_six_sigma, sizeof(collect_six_sigma) },
    { &per_err_orig_x, sizeof(per_err_orig_x) },
    { &per_err_orig_y, sizeof(per_err_orig_y) },
    { &per_err_orig_z, sizeof(per_err_orig_z) },
    { &per_err_corr_x, sizeof(per_err_corr_x) },
    { &per_err_corr_y, sizeof(per_err_corr_y) },
    { &per_err_corr_z, sizeof(per_err_corr_z) },
    { &sse_enh, sizeof(sse_enh) },
    { &optimizedTEFlag, sizeof(optimizedTEFlag) },
    { &act_numdir_clinical, sizeof(act_numdir_clinical) },
    { &maxwell_flag, sizeof(maxwell_flag) },
    { &maxwell_blip, sizeof(maxwell_blip) },
    { &B0_field, sizeof(B0_field) },
    { &pw_gxw_MAX_l, sizeof(pw_gxw_MAX_l) },
    { &pw_gxw_MAX_r, sizeof(pw_gxw_MAX_r) },
    { &pw_gyb_MAX_l, sizeof(pw_gyb_MAX_l) },
    { &pw_gyb_MAX_r, sizeof(pw_gyb_MAX_r) },
    { &max_debug, sizeof(max_debug) },
    { &nodelay, sizeof(nodelay) },
    { &nodelayesp, sizeof(nodelayesp) },
    { &b0dither_new, sizeof(b0dither_new) },
    { &nob0dither, sizeof(nob0dither) },
    { &nob0dither_interpo, sizeof(nob0dither_interpo) },
    { &nobcfile, sizeof(nobcfile) },
    { &number_of_bc_files, sizeof(number_of_bc_files) },
    { &activeReceivers, sizeof(activeReceivers) },
    { &flagWarning, sizeof(flagWarning) },
    { &rfov_flag, sizeof(rfov_flag) },
    { &rfov_type, sizeof(rfov_type) },
    { &rfov_override, sizeof(rfov_override) },
    { &rfov_cmplx_avg_flag, sizeof(rfov_cmplx_avg_flag) },
    { &debug_rfov, sizeof(debug_rfov) },
    { &psminfov, sizeof(psminfov) },
    { &psminslthick, sizeof(psminslthick) },
    { &temp_slthick, sizeof(temp_slthick) },
    { &rfov_maxnslices, sizeof(rfov_maxnslices) },
    { &rfov_fa_scaling_flag, sizeof(rfov_fa_scaling_flag) },
    { &max_rfov_fa, sizeof(max_rfov_fa) },
    { &rfov_dbdtper, sizeof(rfov_dbdtper) },
    { &rfov_dbdt_debug, sizeof(rfov_dbdt_debug) },
    { &start_rf1, sizeof(start_rf1) },
    { &thky_rf1, sizeof(thky_rf1) },
    { &a_gyrf1, sizeof(a_gyrf1) },
    { &ia_gyrf1, sizeof(ia_gyrf1) },
    { &pw_gyrf1, sizeof(pw_gyrf1) },
    { &pw_gyrf1a, sizeof(pw_gyrf1a) },
    { &pw_gyrf1d, sizeof(pw_gyrf1d) },
    { &res_gyrf1, sizeof(res_gyrf1) },
    { &ia_thrf1, sizeof(ia_thrf1) },
    { &addrfdel, sizeof(addrfdel) },
    { &area_gyex1, sizeof(area_gyex1) },
    { &pw_gyex1_tot, sizeof(pw_gyex1_tot) },
    { &ex_res, sizeof(ex_res) },
    { &ex_pw, sizeof(ex_pw) },
    { &ex_ttipdown, sizeof(ex_ttipdown) },
    { &ex_nom_flip, sizeof(ex_nom_flip) },
    { &ex_abswidth, sizeof(ex_abswidth) },
    { &ex_effwidth, sizeof(ex_effwidth) },
    { &ex_area, sizeof(ex_area) },
    { &ex_dtycyc, sizeof(ex_dtycyc) },
    { &ex_maxpw, sizeof(ex_maxpw) },
    { &ex_max_b1, sizeof(ex_max_b1) },
    { &ex_max_int_b1_sqr, sizeof(ex_max_int_b1_sqr) },
    { &ex_max_rms_b1, sizeof(ex_max_rms_b1) },
    { &ex_a_gzs, sizeof(ex_a_gzs) },
    { &ex_nom_thkz, sizeof(ex_nom_thkz) },
    { &ex_a_gys, sizeof(ex_a_gys) },
    { &ex_nom_thky, sizeof(ex_nom_thky) },
    { &ex_maxnslices, sizeof(ex_maxnslices) },
    { &ex_num_gylobe, sizeof(ex_num_gylobe) },
    { &ex_num_gzlobe, sizeof(ex_num_gzlobe) },
    { &ex_pw_gyrf1lobe, sizeof(ex_pw_gyrf1lobe) },
    { &ex_pw_rampy, sizeof(ex_pw_rampy) },
    { &ex_pw_rampz, sizeof(ex_pw_rampz) },
    { &ex_pw_constanty, sizeof(ex_pw_constanty) },
    { &ex_pw_constantz, sizeof(ex_pw_constantz) },
    { &ex_refocus_ratioy, sizeof(ex_refocus_ratioy) },
    { &ex_refocus_ratioz, sizeof(ex_refocus_ratioz) },
    { &ex_tbwy, sizeof(ex_tbwy) },
    { &ex_tbwz, sizeof(ex_tbwz) },
    { &freqSign_ex, sizeof(freqSign_ex) },
    { &shift_to_freq, sizeof(shift_to_freq) },
    { &y_shift, sizeof(y_shift) },
    { &y_to_freq, sizeof(y_to_freq) },
    { &z_shift, sizeof(z_shift) },
    { &z_to_freq, sizeof(z_to_freq) },
    { &type1_support, sizeof(type1_support) },
    { &type1_flag, sizeof(type1_flag) },
    { &homogeneity_flag, sizeof(homogeneity_flag) },
    { &ex_a_gys_pos, sizeof(ex_a_gys_pos) },
    { &a_gys_pos, sizeof(a_gys_pos) },
    { &ia_gys_pos, sizeof(ia_gys_pos) },
    { &ex_pw_rampy_pos, sizeof(ex_pw_rampy_pos) },
    { &ex_pw_constanty_pos, sizeof(ex_pw_constanty_pos) },
    { &excite_ratio, sizeof(excite_ratio) },
    { &walk_sat_flag, sizeof(walk_sat_flag) },
    { &pw_wksat_tot, sizeof(pw_wksat_tot) },
    { &a_gyrfwk, sizeof(a_gyrfwk) },
    { &ia_gyrfwk, sizeof(ia_gyrfwk) },
    { &pw_gyrfwk, sizeof(pw_gyrfwk) },
    { &pw_gyrfwka, sizeof(pw_gyrfwka) },
    { &pw_gyrfwkd, sizeof(pw_gyrfwkd) },
    { &pw_gwksp, sizeof(pw_gwksp) },
    { &pw_gwkspa, sizeof(pw_gwkspa) },
    { &pw_gwkspd, sizeof(pw_gwkspd) },
    { &a_gwksp, sizeof(a_gwksp) },
    { &pos_sp_wk, sizeof(pos_sp_wk) },
    { &walk_sat_cycle, sizeof(walk_sat_cycle) },
    { &wg_rfwk, sizeof(wg_rfwk) },
    { &res_rfwk_orig, sizeof(res_rfwk_orig) },
    { &res_rfwk, sizeof(res_rfwk) },
    { &pw_rfwk, sizeof(pw_rfwk) },
    { &hrfwka, sizeof(hrfwka) },
    { &hrfwkb, sizeof(hrfwkb) },
    { &flip_rfwk, sizeof(flip_rfwk) },
    { &bw_rfwk, sizeof(bw_rfwk) },
    { &cyc_rfwk, sizeof(cyc_rfwk) },
    { &a_rfwk, sizeof(a_rfwk) },
    { &ia_rfwk, sizeof(ia_rfwk) },
    { &ia_thrfwk, sizeof(ia_thrfwk) },
    { &pos_rfwk, sizeof(pos_rfwk) },
    { &off_rfwk, sizeof(off_rfwk) },
    { &off_thrfwk, sizeof(off_thrfwk) },
    { &loc_satcen_cm, sizeof(loc_satcen_cm) },
    { &loc_satcen_Hz, sizeof(loc_satcen_Hz) },
    { &sat_thk_factor, sizeof(sat_thk_factor) },
    { &sep_sat_ratio, sizeof(sep_sat_ratio) },
    { &rfov_max_freq_shift, sizeof(rfov_max_freq_shift) },
    { &mux_flag, sizeof(mux_flag) },
    { &mux_phase_step, sizeof(mux_phase_step) },
    { &thetarf2_flag, sizeof(thetarf2_flag) },
    { &use_omegatheta, sizeof(use_omegatheta) },
    { &omegatheta_pol, sizeof(omegatheta_pol) },
    { &rf2_isodelay, sizeof(rf2_isodelay) },
    { &mux_slquant, sizeof(mux_slquant) },
    { &res_thetarf2, sizeof(res_thetarf2) },
    { &res_gzrf2, sizeof(res_gzrf2) },
    { &pw_thetarf2, sizeof(pw_thetarf2) },
    { &ia_thetarf2, sizeof(ia_thetarf2) },
    { &ia_thetarf2left, sizeof(ia_thetarf2left) },
    { &ia_thetarf2right, sizeof(ia_thetarf2right) },
    { &pw_thetarf2a, sizeof(pw_thetarf2a) },
    { &pw_thetarf2d, sizeof(pw_thetarf2d) },
    { &pw_thetarf2left, sizeof(pw_thetarf2left) },
    { &pw_thetarf2lefta, sizeof(pw_thetarf2lefta) },
    { &pw_thetarf2leftd, sizeof(pw_thetarf2leftd) },
    { &pw_thetarf2right, sizeof(pw_thetarf2right) },
    { &pw_thetarf2righta, sizeof(pw_thetarf2righta) },
    { &pw_thetarf2rightd, sizeof(pw_thetarf2rightd) },
    { &verse_rf2, sizeof(verse_rf2) },
    { &sltune_rf2, sizeof(sltune_rf2) },
    { &mux_slices_rf2, sizeof(mux_slices_rf2) },
    { &phase_cycle_rf2, sizeof(phase_cycle_rf2) },
    { &mux_band_gap_warning_flag, sizeof(mux_band_gap_warning_flag) },
    { &tbwp_rf1, sizeof(tbwp_rf1) },
    { &window_type_rf1, sizeof(window_type_rf1) },
    { &gauss_width_rf1, sizeof(gauss_width_rf1) },
    { &mux_slices_rf1, sizeof(mux_slices_rf1) },
    { &mux_slice_shift_mm_rf1, sizeof(mux_slice_shift_mm_rf1) },
    { &save_res_rf1, sizeof(save_res_rf1) },
    { &save_tbwp_rf1, sizeof(save_tbwp_rf1) },
    { &save_window_type_rf1, sizeof(save_window_type_rf1) },
    { &save_gauss_width_rf1, sizeof(save_gauss_width_rf1) },
    { &save_mux_slices_rf1, sizeof(save_mux_slices_rf1) },
    { &save_mux_slice_shift_mm_rf1, sizeof(save_mux_slice_shift_mm_rf1) },
    { &save_thk_rf1, sizeof(save_thk_rf1) },
    { &save_mux_mode_rf1, sizeof(save_mux_mode_rf1) },
    { &dwell_rf_rf1, sizeof(dwell_rf_rf1) },
    { &debug_mux_rf, sizeof(debug_mux_rf) },
    { &multiband_fa_scaling_flag, sizeof(multiband_fa_scaling_flag) },
    { &max_multiband_rf1_fa, sizeof(max_multiband_rf1_fa) },
    { &max_multiband_rf2_fa, sizeof(max_multiband_rf2_fa) },
    { &mux_rf1_scale, sizeof(mux_rf1_scale) },
    { &mux_rf2_scale, sizeof(mux_rf2_scale) },
    { &slice_fov_shift, sizeof(slice_fov_shift) },
    { &use_slice_fov_shift_blips, sizeof(use_slice_fov_shift_blips) },
    { &slice_fov_shift_area, sizeof(slice_fov_shift_area) },
    { &slice_fov_shift_cycles, sizeof(slice_fov_shift_cycles) },
    { &slice_fov_shift_blip_start, sizeof(slice_fov_shift_blip_start) },
    { &slice_fov_shift_blip_inc, sizeof(slice_fov_shift_blip_inc) },
    { &factor_gz1, sizeof(factor_gz1) },
    { &gzb_amp, sizeof(gzb_amp) },
    { &slice_fov_shift_extra_gap, sizeof(slice_fov_shift_extra_gap) },
    { &slice_fov_shift_calc_new_esp, sizeof(slice_fov_shift_calc_new_esp) },
    { &slice_fov_shift_extra_gap_flag, sizeof(slice_fov_shift_extra_gap_flag) },
    { &mux_min_verserf2_slthk, sizeof(mux_min_verserf2_slthk) },
    { &seqtime_t1flair, sizeof(seqtime_t1flair) },
    { &act_ti, sizeof(act_ti) },
    { &dda_t1flair, sizeof(dda_t1flair) },
    { &dummyslices, sizeof(dummyslices) },
    { &autoti_model, sizeof(autoti_model) },
    { &t1flair_autotr_flag, sizeof(t1flair_autotr_flag) },
    { &t2flair_autotr_flag, sizeof(t2flair_autotr_flag) },
    { &t1flair_seqtime_method, sizeof(t1flair_seqtime_method) },
    { &tmin_total_acq_seq, sizeof(tmin_total_acq_seq) },
    { &tmin_total_ir, sizeof(tmin_total_ir) },
    { &dtr1_tolerance, sizeof(dtr1_tolerance) },
    { &dtr2_tolerance, sizeof(dtr2_tolerance) },
    { &max_slice_num_reduction, sizeof(max_slice_num_reduction) },
    { &t1flair_mint1, sizeof(t1flair_mint1) },
    { &t1flair_mint2, sizeof(t1flair_mint2) },
    { &avminti_t1flair, sizeof(avminti_t1flair) },
    { &avmaxti_t1flair, sizeof(avmaxti_t1flair) },
    { &debug_t1flairenh, sizeof(debug_t1flairenh) },
    { &t1flair_chop_flag, sizeof(t1flair_chop_flag) },
    { &req_edge_slice_enh_flag, sizeof(req_edge_slice_enh_flag) },
    { &act_edge_slice_enh_flag, sizeof(act_edge_slice_enh_flag) },
    { &t1flair_slice_uniformity_flag, sizeof(t1flair_slice_uniformity_flag) },
    { &force_odd_even_slquant, sizeof(force_odd_even_slquant) },
    { &enht2flairacqs, sizeof(enht2flairacqs) },
    { &enht2flair_highsort, sizeof(enht2flair_highsort) },
    { &avmintr_autotr_t1flair, sizeof(avmintr_autotr_t1flair) },
    { &incinv, sizeof(incinv) },
    { &slquant_in_ti, sizeof(slquant_in_ti) },
    { &act_esp, sizeof(act_esp) },
    { &autotr_flair_debug, sizeof(autotr_flair_debug) },
    { &T1FLAIR_MIN_TI, sizeof(T1FLAIR_MIN_TI) },
    { &T1FLAIR_MAX_TI, sizeof(T1FLAIR_MAX_TI) },
    { &ir_prep_manual_tr_mode, sizeof(ir_prep_manual_tr_mode) },
    { &asset_factor, sizeof(asset_factor) },
    { &assetsl_factor, sizeof(assetsl_factor) },
    { &assetph_flag, sizeof(assetph_flag) },
    { &assetsl_flag, sizeof(assetsl_flag) },
    { &asset_supported_direction, sizeof(asset_supported_direction) },
    { &fov_advisory_ignore_mslices, sizeof(fov_advisory_ignore_mslices) },
    { &arc_research_flag, sizeof(arc_research_flag) },
    { &arc_split_method, sizeof(arc_split_method) },
    { &arc_fullbam_flag, sizeof(arc_fullbam_flag) },
    { &arc_extCal, sizeof(arc_extCal) },
    { &arc_ph_flag, sizeof(arc_ph_flag) },
    { &arc_ph_factor, sizeof(arc_ph_factor) },
    { &arc_ph_maxstride, sizeof(arc_ph_maxstride) },
    { &arc_ph_recstride, sizeof(arc_ph_recstride) },
    { &arc_ph_userstride, sizeof(arc_ph_userstride) },
    { &arc_ph_stride, sizeof(arc_ph_stride) },
    { &arc_ph_maxnetaccel, sizeof(arc_ph_maxnetaccel) },
    { &arc_ph_recnetaccel, sizeof(arc_ph_recnetaccel) },
    { &arc_ph_acs, sizeof(arc_ph_acs) },
    { &arc_ph_acs_min, sizeof(arc_ph_acs_min) },
    { &arc_ph_fullencode, sizeof(arc_ph_fullencode) },
    { &arc_ph_spanned, sizeof(arc_ph_spanned) },
    { &arc_ph_acquired, sizeof(arc_ph_acquired) },
    { &arc_ph_intaccel, sizeof(arc_ph_intaccel) },
    { &arc_ph_halfnex, sizeof(arc_ph_halfnex) },
    { &arc_ph_hnover, sizeof(arc_ph_hnover) },
    { &arc_ph_minover, sizeof(arc_ph_minover) },
    { &arc_sl_flag, sizeof(arc_sl_flag) },
    { &arc_sl_factor, sizeof(arc_sl_factor) },
    { &arc_sl_maxstride, sizeof(arc_sl_maxstride) },
    { &arc_sl_recstride, sizeof(arc_sl_recstride) },
    { &arc_sl_userstride, sizeof(arc_sl_userstride) },
    { &arc_sl_stride, sizeof(arc_sl_stride) },
    { &arc_sl_maxnetaccel, sizeof(arc_sl_maxnetaccel) },
    { &arc_sl_recnetaccel, sizeof(arc_sl_recnetaccel) },
    { &arc_sl_acs, sizeof(arc_sl_acs) },
    { &arc_sl_acs_min, sizeof(arc_sl_acs_min) },
    { &arc_sl_fullencode, sizeof(arc_sl_fullencode) },
    { &arc_sl_spanned, sizeof(arc_sl_spanned) },
    { &arc_sl_acquired, sizeof(arc_sl_acquired) },
    { &arc_sl_intaccel, sizeof(arc_sl_intaccel) },
    { &arc_sl_halfnex, sizeof(arc_sl_halfnex) },
    { &arc_sl_hnover, sizeof(arc_sl_hnover) },
    { &arc_sl_minover, sizeof(arc_sl_minover) },
    { &arc_sl_fn, sizeof(arc_sl_fn) },
    { &arc_kx_peak_pos, sizeof(arc_kx_peak_pos) },
    { &arc_ky_peak_pos, sizeof(arc_ky_peak_pos) },
    { &arc_syn_pts, sizeof(arc_syn_pts) },
    { &ARCKey, sizeof(ARCKey) },
    { &readmonloc, sizeof(readmonloc) },
    { &loopdelay, sizeof(loopdelay) },
    { &loopdelay2, sizeof(loopdelay2) },
    { &navgs, sizeof(navgs) },
    { &sigma1, sizeof(sigma1) },
    { &sigma2, sizeof(sigma2) },
    { &savedata, sizeof(savedata) },
    { &max_avg_time, sizeof(max_avg_time) },
    { &monloc_shift, sizeof(monloc_shift) },
    { &tracker_quant, sizeof(tracker_quant) },
    { &acq_data_only, sizeof(acq_data_only) },
    { &mon_tr, sizeof(mon_tr) },
    { &smartprep_flag, sizeof(smartprep_flag) },
    { &min_delay_time, sizeof(min_delay_time) },
    { &num_audibles, sizeof(num_audibles) },
    { &audible_loop, sizeof(audible_loop) },
    { &data_type, sizeof(data_type) },
    { &save_fft, sizeof(save_fft) },
    { &swap_monplane, sizeof(swap_monplane) },
    { &swap_mon_zy, sizeof(swap_mon_zy) },
    { &detector_mode, sizeof(detector_mode) },
    { &fov_factor, sizeof(fov_factor) },
    { &nav_angle_adj, sizeof(nav_angle_adj) },
    { &mon_angle, sizeof(mon_angle) },
    { &nav_tipup_ratio, sizeof(nav_tipup_ratio) },
    { &cylr_rf_type, sizeof(cylr_rf_type) },
    { &pw_rfcylr, sizeof(pw_rfcylr) },
    { &ia_rfcylr, sizeof(ia_rfcylr) },
    { &a_rfcylr, sizeof(a_rfcylr) },
    { &pw_thcylr, sizeof(pw_thcylr) },
    { &ia_thcylr, sizeof(ia_thcylr) },
    { &a_thcylr, sizeof(a_thcylr) },
    { &pw_gycylr, sizeof(pw_gycylr) },
    { &ia_gycylr, sizeof(ia_gycylr) },
    { &a_gycylr, sizeof(a_gycylr) },
    { &pw_gzcylr, sizeof(pw_gzcylr) },
    { &ia_gzcylr, sizeof(ia_gzcylr) },
    { &a_gzcylr, sizeof(a_gzcylr) },
    { &pw_rfcylrtipup, sizeof(pw_rfcylrtipup) },
    { &ia_rfcylrtipup, sizeof(ia_rfcylrtipup) },
    { &a_rfcylrtipup, sizeof(a_rfcylrtipup) },
    { &pw_thcylrtipup, sizeof(pw_thcylrtipup) },
    { &ia_thcylrtipup, sizeof(ia_thcylrtipup) },
    { &a_thcylrtipup, sizeof(a_thcylrtipup) },
    { &pw_gycylrtipup, sizeof(pw_gycylrtipup) },
    { &ia_gycylrtipup, sizeof(ia_gycylrtipup) },
    { &a_gycylrtipup, sizeof(a_gycylrtipup) },
    { &pw_gzcylrtipup, sizeof(pw_gzcylrtipup) },
    { &ia_gzcylrtipup, sizeof(ia_gzcylrtipup) },
    { &a_gzcylrtipup, sizeof(a_gzcylrtipup) },
    { &min_delay_sec, sizeof(min_delay_sec) },
    { &delay_dda, sizeof(delay_dda) },
    { &delay_quiet_dda, sizeof(delay_quiet_dda) },
    { &total_quiet_dda, sizeof(total_quiet_dda) },
    { &rtpend_quiet_dda, sizeof(rtpend_quiet_dda) },
    { &delay_quiet_time, sizeof(delay_quiet_time) },
    { &debug_monrot, sizeof(debug_monrot) },
    { &debug_monrotphi, sizeof(debug_monrotphi) },
    { &debug_monloc, sizeof(debug_monloc) },
    { &transpose_monloc, sizeof(transpose_monloc) },
    { &write_spinfo, sizeof(write_spinfo) },
    { &oblique_monplane, sizeof(oblique_monplane) },
    { &monitor_axis, sizeof(monitor_axis) },
    { &theta, sizeof(theta) },
    { &ta_180sp, sizeof(ta_180sp) },
    { &tb_180sp, sizeof(tb_180sp) },
    { &te_180sp, sizeof(te_180sp) },
    { &min_montr, sizeof(min_montr) },
    { &tlead_monitor, sizeof(tlead_monitor) },
    { &tlead_montipup, sizeof(tlead_montipup) },
    { &mon_ssi_time, sizeof(mon_ssi_time) },
    { &non_tetime_mon, sizeof(non_tetime_mon) },
    { &tmin_mon, sizeof(tmin_mon) },
    { &tmin_montipup, sizeof(tmin_montipup) },
    { &rda_mon, sizeof(rda_mon) },
    { &minseqcoilmon_t, sizeof(minseqcoilmon_t) },
    { &minseqgrddrvmon_t, sizeof(minseqgrddrvmon_t) },
    { &minseqgrddrvxmon_t, sizeof(minseqgrddrvxmon_t) },
    { &minseqgrddrvymon_t, sizeof(minseqgrddrvymon_t) },
    { &minseqgrddrvzmon_t, sizeof(minseqgrddrvzmon_t) },
    { &minseqcablemon_t, sizeof(minseqcablemon_t) },
    { &minseqbusbarmon_t, sizeof(minseqbusbarmon_t) },
    { &max_seqsarmon, sizeof(max_seqsarmon) },
    { &min_seqrfampmon, sizeof(min_seqrfampmon) },
    { &monnewgeo, sizeof(monnewgeo) },
    { &monobl_debug, sizeof(monobl_debug) },
    { &monobl_method, sizeof(monobl_method) },
    { &monitor_page, sizeof(monitor_page) },
    { &monave_sar, sizeof(monave_sar) },
    { &monpeak_sar, sizeof(monpeak_sar) },
    { &moncave_sar, sizeof(moncave_sar) },
    { &mon_xres, sizeof(mon_xres) },
    { &rf1mon_shift, sizeof(rf1mon_shift) },
    { &rf2mon_shift, sizeof(rf2mon_shift) },
    { &bw_rf1mon, sizeof(bw_rf1mon) },
    { &bw_rf2mon, sizeof(bw_rf2mon) },
    { &bw_rfmontipup, sizeof(bw_rfmontipup) },
    { &mon_fov, sizeof(mon_fov) },
    { &mon_acqfov, sizeof(mon_acqfov) },
    { &echo1monbw, sizeof(echo1monbw) },
    { &mon_vthickz, sizeof(mon_vthickz) },
    { &mon_vthicky, sizeof(mon_vthicky) },
    { &mon_vthick, sizeof(mon_vthick) },
    { &area_gzkmon, sizeof(area_gzkmon) },
    { &area_gzkmontipup, sizeof(area_gzkmontipup) },
    { &mon_fcomp, sizeof(mon_fcomp) },
    { &fnecho_frac, sizeof(fnecho_frac) },
    { &monitor_test, sizeof(monitor_test) },
    { &get_fullecho, sizeof(get_fullecho) },
    { &numpts2pass, sizeof(numpts2pass) },
    { &reverse_views, sizeof(reverse_views) },
    { &mon_trigger_delay, sizeof(mon_trigger_delay) },
    { &smartprep_was_on, sizeof(smartprep_was_on) },
    { &scanclocktime, sizeof(scanclocktime) },
    { &mon_dabdelay, sizeof(mon_dabdelay) },
    { &xres2use, sizeof(xres2use) },
    { &num_avg_bline, sizeof(num_avg_bline) },
    { &num_throwaways, sizeof(num_throwaways) },
    { &num_baseline_pts, sizeof(num_baseline_pts) },
    { &tmpbw1, sizeof(tmpbw1) },
    { &debug_sp_rtp, sizeof(debug_sp_rtp) },
    { &debug_sp_agp, sizeof(debug_sp_agp) },
    { &cerdtype, sizeof(cerdtype) },
    { &mon_run_setrcvportimm, sizeof(mon_run_setrcvportimm) },
    { &sprep_save_raw_data, sizeof(sprep_save_raw_data) },
    { &sprep_debug_flag, sizeof(sprep_debug_flag) },
    { &sprep_timing_flag, sizeof(sprep_timing_flag) },
    { &rtpresultwait, sizeof(rtpresultwait) },
    { &navend_time, sizeof(navend_time) },
    { &nav_dual_mode, sizeof(nav_dual_mode) },
    { &nav_irprep_flag, sizeof(nav_irprep_flag) },
    { &nav_tseq_irprep, sizeof(nav_tseq_irprep) },
    { &nav_min_tseq_irprep, sizeof(nav_min_tseq_irprep) },
    { &pw_nomcyl, sizeof(pw_nomcyl) },
    { &a_nomcyl, sizeof(a_nomcyl) },
    { &smartPrepEdrFlag, sizeof(smartPrepEdrFlag) },
    { &slabtracking_flag, sizeof(slabtracking_flag) },
    { &corr_mode, sizeof(corr_mode) },
    { &corr_factor_z, sizeof(corr_factor_z) },
    { &corr_factor_y, sizeof(corr_factor_y) },
    { &corr_factor_x, sizeof(corr_factor_x) },
    { &corr_x, sizeof(corr_x) },
    { &corr_y, sizeof(corr_y) },
    { &corr_z, sizeof(corr_z) },
    { &fixed_acqs_debug, sizeof(fixed_acqs_debug) },
    { &sl_acq, sizeof(sl_acq) },
    { &sl_acq_val2, sizeof(sl_acq_val2) },
    { &sl_acq_val3, sizeof(sl_acq_val3) },
    { &sl_acq_val4, sizeof(sl_acq_val4) },
    { &tr_acq, sizeof(tr_acq) },
    { &tr_acq_val2, sizeof(tr_acq_val2) },
    { &tr_acq_val3, sizeof(tr_acq_val3) },
    { &tr_acq_val4, sizeof(tr_acq_val4) },
    { &tr_limit, sizeof(tr_limit) },
    { &temp_trval, sizeof(temp_trval) },
    { &temp_tmin_total, sizeof(temp_tmin_total) },
    { &keep_opti, sizeof(keep_opti) },
    { &rtb0_flag, sizeof(rtb0_flag) },
    { &rtb0_enable, sizeof(rtb0_enable) },
    { &rtb0_support, sizeof(rtb0_support) },
    { &rtb0_first_skip, sizeof(rtb0_first_skip) },
    { &rtb0_last_skip, sizeof(rtb0_last_skip) },
    { &rtb0_movAvg, sizeof(rtb0_movAvg) },
    { &rtb0_min_points, sizeof(rtb0_min_points) },
    { &rtb0DebugFlag, sizeof(rtb0DebugFlag) },
    { &rtb0SaveRaw, sizeof(rtb0SaveRaw) },
    { &rtb0_phase_method, sizeof(rtb0_phase_method) },
    { &rtb0_coil_combine, sizeof(rtb0_coil_combine) },
    { &rtb0_timing_flag, sizeof(rtb0_timing_flag) },
    { &rtb0dummy_time, sizeof(rtb0dummy_time) },
    { &rtb0fittingwaittime, sizeof(rtb0fittingwaittime) },
    { &rtb0resultwaittime, sizeof(rtb0resultwaittime) },
    { &rtb0fittingwaittimeLoop, sizeof(rtb0fittingwaittimeLoop) },
    { &rtb0dummyseq, sizeof(rtb0dummyseq) },
    { &rtb0_comp_flag, sizeof(rtb0_comp_flag) },
    { &rtb0_acq_delay, sizeof(rtb0_acq_delay) },
    { &rtb0_minintervalb4acq, sizeof(rtb0_minintervalb4acq) },
    { &rtb0_r1_delta, sizeof(rtb0_r1_delta) },
    { &pw_dynr1, sizeof(pw_dynr1) },
    { &rtb0_filter_cf_flag, sizeof(rtb0_filter_cf_flag) },
    { &rtb0_recvphase_comp_flag, sizeof(rtb0_recvphase_comp_flag) },
    { &rtb0_comp_debug_flag, sizeof(rtb0_comp_debug_flag) },
    { &rtb0_cfoffset_debug, sizeof(rtb0_cfoffset_debug) },
    { &rtb0_slice_shift, sizeof(rtb0_slice_shift) },
    { &cf_interpolation, sizeof(cf_interpolation) },
    { &rtb0_max_range, sizeof(rtb0_max_range) },
    { &rtb0_rejectnoise, sizeof(rtb0_rejectnoise) },
    { &rtb0_smooth_kernel_size, sizeof(rtb0_smooth_kernel_size) },
    { &rtb0_smooth_cf_flag, sizeof(rtb0_smooth_cf_flag) },
    { &rtb0_median_kernel_size, sizeof(rtb0_median_kernel_size) },
    { &rtb0_min_kernel_keep_edge, sizeof(rtb0_min_kernel_keep_edge) },
    { &rtb0_max_kernel_percent, sizeof(rtb0_max_kernel_percent) },
    { &rtb0_max_kernel_keep_edge, sizeof(rtb0_max_kernel_keep_edge) },
    { &rtb0_confidence_method, sizeof(rtb0_confidence_method) },
    { &rtb0_cfstddev_threshold, sizeof(rtb0_cfstddev_threshold) },
    { &rtb0_cfresidual_threshold, sizeof(rtb0_cfresidual_threshold) },
    { &rtb0_confidence_thresh_val, sizeof(rtb0_confidence_thresh_val) },
    { &rtb0_gzrf0_off, sizeof(rtb0_gzrf0_off) },
    { &rtb0_spsp_flag, sizeof(rtb0_spsp_flag) },
    { &rtb0_dda, sizeof(rtb0_dda) },
    { &rtb0_debug, sizeof(rtb0_debug) },
    { &rtb0_midsliceindex, sizeof(rtb0_midsliceindex) },
    { &rtb0_outlier_threshold, sizeof(rtb0_outlier_threshold) },
    { &rtb0_outlier_duration, sizeof(rtb0_outlier_duration) },
    { &rtb0_outlier_nTRs, sizeof(rtb0_outlier_nTRs) },
    { &focus_eval_oscil, sizeof(focus_eval_oscil) },
    { &focus_eval_oscil_hist, sizeof(focus_eval_oscil_hist) },
    { &isPredownload, sizeof(isPredownload) },
    { &keep_focus_eval_oscil, sizeof(keep_focus_eval_oscil) },
    { &reset_oscil_in_eval, sizeof(reset_oscil_in_eval) },
    { &force_acqs, sizeof(force_acqs) },
    { &force_avmaxslquant, sizeof(force_avmaxslquant) },
    { &oscil_eval_count, sizeof(oscil_eval_count) },
    { &optr_save, sizeof(optr_save) },
    { &opslquant_save, sizeof(opslquant_save) },
    { &save_avmintr, sizeof(save_avmintr) },
    { &save_pitracqval4, sizeof(save_pitracqval4) },
    { &res_gd1, sizeof(res_gd1) },
    { &res_gd2, sizeof(res_gd2) },
    { &pw_gd1, sizeof(pw_gd1) },
    { &pw_gd2, sizeof(pw_gd2) },
    { &a_gxdl, sizeof(a_gxdl) },
    { &a_gxdr, sizeof(a_gxdr) },
    { &ia_gxdl, sizeof(ia_gxdl) },
    { &ia_gxdr, sizeof(ia_gxdr) },
    { &res_gxdl, sizeof(res_gxdl) },
    { &res_gxdr, sizeof(res_gxdr) },
    { &pw_gxdr, sizeof(pw_gxdr) },
    { &pw_gxdl, sizeof(pw_gxdl) },
    { &wg_gxdr, sizeof(wg_gxdr) },
    { &wg_gxdl, sizeof(wg_gxdl) },
    { &a_gydl, sizeof(a_gydl) },
    { &a_gydr, sizeof(a_gydr) },
    { &ia_gydl, sizeof(ia_gydl) },
    { &ia_gydr, sizeof(ia_gydr) },
    { &res_gydl, sizeof(res_gydl) },
    { &res_gydr, sizeof(res_gydr) },
    { &pw_gydr, sizeof(pw_gydr) },
    { &pw_gydl, sizeof(pw_gydl) },
    { &wg_gydr, sizeof(wg_gydr) },
    { &wg_gydl, sizeof(wg_gydl) },
    { &a_gzdl, sizeof(a_gzdl) },
    { &a_gzdr, sizeof(a_gzdr) },
    { &ia_gzdl, sizeof(ia_gzdl) },
    { &ia_gzdr, sizeof(ia_gzdr) },
    { &res_gzdl, sizeof(res_gzdl) },
    { &res_gzdr, sizeof(res_gzdr) },
    { &pw_gzdr, sizeof(pw_gzdr) },
    { &pw_gzdl, sizeof(pw_gzdl) },
    { &wg_gzdr, sizeof(wg_gzdr) },
    { &wg_gzdl, sizeof(wg_gzdl) },
    { &a_gxdla, sizeof(a_gxdla) },
    { &a_gxdld, sizeof(a_gxdld) },
    { &a_gxdra, sizeof(a_gxdra) },
    { &a_gxdrd, sizeof(a_gxdrd) },
    { &ia_gxdla, sizeof(ia_gxdla) },
    { &ia_gxdld, sizeof(ia_gxdld) },
    { &ia_gxdra, sizeof(ia_gxdra) },
    { &ia_gxdrd, sizeof(ia_gxdrd) },
    { &pw_gxdla, sizeof(pw_gxdla) },
    { &pw_gxdld, sizeof(pw_gxdld) },
    { &pw_gxdra, sizeof(pw_gxdra) },
    { &pw_gxdrd, sizeof(pw_gxdrd) },
    { &a_gydla, sizeof(a_gydla) },
    { &a_gydld, sizeof(a_gydld) },
    { &a_gydra, sizeof(a_gydra) },
    { &a_gydrd, sizeof(a_gydrd) },
    { &ia_gydla, sizeof(ia_gydla) },
    { &ia_gydld, sizeof(ia_gydld) },
    { &ia_gydra, sizeof(ia_gydra) },
    { &ia_gydrd, sizeof(ia_gydrd) },
    { &pw_gydla, sizeof(pw_gydla) },
    { &pw_gydld, sizeof(pw_gydld) },
    { &pw_gydra, sizeof(pw_gydra) },
    { &pw_gydrd, sizeof(pw_gydrd) },
    { &a_gzdla, sizeof(a_gzdla) },
    { &a_gzdld, sizeof(a_gzdld) },
    { &a_gzdra, sizeof(a_gzdra) },
    { &a_gzdrd, sizeof(a_gzdrd) },
    { &ia_gzdla, sizeof(ia_gzdla) },
    { &ia_gzdld, sizeof(ia_gzdld) },
    { &ia_gzdra, sizeof(ia_gzdra) },
    { &ia_gzdrd, sizeof(ia_gzdrd) },
    { &pw_gzdla, sizeof(pw_gzdla) },
    { &pw_gzdld, sizeof(pw_gzdld) },
    { &pw_gzdra, sizeof(pw_gzdra) },
    { &pw_gzdrd, sizeof(pw_gzdrd) },
    { &num_passdelay, sizeof(num_passdelay) },
    { &use_maxloggrad, sizeof(use_maxloggrad) },
    { &max_grad, sizeof(max_grad) },
    { &scale_dif, sizeof(scale_dif) },
    { &debug_core, sizeof(debug_core) },
    { &debug_unitTest, sizeof(debug_unitTest) },
    { &taratio, sizeof(taratio) },
    { &rampopt, sizeof(rampopt) },
    { &totarea, sizeof(totarea) },
    { &actratio, sizeof(actratio) },
    { &dpc_flag, sizeof(dpc_flag) },
    { &sndpc_flag, sizeof(sndpc_flag) },
    { &iref_etl, sizeof(iref_etl) },
    { &iref_frames, sizeof(iref_frames) },
    { &tot_etl, sizeof(tot_etl) },
    { &pw_gxiref1_tot, sizeof(pw_gxiref1_tot) },
    { &pw_gxiref_tot, sizeof(pw_gxiref_tot) },
    { &pw_gxirefr_tot, sizeof(pw_gxirefr_tot) },
    { &MinFram2FramTime, sizeof(MinFram2FramTime) },
    { &maxslice_per_ti, sizeof(maxslice_per_ti) },
    { &invseqtime, sizeof(invseqtime) },
    { &false_acqs, sizeof(false_acqs) },
    { &false_slquant1, sizeof(false_slquant1) },
    { &max_slice_ti, sizeof(max_slice_ti) },
    { &flair_min_tr, sizeof(flair_min_tr) },
    { &dda_packb, sizeof(dda_packb) },
    { &dda_pack, sizeof(dda_pack) },
    { &dda_packe, sizeof(dda_packe) },
    { &dda_passb, sizeof(dda_passb) },
    { &dda_pass, sizeof(dda_pass) },
    { &deadlast, sizeof(deadlast) },
    { &tmp_deadlast, sizeof(tmp_deadlast) },
    { &phase_dither, sizeof(phase_dither) },
    { &spgr_flag, sizeof(spgr_flag) },
    { &rhhnover_max, sizeof(rhhnover_max) },
    { &rhhnover_min, sizeof(rhhnover_min) },
    { &rhhnover_min_per_ilv, sizeof(rhhnover_min_per_ilv) },
    { &newyres, sizeof(newyres) },
    { &num_overscan, sizeof(num_overscan) },
    { &smart_numoverscan, sizeof(smart_numoverscan) },
    { &avmintefull, sizeof(avmintefull) },
    { &cvrefindex1, sizeof(cvrefindex1) },
    { &gx1_area, sizeof(gx1_area) },
    { &avmintetemp, sizeof(avmintetemp) },
    { &fast_rec, sizeof(fast_rec) },
    { &bl_acq_tr1, sizeof(bl_acq_tr1) },
    { &bl_acq_tr2, sizeof(bl_acq_tr2) },
    { &fecho_factor, sizeof(fecho_factor) },
    { &tsp, sizeof(tsp) },
    { &intleaves, sizeof(intleaves) },
    { &ky_dir, sizeof(ky_dir) },
    { &kx_dir, sizeof(kx_dir) },
    { &dc_chop, sizeof(dc_chop) },
    { &etot, sizeof(etot) },
    { &emid, sizeof(emid) },
    { &e1st, sizeof(e1st) },
    { &seq_data, sizeof(seq_data) },
    { &msamp, sizeof(msamp) },
    { &dsamp, sizeof(dsamp) },
    { &delpw, sizeof(delpw) },
    { &num_dif, sizeof(num_dif) },
    { &incr, sizeof(incr) },
    { &df_encode, sizeof(df_encode) },
    { &i_bval, sizeof(i_bval) },
    { &df_refscn, sizeof(df_refscn) },
    { &dwi_fphases, sizeof(dwi_fphases) },
    { &max_slice_dfaxall, sizeof(max_slice_dfaxall) },
    { &dualspinecho_flag, sizeof(dualspinecho_flag) },
    { &derate_amp, sizeof(derate_amp) },
    { &scale_difx, sizeof(scale_difx) },
    { &scale_dify, sizeof(scale_dify) },
    { &scale_difz, sizeof(scale_difz) },
    { &unbalanceCrusher, sizeof(unbalanceCrusher) },
    { &crusherFactorLeft, sizeof(crusherFactorLeft) },
    { &crusherFactorRight, sizeof(crusherFactorRight) },
    { &invertSliceSelectZ, sizeof(invertSliceSelectZ) },
    { &invertSliceSelectZ2, sizeof(invertSliceSelectZ2) },
    { &xygradRightCrusherFlag, sizeof(xygradRightCrusherFlag) },
    { &xygradLeftCrusherFlag, sizeof(xygradLeftCrusherFlag) },
    { &xygradCrusherFlag, sizeof(xygradCrusherFlag) },
    { &invertCrusherXY, sizeof(invertCrusherXY) },
    { &ssgr_mux, sizeof(ssgr_mux) },
    { &ssgr_flag, sizeof(ssgr_flag) },
    { &ssgr_bw_update, sizeof(ssgr_bw_update) },
    { &freqSign_rf2right, sizeof(freqSign_rf2right) },
    { &freqSign_rf2left, sizeof(freqSign_rf2left) },
    { &freqSign_rf2, sizeof(freqSign_rf2) },
    { &fat_cs, sizeof(fat_cs) },
    { &rf1_bw_ratio, sizeof(rf1_bw_ratio) },
    { &rf2_bw_ratio, sizeof(rf2_bw_ratio) },
    { &b0_offset, sizeof(b0_offset) },
    { &RightCrusherLSlop, sizeof(RightCrusherLSlop) },
    { &RightCrusherRSlop, sizeof(RightCrusherRSlop) },
    { &LeftCrusherLSlop, sizeof(LeftCrusherLSlop) },
    { &LeftCrusherRSlop, sizeof(LeftCrusherRSlop) },
    { &CrusherRSlop, sizeof(CrusherRSlop) },
    { &CrusherLSlop, sizeof(CrusherLSlop) },
    { &epi2spec_mode, sizeof(epi2spec_mode) },
    { &weighted_avg_grad, sizeof(weighted_avg_grad) },
    { &weighted_avg_debug, sizeof(weighted_avg_debug) },
    { &DELTAx, sizeof(DELTAx) },
    { &DELTAy, sizeof(DELTAy) },
    { &DELTAz, sizeof(DELTAz) },
    { &deltax, sizeof(deltax) },
    { &deltay, sizeof(deltay) },
    { &deltaz, sizeof(deltaz) },
    { &a_gx_dwi, sizeof(a_gx_dwi) },
    { &a_gy_dwi, sizeof(a_gy_dwi) },
    { &a_gz_dwi, sizeof(a_gz_dwi) },
    { &freq_dwi, sizeof(freq_dwi) },
    { &phase_dwi, sizeof(phase_dwi) },
    { &ia_gx_dwi, sizeof(ia_gx_dwi) },
    { &ia_gy_dwi, sizeof(ia_gy_dwi) },
    { &ia_gz_dwi, sizeof(ia_gz_dwi) },
    { &dwicntrl, sizeof(dwicntrl) },
    { &dwidebug, sizeof(dwidebug) },
    { &tmp_ileave, sizeof(tmp_ileave) },
    { &tmp_ygrad_sw, sizeof(tmp_ygrad_sw) },
    { &t4_tmp, sizeof(t4_tmp) },
    { &incdifx, sizeof(incdifx) },
    { &incdify, sizeof(incdify) },
    { &incdifz, sizeof(incdifz) },
    { &ia_incdifx, sizeof(ia_incdifx) },
    { &ia_incdify, sizeof(ia_incdify) },
    { &ia_incdifz, sizeof(ia_incdifz) },
    { &waveform_type, sizeof(waveform_type) },
    { &ide_max_bval, sizeof(ide_max_bval) },
    { &sde_max_bval, sizeof(sde_max_bval) },
    { &bincr, sizeof(bincr) },
    { &invthick, sizeof(invthick) },
    { &xerror, sizeof(xerror) },
    { &yerror, sizeof(yerror) },
    { &zerror, sizeof(zerror) },
    { &obl_3in1_opt_debug, sizeof(obl_3in1_opt_debug) },
    { &obl_3in1_opt, sizeof(obl_3in1_opt) },
    { &norot_incdifx, sizeof(norot_incdifx) },
    { &norot_incdify, sizeof(norot_incdify) },
    { &norot_incdifz, sizeof(norot_incdifz) },
    { &target_mpg_inv, sizeof(target_mpg_inv) },
    { &target_mpg, sizeof(target_mpg) },
    { &amp_difx_bverify, sizeof(amp_difx_bverify) },
    { &amp_dify_bverify, sizeof(amp_dify_bverify) },
    { &amp_difz_bverify, sizeof(amp_difz_bverify) },
    { &different_mpg_amp_flag, sizeof(different_mpg_amp_flag) },
    { &act_acqs, sizeof(act_acqs) },
    { &min_acqs, sizeof(min_acqs) },
    { &maxslq_titime, sizeof(maxslq_titime) },
    { &maxslq_ilir, sizeof(maxslq_ilir) },
    { &epi_flair, sizeof(epi_flair) },
    { &flair_flag, sizeof(flair_flag) },
    { &dda_fact, sizeof(dda_fact) },
    { &reps, sizeof(reps) },
    { &pass_reps, sizeof(pass_reps) },
    { &max_dsht, sizeof(max_dsht) },
    { &avg_at_loc, sizeof(avg_at_loc) },
    { &filtfix, sizeof(filtfix) },
    { &rf_chop, sizeof(rf_chop) },
    { &rftype, sizeof(rftype) },
    { &thetatype, sizeof(thetatype) },
    { &gztype, sizeof(gztype) },
    { &hsdab, sizeof(hsdab) },
    { &slice_num, sizeof(slice_num) },
    { &rep_num, sizeof(rep_num) },
    { &endview_iamp, sizeof(endview_iamp) },
    { &endview_scale, sizeof(endview_scale) },
    { &gx1pos, sizeof(gx1pos) },
    { &gy1pos, sizeof(gy1pos) },
    { &eosxkiller, sizeof(eosxkiller) },
    { &eosykiller, sizeof(eosykiller) },
    { &eoszkiller, sizeof(eoszkiller) },
    { &eoskillers, sizeof(eoskillers) },
    { &eosrhokiller, sizeof(eosrhokiller) },
    { &gyctrl, sizeof(gyctrl) },
    { &gxctrl, sizeof(gxctrl) },
    { &gzctrl, sizeof(gzctrl) },
    { &ygmn_type, sizeof(ygmn_type) },
    { &zgmn_type, sizeof(zgmn_type) },
    { &rampsamp, sizeof(rampsamp) },
    { &final_xres, sizeof(final_xres) },
    { &autovrgf, sizeof(autovrgf) },
    { &vrgf_targ, sizeof(vrgf_targ) },
    { &vrgf_reorder, sizeof(vrgf_reorder) },
    { &fbhw, sizeof(fbhw) },
    { &osamp, sizeof(osamp) },
    { &etl, sizeof(etl) },
    { &eesp, sizeof(eesp) },
    { &nblips, sizeof(nblips) },
    { &blips2cent, sizeof(blips2cent) },
    { &ep_alt, sizeof(ep_alt) },
    { &tia_gx1, sizeof(tia_gx1) },
    { &tia_gxw, sizeof(tia_gxw) },
    { &tia_gxk, sizeof(tia_gxk) },
    { &tia_gxiref1, sizeof(tia_gxiref1) },
    { &tia_gxirefr, sizeof(tia_gxirefr) },
    { &ta_gxwn, sizeof(ta_gxwn) },
    { &rbw, sizeof(rbw) },
    { &avminxa, sizeof(avminxa) },
    { &avminxb, sizeof(avminxb) },
    { &avminx, sizeof(avminx) },
    { &avminya, sizeof(avminya) },
    { &avminyb, sizeof(avminyb) },
    { &avminy, sizeof(avminy) },
    { &avminza, sizeof(avminza) },
    { &avminzb, sizeof(avminzb) },
    { &avminz, sizeof(avminz) },
    { &avminssp, sizeof(avminssp) },
    { &avminfovx, sizeof(avminfovx) },
    { &avminfovy, sizeof(avminfovy) },
    { &hrdwr_period, sizeof(hrdwr_period) },
    { &samp_period, sizeof(samp_period) },
    { &pwmin_gap, sizeof(pwmin_gap) },
    { &frqx, sizeof(frqx) },
    { &frqy, sizeof(frqy) },
    { &dacq_offset, sizeof(dacq_offset) },
    { &pepolar, sizeof(pepolar) },
    { &rpg_flag, sizeof(rpg_flag) },
    { &rpg_in_scan_flag, sizeof(rpg_in_scan_flag) },
    { &rpg_in_scan_num, sizeof(rpg_in_scan_num) },
    { &tdaqhxa, sizeof(tdaqhxa) },
    { &tdaqhxb, sizeof(tdaqhxb) },
    { &xdiff_time1, sizeof(xdiff_time1) },
    { &xdiff_time2, sizeof(xdiff_time2) },
    { &ydiff_time1, sizeof(ydiff_time1) },
    { &ydiff_time2, sizeof(ydiff_time2) },
    { &zdiff_time1, sizeof(zdiff_time1) },
    { &zdiff_time2, sizeof(zdiff_time2) },
    { &delt, sizeof(delt) },
    { &T1eff, sizeof(T1eff) },
    { &bcoeff, sizeof(bcoeff) },
    { &aspir_auto_ti_model, sizeof(aspir_auto_ti_model) },
    { &tfon, sizeof(tfon) },
    { &fract_ky, sizeof(fract_ky) },
    { &ky_offset, sizeof(ky_offset) },
    { &gy1_offset, sizeof(gy1_offset) },
    { &satdelay, sizeof(satdelay) },
    { &sp_sattype, sizeof(sp_sattype) },
    { &td0, sizeof(td0) },
    { &t_exa, sizeof(t_exa) },
    { &te_time, sizeof(te_time) },
    { &pos_start, sizeof(pos_start) },
    { &pos_start_init, sizeof(pos_start_init) },
    { &post_echo_time, sizeof(post_echo_time) },
    { &psd_tseq, sizeof(psd_tseq) },
    { &time_ssi, sizeof(time_ssi) },
    { &dacq_adjust, sizeof(dacq_adjust) },
    { &watchdogcount, sizeof(watchdogcount) },
    { &dabdelay, sizeof(dabdelay) },
    { &tlead, sizeof(tlead) },
    { &act_tr, sizeof(act_tr) },
    { &rfconf, sizeof(rfconf) },
    { &ctlend, sizeof(ctlend) },
    { &dda, sizeof(dda) },
    { &debug, sizeof(debug) },
    { &debug_dbdt, sizeof(debug_dbdt) },
    { &debugipg, sizeof(debugipg) },
    { &debugepc, sizeof(debugepc) },
    { &debugdither, sizeof(debugdither) },
    { &debugdelay, sizeof(debugdelay) },
    { &dex, sizeof(dex) },
    { &gating, sizeof(gating) },
    { &ipg_trigtest, sizeof(ipg_trigtest) },
    { &gxktime, sizeof(gxktime) },
    { &gyktime, sizeof(gyktime) },
    { &gzktime, sizeof(gzktime) },
    { &gktime, sizeof(gktime) },
    { &gkdelay, sizeof(gkdelay) },
    { &scanbw, sizeof(scanbw) },
    { &scanslot, sizeof(scanslot) },
    { &a_lcrush_cfh, sizeof(a_lcrush_cfh) },
    { &area_gxw, sizeof(area_gxw) },
    { &area_gx1, sizeof(area_gx1) },
    { &area_readramp, sizeof(area_readramp) },
    { &area_r1, sizeof(area_r1) },
    { &area_gz1, sizeof(area_gz1) },
    { &area_gzrf2l1, sizeof(area_gzrf2l1) },
    { &area_r1_cfh, sizeof(area_r1_cfh) },
    { &area_std, sizeof(area_std) },
    { &area_stde, sizeof(area_stde) },
    { &avail_pwgz1, sizeof(avail_pwgz1) },
    { &prescan1_tr, sizeof(prescan1_tr) },
    { &ps2_dda, sizeof(ps2_dda) },
    { &avail_pwgx1, sizeof(avail_pwgx1) },
    { &avail_image_time, sizeof(avail_image_time) },
    { &beg_nontetime, sizeof(beg_nontetime) },
    { &pos_start_rf0, sizeof(pos_start_rf0) },
    { &beg_nontitime, sizeof(beg_nontitime) },
    { &avail_se_time, sizeof(avail_se_time) },
    { &avail_tdaqhxa, sizeof(avail_tdaqhxa) },
    { &full_irtime, sizeof(full_irtime) },
    { &avail_yflow_time, sizeof(avail_yflow_time) },
    { &avail_zflow_time, sizeof(avail_zflow_time) },
    { &nviews, sizeof(nviews) },
    { &test_getecg, sizeof(test_getecg) },
    { &premid_rf90, sizeof(premid_rf90) },
    { &c1_scale, sizeof(c1_scale) },
    { &c2_scale, sizeof(c2_scale) },
    { &crusher_cycles, sizeof(crusher_cycles) },
    { &max_seqtime, sizeof(max_seqtime) },
    { &max_slicesar, sizeof(max_slicesar) },
    { &max_seqsar, sizeof(max_seqsar) },
    { &myrloc, sizeof(myrloc) },
    { &other_slice_limit, sizeof(other_slice_limit) },
    { &target_area, sizeof(target_area) },
    { &start_amp, sizeof(start_amp) },
    { &end_amp, sizeof(end_amp) },
    { &pre_pass, sizeof(pre_pass) },
    { &nreps, sizeof(nreps) },
    { &xmtaddScan, sizeof(xmtaddScan) },
    { &rfscale, sizeof(rfscale) },
    { &rfExIso, sizeof(rfExIso) },
    { &frq2sync_dly, sizeof(frq2sync_dly) },
    { &rf1_phase, sizeof(rf1_phase) },
    { &rf2_phase, sizeof(rf2_phase) },
    { &hrf1a, sizeof(hrf1a) },
    { &hrf1b, sizeof(hrf1b) },
    { &hrf2a, sizeof(hrf2a) },
    { &hrf2b, sizeof(hrf2b) },
    { &innerVol, sizeof(innerVol) },
    { &ivslthick, sizeof(ivslthick) },
    { &psd_mantrig, sizeof(psd_mantrig) },
    { &trig_mps2, sizeof(trig_mps2) },
    { &trig_aps2, sizeof(trig_aps2) },
    { &trig_scan, sizeof(trig_scan) },
    { &trig_prescan, sizeof(trig_prescan) },
    { &read_truncate, sizeof(read_truncate) },
    { &tmin_flair, sizeof(tmin_flair) },
    { &trigger_time, sizeof(trigger_time) },
    { &use_myscan, sizeof(use_myscan) },
    { &t_postreadout, sizeof(t_postreadout) },
    { &initnewgeo, sizeof(initnewgeo) },
    { &obl_debug, sizeof(obl_debug) },
    { &obl_method, sizeof(obl_method) },
    { &debug_order, sizeof(debug_order) },
    { &debug_tdel, sizeof(debug_tdel) },
    { &debug_scan, sizeof(debug_scan) },
    { &postsat, sizeof(postsat) },
    { &order_routine, sizeof(order_routine) },
    { &scan_offset, sizeof(scan_offset) },
    { &dither_control, sizeof(dither_control) },
    { &dither_value, sizeof(dither_value) },
    { &slquant_per_trig, sizeof(slquant_per_trig) },
    { &non_tetime, sizeof(non_tetime) },
    { &slice_size, sizeof(slice_size) },
    { &max_bamslice, sizeof(max_bamslice) },
    { &rf2PulseType, sizeof(rf2PulseType) },
    { &bw_rf1, sizeof(bw_rf1) },
    { &bw_rf2, sizeof(bw_rf2) },
    { &a_gx1, sizeof(a_gx1) },
    { &ia_gx1, sizeof(ia_gx1) },
    { &pw_gx1a, sizeof(pw_gx1a) },
    { &pw_gx1d, sizeof(pw_gx1d) },
    { &pw_gx1, sizeof(pw_gx1) },
    { &single_ramp_gx1d, sizeof(single_ramp_gx1d) },
    { &area_gy1, sizeof(area_gy1) },
    { &area_gyb, sizeof(area_gyb) },
    { &a_omega, sizeof(a_omega) },
    { &ia_omega, sizeof(ia_omega) },
    { &bline_time, sizeof(bline_time) },
    { &scan_time, sizeof(scan_time) },
    { &t1flair_disdaq_time, sizeof(t1flair_disdaq_time) },
    { &pw_gx1_tot, sizeof(pw_gx1_tot) },
    { &pw_gy1_tot, sizeof(pw_gy1_tot) },
    { &pw_gymn1_tot, sizeof(pw_gymn1_tot) },
    { &pw_gymn2_tot, sizeof(pw_gymn2_tot) },
    { &gyb_tot_0thmoment, sizeof(gyb_tot_0thmoment) },
    { &gyb_tot_1stmoment, sizeof(gyb_tot_1stmoment) },
    { &pw_gz1_tot, sizeof(pw_gz1_tot) },
    { &pw_gzrf2l1_tot, sizeof(pw_gzrf2l1_tot) },
    { &pw_gzrf2r1_tot, sizeof(pw_gzrf2r1_tot) },
    { &pw_gzrf2l1_tot_bval, sizeof(pw_gzrf2l1_tot_bval) },
    { &pw_gzrf2l2_tot_bval, sizeof(pw_gzrf2l2_tot_bval) },
    { &pw_gzrf2r1_tot_bval, sizeof(pw_gzrf2r1_tot_bval) },
    { &pw_gzrf2r2_tot_bval, sizeof(pw_gzrf2r2_tot_bval) },
    { &dab_offset, sizeof(dab_offset) },
    { &xtr_offset, sizeof(xtr_offset) },
    { &rcvr_ub_off, sizeof(rcvr_ub_off) },
    { &temprhfrsize, sizeof(temprhfrsize) },
    { &pw_wgxdl, sizeof(pw_wgxdl) },
    { &pw_wgxdr, sizeof(pw_wgxdr) },
    { &pw_wgydl, sizeof(pw_wgydl) },
    { &pw_wgydr, sizeof(pw_wgydr) },
    { &pw_wgzdl, sizeof(pw_wgzdl) },
    { &pw_wgzdr, sizeof(pw_wgzdr) },
    { &pw_wgxdl1, sizeof(pw_wgxdl1) },
    { &pw_wgxdr1, sizeof(pw_wgxdr1) },
    { &pw_wgydl1, sizeof(pw_wgydl1) },
    { &pw_wgydr1, sizeof(pw_wgydr1) },
    { &pw_wgzdl1, sizeof(pw_wgzdl1) },
    { &pw_wgzdr1, sizeof(pw_wgzdr1) },
    { &pw_wgxdl2, sizeof(pw_wgxdl2) },
    { &pw_wgxdr2, sizeof(pw_wgxdr2) },
    { &pw_wgydl2, sizeof(pw_wgydl2) },
    { &pw_wgydr2, sizeof(pw_wgydr2) },
    { &pw_wgzdl2, sizeof(pw_wgzdl2) },
    { &pw_wgzdr2, sizeof(pw_wgzdr2) },
    { &zeromoment, sizeof(zeromoment) },
    { &firstmoment, sizeof(firstmoment) },
    { &zeromomentsum, sizeof(zeromomentsum) },
    { &firstmomentsum, sizeof(firstmomentsum) },
    { &pulsepos, sizeof(pulsepos) },
    { &invertphase, sizeof(invertphase) },
    { &xtarg, sizeof(xtarg) },
    { &ytarg, sizeof(ytarg) },
    { &ztarg, sizeof(ztarg) },
    { &ditheron, sizeof(ditheron) },
    { &dx, sizeof(dx) },
    { &dy, sizeof(dy) },
    { &dz, sizeof(dz) },
    { &b0calmode, sizeof(b0calmode) },
    { &slice_reset, sizeof(slice_reset) },
    { &slice_loc, sizeof(slice_loc) },
    { &delayon, sizeof(delayon) },
    { &gxdelay, sizeof(gxdelay) },
    { &gydelay, sizeof(gydelay) },
    { &gldelayx, sizeof(gldelayx) },
    { &gldelayy, sizeof(gldelayy) },
    { &gldelayz, sizeof(gldelayz) },
    { &pckeeppct, sizeof(pckeeppct) },
    { &pkt_delay, sizeof(pkt_delay) },
    { &mph_flag, sizeof(mph_flag) },
    { &acqmode, sizeof(acqmode) },
    { &max_phases, sizeof(max_phases) },
    { &opslquant_old, sizeof(opslquant_old) },
    { &piphases, sizeof(piphases) },
    { &reqesp, sizeof(reqesp) },
    { &autogap, sizeof(autogap) },
    { &minesp, sizeof(minesp) },
    { &fft_xsize, sizeof(fft_xsize) },
    { &fft_ysize, sizeof(fft_ysize) },
    { &image_size, sizeof(image_size) },
    { &xtr_rba_time, sizeof(xtr_rba_time) },
    { &frtime, sizeof(frtime) },
    { &readpolar, sizeof(readpolar) },
    { &blippolar, sizeof(blippolar) },
    { &ref_mode, sizeof(ref_mode) },
    { &refnframes, sizeof(refnframes) },
    { &ref_with_xoffset, sizeof(ref_with_xoffset) },
    { &noRefPrePhase, sizeof(noRefPrePhase) },
    { &setDataAcqDelays, sizeof(setDataAcqDelays) },
    { &refSliceNum, sizeof(refSliceNum) },
    { &core_shots, sizeof(core_shots) },
    { &disdaq_shots, sizeof(disdaq_shots) },
    { &pass_shots, sizeof(pass_shots) },
    { &passr_shots, sizeof(passr_shots) },
    { &pass_time, sizeof(pass_time) },
    { &scan_deadtime, sizeof(scan_deadtime) },
    { &pw_gxwl1, sizeof(pw_gxwl1) },
    { &pw_gxwl2, sizeof(pw_gxwl2) },
    { &pw_gxwr1, sizeof(pw_gxwr1) },
    { &pw_gxwr2, sizeof(pw_gxwr2) },
    { &pw_gxw_total, sizeof(pw_gxw_total) },
    { &pass_delay, sizeof(pass_delay) },
    { &nshots_locks, sizeof(nshots_locks) },
    { &min_nshots, sizeof(min_nshots) },
    { &max_nshots, sizeof(max_nshots) },
    { &da_gyboc, sizeof(da_gyboc) },
    { &oc_fact, sizeof(oc_fact) },
    { &oblcorr_on, sizeof(oblcorr_on) },
    { &oblcorr_perslice, sizeof(oblcorr_perslice) },
    { &debug_oblcorr, sizeof(debug_oblcorr) },
    { &bc_delx, sizeof(bc_delx) },
    { &bc_dely, sizeof(bc_dely) },
    { &bc_delz, sizeof(bc_delz) },
    { &cvxfull, sizeof(cvxfull) },
    { &cvyfull, sizeof(cvyfull) },
    { &cvzfull, sizeof(cvzfull) },
    { &bw_flattop, sizeof(bw_flattop) },
    { &area_usedramp, sizeof(area_usedramp) },
    { &pw_usedramp, sizeof(pw_usedramp) },
    { &area_usedtotal, sizeof(area_usedtotal) },
    { &EZflag, sizeof(EZflag) },
    { &omega_scale, sizeof(omega_scale) },
    { &rba_act_start, sizeof(rba_act_start) },
    { &aps2_rspslq, sizeof(aps2_rspslq) },
    { &aps2_rspslqb, sizeof(aps2_rspslqb) },
    { &ghost_check, sizeof(ghost_check) },
    { &gck_offset_fov, sizeof(gck_offset_fov) },
    { &irprep_flag, sizeof(irprep_flag) },
    { &irprep_support, sizeof(irprep_support) },
    { &enhanced_fat_suppression, sizeof(enhanced_fat_suppression) },
    { &global_shim_method, sizeof(global_shim_method) },
    { &d_cf, sizeof(d_cf) },
    { &rt_opphases, sizeof(rt_opphases) },
    { &debugileave, sizeof(debugileave) },
    { &rup_factor, sizeof(rup_factor) },
    { &min_phasefov, sizeof(min_phasefov) },
    { &core_time, sizeof(core_time) },
    { &override_fatsat_high_weight, sizeof(override_fatsat_high_weight) },
    { &scale_all, sizeof(scale_all) },
    { &default_bvalue, sizeof(default_bvalue) },
    { &default_difnex, sizeof(default_difnex) },
    { &use_phygrad, sizeof(use_phygrad) },
    { &total_difnex, sizeof(total_difnex) },
    { &max_difnex, sizeof(max_difnex) },
    { &max_nex, sizeof(max_nex) },
    { &max_bval, sizeof(max_bval) },
    { &gradopt_diffall, sizeof(gradopt_diffall) },
    { &ADC_warning_flag, sizeof(ADC_warning_flag) },
    { &edwi_extra_time, sizeof(edwi_extra_time) },
    { &bigpat_warning_flag, sizeof(bigpat_warning_flag) },
    { &avg_bval, sizeof(avg_bval) },
    { &max_difnex_limit, sizeof(max_difnex_limit) },
    { &syndwi_flag, sizeof(syndwi_flag) },
    { &prescribed_max_bval, sizeof(prescribed_max_bval) },
    { &prescribed_min_bval, sizeof(prescribed_min_bval) },
    { &prescribed_bval_range, sizeof(prescribed_bval_range) },
    { &fullk_nframes, sizeof(fullk_nframes) },
    { &xfd_power_limit, sizeof(xfd_power_limit) },
    { &xfd_temp_limit, sizeof(xfd_temp_limit) },
    { &TGenh, sizeof(TGenh) },
    { &vrgf_bwctrl, sizeof(vrgf_bwctrl) },
    { &ref_in_scan_flag, sizeof(ref_in_scan_flag) },
    { &refless_option, sizeof(refless_option) },
    { &ref_dda, sizeof(ref_dda) },
    { &scan_dda, sizeof(scan_dda) },
    { &pc_enh, sizeof(pc_enh) },
    { &ref_volrecvcoil_flag, sizeof(ref_volrecvcoil_flag) },
    { &hopc_flag, sizeof(hopc_flag) },
    { &diff_order_flag, sizeof(diff_order_flag) },
    { &diff_order_debug, sizeof(diff_order_debug) },
    { &diff_order_verify, sizeof(diff_order_verify) },
    { &diff_order_nslices, sizeof(diff_order_nslices) },
    { &diff_order_size, sizeof(diff_order_size) },
    { &diff_pass_counter, sizeof(diff_pass_counter) },
    { &diff_pass_counter_save, sizeof(diff_pass_counter_save) },
    { &skip_ir, sizeof(skip_ir) },
    { &num_iters, sizeof(num_iters) },
    { &dti_dse_ecoon_scaling_factor, sizeof(dti_dse_ecoon_scaling_factor) },
    { &dti_sse_ecoon_scaling_factor, sizeof(dti_sse_ecoon_scaling_factor) },
    { &dti_sse_ecooff_scaling_factor, sizeof(dti_sse_ecooff_scaling_factor) },
    { &dwi_single_all_dse_ecoon_scaling_factor, sizeof(dwi_single_all_dse_ecoon_scaling_factor) },
    { &dwi_single_all_sse_ecoon_scaling_factor, sizeof(dwi_single_all_sse_ecoon_scaling_factor) },
    { &dwi_3in1_dse_ecoon_scaling_factor, sizeof(dwi_3in1_dse_ecoon_scaling_factor) },
    { &k15_system_flag, sizeof(k15_system_flag) },
    { &hoecc_flag, sizeof(hoecc_flag) },
    { &hoecc_psd_flag, sizeof(hoecc_psd_flag) },
    { &hoecc_recon_flag, sizeof(hoecc_recon_flag) },
    { &hoecc_debug, sizeof(hoecc_debug) },
    { &hoecc_support, sizeof(hoecc_support) },
    { &hoecc_enable, sizeof(hoecc_enable) },
    { &necho_before_te, sizeof(necho_before_te) },
    { &psd_per_echo_corr, sizeof(psd_per_echo_corr) },
    { &read_corr_option, sizeof(read_corr_option) },
    { &psd_debug_echo_index, sizeof(psd_debug_echo_index) },
    { &psd_echo_for_debug, sizeof(psd_echo_for_debug) },
    { &psd_ileave_for_debug, sizeof(psd_ileave_for_debug) },
    { &psd_slice_for_debug, sizeof(psd_slice_for_debug) },
    { &hoec_cal_data_sign, sizeof(hoec_cal_data_sign) },
    { &hoecc_manual_mode_warning_flag, sizeof(hoecc_manual_mode_warning_flag) },
    { &hoecc_manual_mode_psd_override_flag, sizeof(hoecc_manual_mode_psd_override_flag) },
    { &muse_flag, sizeof(muse_flag) },
    { &muse_support, sizeof(muse_support) },
    { &epi_srderate_factor, sizeof(epi_srderate_factor) },
    { &epi_loggrd_glim_flag, sizeof(epi_loggrd_glim_flag) },
    { &epi_loggrd_glim, sizeof(epi_loggrd_glim) },
    { &adaptive_mpg_glim_flag, sizeof(adaptive_mpg_glim_flag) },
    { &adaptive_mpg_glim, sizeof(adaptive_mpg_glim) },
    { &avmaxpasses, sizeof(avmaxpasses) },
    { &nav_image_interval, sizeof(nav_image_interval) },
    { &focus_B0_robust_mode, sizeof(focus_B0_robust_mode) },
    { &focus_unwanted_delta_f, sizeof(focus_unwanted_delta_f) },
    { &eco_mpg_support, sizeof(eco_mpg_support) },
    { &eco_mpg_flag, sizeof(eco_mpg_flag) },
    { &mpg_opt_flag, sizeof(mpg_opt_flag) },
    { &dse_enh_flag, sizeof(dse_enh_flag) },
    { &dse_opt_flag, sizeof(dse_opt_flag) },
    { &bval_arbitrary_flag, sizeof(bval_arbitrary_flag) },
    { &pw_d1, sizeof(pw_d1) },
    { &pw_d2, sizeof(pw_d2) },
    { &b_tol, sizeof(b_tol) },
    { &mpg_opt_margin, sizeof(mpg_opt_margin) },
    { &mpg_opt_derate, sizeof(mpg_opt_derate) },
    { &mpg_opt_glimit_orig, sizeof(mpg_opt_glimit_orig) },
    { &fskillercycling, sizeof(fskillercycling) },
    { &nav_type, sizeof(nav_type) },
    { &nav_sr, sizeof(nav_sr) },
    { &nav_window, sizeof(nav_window) },
    { &navigator_flag, sizeof(navigator_flag) },
    { &nav_ss, sizeof(nav_ss) },
    { &nav_dda, sizeof(nav_dda) },
    { &nav_pause_after_prescan, sizeof(nav_pause_after_prescan) },
    { &enhanced_nav_flag, sizeof(enhanced_nav_flag) },
    { &skip_navigator_prescan, sizeof(skip_navigator_prescan) },
    { &nav_test, sizeof(nav_test) },
    { &nav_alg, sizeof(nav_alg) },
    { &nav_dir, sizeof(nav_dir) },
    { &nav_channel, sizeof(nav_channel) },
    { &nav_coilsel_index, sizeof(nav_coilsel_index) },
    { &nav_normalization, sizeof(nav_normalization) },
    { &mon_navgs, sizeof(mon_navgs) },
    { &hist_wait_time, sizeof(hist_wait_time) },
    { &nav_dump_time, sizeof(nav_dump_time) },
    { &curr_eff, sizeof(curr_eff) },
    { &monrot_phi, sizeof(monrot_phi) },
    { &navtrig_flag, sizeof(navtrig_flag) },
    { &navgate_flag, sizeof(navgate_flag) },
    { &calc_rate, sizeof(calc_rate) },
    { &num_slice_rr, sizeof(num_slice_rr) },
    { &nav_prescan_tr, sizeof(nav_prescan_tr) },
    { &nav_coilsel_tr, sizeof(nav_coilsel_tr) },
    { &mon_tr_nav, sizeof(mon_tr_nav) },
    { &mon_tr_wait, sizeof(mon_tr_wait) },
    { &navtrig_target_tr, sizeof(navtrig_target_tr) },
    { &navgate_target_tr, sizeof(navgate_target_tr) },
    { &wait_pts, sizeof(wait_pts) },
    { &navtrig_waittime, sizeof(navtrig_waittime) },
    { &navtrig_factor, sizeof(navtrig_factor) },
    { &nav_scantime_refresh, sizeof(nav_scantime_refresh) },
    { &nav_scantime_refresh_pts, sizeof(nav_scantime_refresh_pts) },
    { &nav_save_raw_data, sizeof(nav_save_raw_data) },
    { &nav_debug_flag, sizeof(nav_debug_flag) },
    { &nav_timing_flag, sizeof(nav_timing_flag) },
    { &navigatorCYL_flag, sizeof(navigatorCYL_flag) },
    { &tlead_cylnav, sizeof(tlead_cylnav) },
    { &navsat_flag, sizeof(navsat_flag) },
    { &flip_rfcylr_navsat, sizeof(flip_rfcylr_navsat) },
    { &flip_rfmon_navsat, sizeof(flip_rfmon_navsat) },
    { &navscale, sizeof(navscale) },
    { &flip_rfcylr, sizeof(flip_rfcylr) },
    { &flip_rfcylrtipup, sizeof(flip_rfcylrtipup) },
    { &cylr_xoff, sizeof(cylr_xoff) },
    { &cylr_yoff, sizeof(cylr_yoff) },
    { &cylr_manoff, sizeof(cylr_manoff) },
    { &cylr_skew, sizeof(cylr_skew) },
    { &cylr_dtheta, sizeof(cylr_dtheta) },
    { &act_te_cylr, sizeof(act_te_cylr) },
    { &t_exa_cylr, sizeof(t_exa_cylr) },
    { &t_exb_cylr, sizeof(t_exb_cylr) },
    { &t_rdb_cylr, sizeof(t_rdb_cylr) },
    { &rtp_mode_for_nav_dynaplan, sizeof(rtp_mode_for_nav_dynaplan) },
    { &a_gxwksp, sizeof(a_gxwksp) },
    { &ia_gxwksp, sizeof(ia_gxwksp) },
    { &pw_gxwkspa, sizeof(pw_gxwkspa) },
    { &pw_gxwkspd, sizeof(pw_gxwkspd) },
    { &pw_gxwksp, sizeof(pw_gxwksp) },
    { &wg_gxwksp, sizeof(wg_gxwksp) },
    { &a_gywksp, sizeof(a_gywksp) },
    { &ia_gywksp, sizeof(ia_gywksp) },
    { &pw_gywkspa, sizeof(pw_gywkspa) },
    { &pw_gywkspd, sizeof(pw_gywkspd) },
    { &pw_gywksp, sizeof(pw_gywksp) },
    { &wg_gywksp, sizeof(wg_gywksp) },
    { &a_gzwksp, sizeof(a_gzwksp) },
    { &ia_gzwksp, sizeof(ia_gzwksp) },
    { &pw_gzwkspa, sizeof(pw_gzwkspa) },
    { &pw_gzwkspd, sizeof(pw_gzwkspd) },
    { &pw_gzwksp, sizeof(pw_gzwksp) },
    { &wg_gzwksp, sizeof(wg_gzwksp) },
    { &a_gyex1, sizeof(a_gyex1) },
    { &ia_gyex1, sizeof(ia_gyex1) },
    { &pw_gyex1a, sizeof(pw_gyex1a) },
    { &pw_gyex1d, sizeof(pw_gyex1d) },
    { &pw_gyex1, sizeof(pw_gyex1) },
    { &wg_gyex1, sizeof(wg_gyex1) },
    { &res_omthrf2, sizeof(res_omthrf2) },
    { &res_omthrf2left, sizeof(res_omthrf2left) },
    { &res_omthrf2right, sizeof(res_omthrf2right) },
    { &res_rf2_gradient_waveform, sizeof(res_rf2_gradient_waveform) },
    { &wg_rf2_gradient_waveform, sizeof(wg_rf2_gradient_waveform) },
    { &ia_dynr1, sizeof(ia_dynr1) },
    { &pw_x_td0, sizeof(pw_x_td0) },
    { &wg_x_td0, sizeof(wg_x_td0) },
    { &pw_y_td0, sizeof(pw_y_td0) },
    { &wg_y_td0, sizeof(wg_y_td0) },
    { &pw_z_td0, sizeof(pw_z_td0) },
    { &wg_z_td0, sizeof(wg_z_td0) },
    { &pw_rho_td0, sizeof(pw_rho_td0) },
    { &wg_rho_td0, sizeof(wg_rho_td0) },
    { &pw_theta_td0, sizeof(pw_theta_td0) },
    { &wg_theta_td0, sizeof(wg_theta_td0) },
    { &pw_omega_td0, sizeof(pw_omega_td0) },
    { &wg_omega_td0, sizeof(wg_omega_td0) },
    { &pw_ssp_td0, sizeof(pw_ssp_td0) },
    { &wg_ssp_td0, sizeof(wg_ssp_td0) },
    { &a_gzrf1, sizeof(a_gzrf1) },
    { &ia_gzrf1, sizeof(ia_gzrf1) },
    { &pw_gzrf1a, sizeof(pw_gzrf1a) },
    { &pw_gzrf1d, sizeof(pw_gzrf1d) },
    { &pw_gzrf1, sizeof(pw_gzrf1) },
    { &res_gzrf1, sizeof(res_gzrf1) },
    { &a_rf1, sizeof(a_rf1) },
    { &ia_rf1, sizeof(ia_rf1) },
    { &pw_rf1, sizeof(pw_rf1) },
    { &res_rf1, sizeof(res_rf1) },
    { &cyc_rf1, sizeof(cyc_rf1) },
    { &off_rf1, sizeof(off_rf1) },
    { &alpha_rf1, sizeof(alpha_rf1) },
    { &thk_rf1, sizeof(thk_rf1) },
    { &gscale_rf1, sizeof(gscale_rf1) },
    { &flip_rf1, sizeof(flip_rf1) },
    { &a_thetarf1, sizeof(a_thetarf1) },
    { &ia_thetarf1, sizeof(ia_thetarf1) },
    { &pw_thetarf1, sizeof(pw_thetarf1) },
    { &res_thetarf1, sizeof(res_thetarf1) },
    { &off_thetarf1, sizeof(off_thetarf1) },
    { &wg_rf1, sizeof(wg_rf1) },
    { &a_gzrf2, sizeof(a_gzrf2) },
    { &ia_gzrf2, sizeof(ia_gzrf2) },
    { &pw_gzrf2a, sizeof(pw_gzrf2a) },
    { &pw_gzrf2d, sizeof(pw_gzrf2d) },
    { &pw_gzrf2, sizeof(pw_gzrf2) },
    { &a_rf2, sizeof(a_rf2) },
    { &ia_rf2, sizeof(ia_rf2) },
    { &pw_rf2, sizeof(pw_rf2) },
    { &res_rf2, sizeof(res_rf2) },
    { &cyc_rf2, sizeof(cyc_rf2) },
    { &off_rf2, sizeof(off_rf2) },
    { &alpha_rf2, sizeof(alpha_rf2) },
    { &thk_rf2, sizeof(thk_rf2) },
    { &gscale_rf2, sizeof(gscale_rf2) },
    { &flip_rf2, sizeof(flip_rf2) },
    { &wg_rf2, sizeof(wg_rf2) },
    { &a_gzrf2left, sizeof(a_gzrf2left) },
    { &ia_gzrf2left, sizeof(ia_gzrf2left) },
    { &pw_gzrf2lefta, sizeof(pw_gzrf2lefta) },
    { &pw_gzrf2leftd, sizeof(pw_gzrf2leftd) },
    { &pw_gzrf2left, sizeof(pw_gzrf2left) },
    { &a_rf2left, sizeof(a_rf2left) },
    { &ia_rf2left, sizeof(ia_rf2left) },
    { &pw_rf2left, sizeof(pw_rf2left) },
    { &res_rf2left, sizeof(res_rf2left) },
    { &cyc_rf2left, sizeof(cyc_rf2left) },
    { &off_rf2left, sizeof(off_rf2left) },
    { &alpha_rf2left, sizeof(alpha_rf2left) },
    { &thk_rf2left, sizeof(thk_rf2left) },
    { &gscale_rf2left, sizeof(gscale_rf2left) },
    { &flip_rf2left, sizeof(flip_rf2left) },
    { &wg_rf2left, sizeof(wg_rf2left) },
    { &a_gzrf2right, sizeof(a_gzrf2right) },
    { &ia_gzrf2right, sizeof(ia_gzrf2right) },
    { &pw_gzrf2righta, sizeof(pw_gzrf2righta) },
    { &pw_gzrf2rightd, sizeof(pw_gzrf2rightd) },
    { &pw_gzrf2right, sizeof(pw_gzrf2right) },
    { &a_rf2right, sizeof(a_rf2right) },
    { &ia_rf2right, sizeof(ia_rf2right) },
    { &pw_rf2right, sizeof(pw_rf2right) },
    { &res_rf2right, sizeof(res_rf2right) },
    { &cyc_rf2right, sizeof(cyc_rf2right) },
    { &off_rf2right, sizeof(off_rf2right) },
    { &alpha_rf2right, sizeof(alpha_rf2right) },
    { &thk_rf2right, sizeof(thk_rf2right) },
    { &gscale_rf2right, sizeof(gscale_rf2right) },
    { &flip_rf2right, sizeof(flip_rf2right) },
    { &wg_rf2right, sizeof(wg_rf2right) },
    { &res_rf2se1b4, sizeof(res_rf2se1b4) },
    { &wg_rf2se1b4, sizeof(wg_rf2se1b4) },
    { &a_gyrf2iv, sizeof(a_gyrf2iv) },
    { &ia_gyrf2iv, sizeof(ia_gyrf2iv) },
    { &pw_gyrf2iva, sizeof(pw_gyrf2iva) },
    { &pw_gyrf2ivd, sizeof(pw_gyrf2ivd) },
    { &pw_gyrf2iv, sizeof(pw_gyrf2iv) },
    { &wg_gyrf2iv, sizeof(wg_gyrf2iv) },
    { &a_gzrf2l1, sizeof(a_gzrf2l1) },
    { &ia_gzrf2l1, sizeof(ia_gzrf2l1) },
    { &pw_gzrf2l1a, sizeof(pw_gzrf2l1a) },
    { &pw_gzrf2l1d, sizeof(pw_gzrf2l1d) },
    { &pw_gzrf2l1, sizeof(pw_gzrf2l1) },
    { &wg_gzrf2l1, sizeof(wg_gzrf2l1) },
    { &a_gzrf2r1, sizeof(a_gzrf2r1) },
    { &ia_gzrf2r1, sizeof(ia_gzrf2r1) },
    { &pw_gzrf2r1a, sizeof(pw_gzrf2r1a) },
    { &pw_gzrf2r1d, sizeof(pw_gzrf2r1d) },
    { &pw_gzrf2r1, sizeof(pw_gzrf2r1) },
    { &wg_gzrf2r1, sizeof(wg_gzrf2r1) },
    { &a_xgradCrusherL, sizeof(a_xgradCrusherL) },
    { &ia_xgradCrusherL, sizeof(ia_xgradCrusherL) },
    { &pw_xgradCrusherLa, sizeof(pw_xgradCrusherLa) },
    { &pw_xgradCrusherLd, sizeof(pw_xgradCrusherLd) },
    { &pw_xgradCrusherL, sizeof(pw_xgradCrusherL) },
    { &wg_xgradCrusherL, sizeof(wg_xgradCrusherL) },
    { &a_xgradCrusherR, sizeof(a_xgradCrusherR) },
    { &ia_xgradCrusherR, sizeof(ia_xgradCrusherR) },
    { &pw_xgradCrusherRa, sizeof(pw_xgradCrusherRa) },
    { &pw_xgradCrusherRd, sizeof(pw_xgradCrusherRd) },
    { &pw_xgradCrusherR, sizeof(pw_xgradCrusherR) },
    { &wg_xgradCrusherR, sizeof(wg_xgradCrusherR) },
    { &a_ygradCrusherL, sizeof(a_ygradCrusherL) },
    { &ia_ygradCrusherL, sizeof(ia_ygradCrusherL) },
    { &pw_ygradCrusherLa, sizeof(pw_ygradCrusherLa) },
    { &pw_ygradCrusherLd, sizeof(pw_ygradCrusherLd) },
    { &pw_ygradCrusherL, sizeof(pw_ygradCrusherL) },
    { &wg_ygradCrusherL, sizeof(wg_ygradCrusherL) },
    { &a_ygradCrusherR, sizeof(a_ygradCrusherR) },
    { &ia_ygradCrusherR, sizeof(ia_ygradCrusherR) },
    { &pw_ygradCrusherRa, sizeof(pw_ygradCrusherRa) },
    { &pw_ygradCrusherRd, sizeof(pw_ygradCrusherRd) },
    { &pw_ygradCrusherR, sizeof(pw_ygradCrusherR) },
    { &wg_ygradCrusherR, sizeof(wg_ygradCrusherR) },
    { &a_gzrf2leftl1, sizeof(a_gzrf2leftl1) },
    { &ia_gzrf2leftl1, sizeof(ia_gzrf2leftl1) },
    { &pw_gzrf2leftl1a, sizeof(pw_gzrf2leftl1a) },
    { &pw_gzrf2leftl1d, sizeof(pw_gzrf2leftl1d) },
    { &pw_gzrf2leftl1, sizeof(pw_gzrf2leftl1) },
    { &wg_gzrf2leftl1, sizeof(wg_gzrf2leftl1) },
    { &a_gzrf2leftr1, sizeof(a_gzrf2leftr1) },
    { &ia_gzrf2leftr1, sizeof(ia_gzrf2leftr1) },
    { &pw_gzrf2leftr1a, sizeof(pw_gzrf2leftr1a) },
    { &pw_gzrf2leftr1d, sizeof(pw_gzrf2leftr1d) },
    { &pw_gzrf2leftr1, sizeof(pw_gzrf2leftr1) },
    { &wg_gzrf2leftr1, sizeof(wg_gzrf2leftr1) },
    { &a_gzrf2rightl1, sizeof(a_gzrf2rightl1) },
    { &ia_gzrf2rightl1, sizeof(ia_gzrf2rightl1) },
    { &pw_gzrf2rightl1a, sizeof(pw_gzrf2rightl1a) },
    { &pw_gzrf2rightl1d, sizeof(pw_gzrf2rightl1d) },
    { &pw_gzrf2rightl1, sizeof(pw_gzrf2rightl1) },
    { &wg_gzrf2rightl1, sizeof(wg_gzrf2rightl1) },
    { &a_gzrf2rightr1, sizeof(a_gzrf2rightr1) },
    { &ia_gzrf2rightr1, sizeof(ia_gzrf2rightr1) },
    { &pw_gzrf2rightr1a, sizeof(pw_gzrf2rightr1a) },
    { &pw_gzrf2rightr1d, sizeof(pw_gzrf2rightr1d) },
    { &pw_gzrf2rightr1, sizeof(pw_gzrf2rightr1) },
    { &wg_gzrf2rightr1, sizeof(wg_gzrf2rightr1) },
    { &a_xgradRightCrusherL, sizeof(a_xgradRightCrusherL) },
    { &ia_xgradRightCrusherL, sizeof(ia_xgradRightCrusherL) },
    { &pw_xgradRightCrusherLa, sizeof(pw_xgradRightCrusherLa) },
    { &pw_xgradRightCrusherLd, sizeof(pw_xgradRightCrusherLd) },
    { &pw_xgradRightCrusherL, sizeof(pw_xgradRightCrusherL) },
    { &wg_xgradRightCrusherL, sizeof(wg_xgradRightCrusherL) },
    { &a_xgradRightCrusherR, sizeof(a_xgradRightCrusherR) },
    { &ia_xgradRightCrusherR, sizeof(ia_xgradRightCrusherR) },
    { &pw_xgradRightCrusherRa, sizeof(pw_xgradRightCrusherRa) },
    { &pw_xgradRightCrusherRd, sizeof(pw_xgradRightCrusherRd) },
    { &pw_xgradRightCrusherR, sizeof(pw_xgradRightCrusherR) },
    { &wg_xgradRightCrusherR, sizeof(wg_xgradRightCrusherR) },
    { &a_ygradRightCrusherL, sizeof(a_ygradRightCrusherL) },
    { &ia_ygradRightCrusherL, sizeof(ia_ygradRightCrusherL) },
    { &pw_ygradRightCrusherLa, sizeof(pw_ygradRightCrusherLa) },
    { &pw_ygradRightCrusherLd, sizeof(pw_ygradRightCrusherLd) },
    { &pw_ygradRightCrusherL, sizeof(pw_ygradRightCrusherL) },
    { &wg_ygradRightCrusherL, sizeof(wg_ygradRightCrusherL) },
    { &a_ygradRightCrusherR, sizeof(a_ygradRightCrusherR) },
    { &ia_ygradRightCrusherR, sizeof(ia_ygradRightCrusherR) },
    { &pw_ygradRightCrusherRa, sizeof(pw_ygradRightCrusherRa) },
    { &pw_ygradRightCrusherRd, sizeof(pw_ygradRightCrusherRd) },
    { &pw_ygradRightCrusherR, sizeof(pw_ygradRightCrusherR) },
    { &wg_ygradRightCrusherR, sizeof(wg_ygradRightCrusherR) },
    { &a_xgradLeftCrusherL, sizeof(a_xgradLeftCrusherL) },
    { &ia_xgradLeftCrusherL, sizeof(ia_xgradLeftCrusherL) },
    { &pw_xgradLeftCrusherLa, sizeof(pw_xgradLeftCrusherLa) },
    { &pw_xgradLeftCrusherLd, sizeof(pw_xgradLeftCrusherLd) },
    { &pw_xgradLeftCrusherL, sizeof(pw_xgradLeftCrusherL) },
    { &wg_xgradLeftCrusherL, sizeof(wg_xgradLeftCrusherL) },
    { &a_xgradLeftCrusherR, sizeof(a_xgradLeftCrusherR) },
    { &ia_xgradLeftCrusherR, sizeof(ia_xgradLeftCrusherR) },
    { &pw_xgradLeftCrusherRa, sizeof(pw_xgradLeftCrusherRa) },
    { &pw_xgradLeftCrusherRd, sizeof(pw_xgradLeftCrusherRd) },
    { &pw_xgradLeftCrusherR, sizeof(pw_xgradLeftCrusherR) },
    { &wg_xgradLeftCrusherR, sizeof(wg_xgradLeftCrusherR) },
    { &a_ygradLeftCrusherL, sizeof(a_ygradLeftCrusherL) },
    { &ia_ygradLeftCrusherL, sizeof(ia_ygradLeftCrusherL) },
    { &pw_ygradLeftCrusherLa, sizeof(pw_ygradLeftCrusherLa) },
    { &pw_ygradLeftCrusherLd, sizeof(pw_ygradLeftCrusherLd) },
    { &pw_ygradLeftCrusherL, sizeof(pw_ygradLeftCrusherL) },
    { &wg_ygradLeftCrusherL, sizeof(wg_ygradLeftCrusherL) },
    { &a_ygradLeftCrusherR, sizeof(a_ygradLeftCrusherR) },
    { &ia_ygradLeftCrusherR, sizeof(ia_ygradLeftCrusherR) },
    { &pw_ygradLeftCrusherRa, sizeof(pw_ygradLeftCrusherRa) },
    { &pw_ygradLeftCrusherRd, sizeof(pw_ygradLeftCrusherRd) },
    { &pw_ygradLeftCrusherR, sizeof(pw_ygradLeftCrusherR) },
    { &wg_ygradLeftCrusherR, sizeof(wg_ygradLeftCrusherR) },
    { &a_gxcl, sizeof(a_gxcl) },
    { &a_gxw, sizeof(a_gxw) },
    { &a_gxcr, sizeof(a_gxcr) },
    { &a_gyb, sizeof(a_gyb) },
    { &a_gzb, sizeof(a_gzb) },
    { &ia_gxcl, sizeof(ia_gxcl) },
    { &ia_gxw, sizeof(ia_gxw) },
    { &ia_gxcr, sizeof(ia_gxcr) },
    { &ia_gyb, sizeof(ia_gyb) },
    { &ia_gzb, sizeof(ia_gzb) },
    { &pw_gxcla, sizeof(pw_gxcla) },
    { &pw_gxcl, sizeof(pw_gxcl) },
    { &pw_gxcld, sizeof(pw_gxcld) },
    { &pw_gxwl, sizeof(pw_gxwl) },
    { &pw_gxw, sizeof(pw_gxw) },
    { &pw_gxwr, sizeof(pw_gxwr) },
    { &pw_gxwad, sizeof(pw_gxwad) },
    { &pw_gxgap, sizeof(pw_gxgap) },
    { &pw_gxcra, sizeof(pw_gxcra) },
    { &pw_gxcr, sizeof(pw_gxcr) },
    { &pw_gxcrd, sizeof(pw_gxcrd) },
    { &pw_gyba, sizeof(pw_gyba) },
    { &pw_gyb, sizeof(pw_gyb) },
    { &pw_gybd, sizeof(pw_gybd) },
    { &pw_gzba, sizeof(pw_gzba) },
    { &pw_gzb, sizeof(pw_gzb) },
    { &pw_gzbd, sizeof(pw_gzbd) },
    { &pw_iref_gxwait, sizeof(pw_iref_gxwait) },
    { &ia_rec_unblank, sizeof(ia_rec_unblank) },
    { &ia_rec_unblank3, sizeof(ia_rec_unblank3) },
    { &filter_rtb0echo, sizeof(filter_rtb0echo) },
    { &ia_rec_unblank2, sizeof(ia_rec_unblank2) },
    { &a_gxiref1, sizeof(a_gxiref1) },
    { &ia_gxiref1, sizeof(ia_gxiref1) },
    { &pw_gxiref1a, sizeof(pw_gxiref1a) },
    { &pw_gxiref1d, sizeof(pw_gxiref1d) },
    { &pw_gxiref1, sizeof(pw_gxiref1) },
    { &wg_gxiref1, sizeof(wg_gxiref1) },
    { &a_gxirefr, sizeof(a_gxirefr) },
    { &ia_gxirefr, sizeof(ia_gxirefr) },
    { &pw_gxirefra, sizeof(pw_gxirefra) },
    { &pw_gxirefrd, sizeof(pw_gxirefrd) },
    { &pw_gxirefr, sizeof(pw_gxirefr) },
    { &wg_gxirefr, sizeof(wg_gxirefr) },
    { &a_gy1, sizeof(a_gy1) },
    { &a_gy1a, sizeof(a_gy1a) },
    { &a_gy1b, sizeof(a_gy1b) },
    { &ia_gy1, sizeof(ia_gy1) },
    { &ia_gy1wa, sizeof(ia_gy1wa) },
    { &ia_gy1wb, sizeof(ia_gy1wb) },
    { &pw_gy1a, sizeof(pw_gy1a) },
    { &pw_gy1d, sizeof(pw_gy1d) },
    { &pw_gy1, sizeof(pw_gy1) },
    { &wg_gy1, sizeof(wg_gy1) },
    { &a_gymn2, sizeof(a_gymn2) },
    { &ia_gymn2, sizeof(ia_gymn2) },
    { &pw_gymn2a, sizeof(pw_gymn2a) },
    { &pw_gymn2d, sizeof(pw_gymn2d) },
    { &pw_gymn2, sizeof(pw_gymn2) },
    { &wg_gymn2, sizeof(wg_gymn2) },
    { &a_gymn1, sizeof(a_gymn1) },
    { &ia_gymn1, sizeof(ia_gymn1) },
    { &pw_gymn1a, sizeof(pw_gymn1a) },
    { &pw_gymn1d, sizeof(pw_gymn1d) },
    { &pw_gymn1, sizeof(pw_gymn1) },
    { &wg_gymn1, sizeof(wg_gymn1) },
    { &a_gz1, sizeof(a_gz1) },
    { &ia_gz1, sizeof(ia_gz1) },
    { &pw_gz1a, sizeof(pw_gz1a) },
    { &pw_gz1d, sizeof(pw_gz1d) },
    { &pw_gz1, sizeof(pw_gz1) },
    { &wg_gz1, sizeof(wg_gz1) },
    { &a_gzmn, sizeof(a_gzmn) },
    { &ia_gzmn, sizeof(ia_gzmn) },
    { &pw_gzmna, sizeof(pw_gzmna) },
    { &pw_gzmnd, sizeof(pw_gzmnd) },
    { &pw_gzmn, sizeof(pw_gzmn) },
    { &wg_gzmn, sizeof(wg_gzmn) },
    { &res_rf2se1, sizeof(res_rf2se1) },
    { &wg_rf2se1, sizeof(wg_rf2se1) },
    { &a_gxdl1, sizeof(a_gxdl1) },
    { &ia_gxdl1, sizeof(ia_gxdl1) },
    { &pw_gxdl1a, sizeof(pw_gxdl1a) },
    { &pw_gxdl1d, sizeof(pw_gxdl1d) },
    { &pw_gxdl1, sizeof(pw_gxdl1) },
    { &wg_gxdl1, sizeof(wg_gxdl1) },
    { &a_gxdr1, sizeof(a_gxdr1) },
    { &ia_gxdr1, sizeof(ia_gxdr1) },
    { &pw_gxdr1a, sizeof(pw_gxdr1a) },
    { &pw_gxdr1d, sizeof(pw_gxdr1d) },
    { &pw_gxdr1, sizeof(pw_gxdr1) },
    { &wg_gxdr1, sizeof(wg_gxdr1) },
    { &a_gxdl2, sizeof(a_gxdl2) },
    { &ia_gxdl2, sizeof(ia_gxdl2) },
    { &pw_gxdl2a, sizeof(pw_gxdl2a) },
    { &pw_gxdl2d, sizeof(pw_gxdl2d) },
    { &pw_gxdl2, sizeof(pw_gxdl2) },
    { &wg_gxdl2, sizeof(wg_gxdl2) },
    { &a_gxdr2, sizeof(a_gxdr2) },
    { &ia_gxdr2, sizeof(ia_gxdr2) },
    { &pw_gxdr2a, sizeof(pw_gxdr2a) },
    { &pw_gxdr2d, sizeof(pw_gxdr2d) },
    { &pw_gxdr2, sizeof(pw_gxdr2) },
    { &wg_gxdr2, sizeof(wg_gxdr2) },
    { &a_gxk, sizeof(a_gxk) },
    { &ia_gxk, sizeof(ia_gxk) },
    { &pw_gxka, sizeof(pw_gxka) },
    { &pw_gxkd, sizeof(pw_gxkd) },
    { &pw_gxk, sizeof(pw_gxk) },
    { &wg_gxk, sizeof(wg_gxk) },
    { &a_gydl1, sizeof(a_gydl1) },
    { &ia_gydl1, sizeof(ia_gydl1) },
    { &pw_gydl1a, sizeof(pw_gydl1a) },
    { &pw_gydl1d, sizeof(pw_gydl1d) },
    { &pw_gydl1, sizeof(pw_gydl1) },
    { &wg_gydl1, sizeof(wg_gydl1) },
    { &a_gydr1, sizeof(a_gydr1) },
    { &ia_gydr1, sizeof(ia_gydr1) },
    { &pw_gydr1a, sizeof(pw_gydr1a) },
    { &pw_gydr1d, sizeof(pw_gydr1d) },
    { &pw_gydr1, sizeof(pw_gydr1) },
    { &wg_gydr1, sizeof(wg_gydr1) },
    { &a_gydl2, sizeof(a_gydl2) },
    { &ia_gydl2, sizeof(ia_gydl2) },
    { &pw_gydl2a, sizeof(pw_gydl2a) },
    { &pw_gydl2d, sizeof(pw_gydl2d) },
    { &pw_gydl2, sizeof(pw_gydl2) },
    { &wg_gydl2, sizeof(wg_gydl2) },
    { &a_gydr2, sizeof(a_gydr2) },
    { &ia_gydr2, sizeof(ia_gydr2) },
    { &pw_gydr2a, sizeof(pw_gydr2a) },
    { &pw_gydr2d, sizeof(pw_gydr2d) },
    { &pw_gydr2, sizeof(pw_gydr2) },
    { &wg_gydr2, sizeof(wg_gydr2) },
    { &a_gyk, sizeof(a_gyk) },
    { &ia_gyk, sizeof(ia_gyk) },
    { &pw_gyka, sizeof(pw_gyka) },
    { &pw_gykd, sizeof(pw_gykd) },
    { &pw_gyk, sizeof(pw_gyk) },
    { &wg_gyk, sizeof(wg_gyk) },
    { &a_gzdl1, sizeof(a_gzdl1) },
    { &ia_gzdl1, sizeof(ia_gzdl1) },
    { &pw_gzdl1a, sizeof(pw_gzdl1a) },
    { &pw_gzdl1d, sizeof(pw_gzdl1d) },
    { &pw_gzdl1, sizeof(pw_gzdl1) },
    { &wg_gzdl1, sizeof(wg_gzdl1) },
    { &a_gzdr1, sizeof(a_gzdr1) },
    { &ia_gzdr1, sizeof(ia_gzdr1) },
    { &pw_gzdr1a, sizeof(pw_gzdr1a) },
    { &pw_gzdr1d, sizeof(pw_gzdr1d) },
    { &pw_gzdr1, sizeof(pw_gzdr1) },
    { &wg_gzdr1, sizeof(wg_gzdr1) },
    { &a_gzdl2, sizeof(a_gzdl2) },
    { &ia_gzdl2, sizeof(ia_gzdl2) },
    { &pw_gzdl2a, sizeof(pw_gzdl2a) },
    { &pw_gzdl2d, sizeof(pw_gzdl2d) },
    { &pw_gzdl2, sizeof(pw_gzdl2) },
    { &wg_gzdl2, sizeof(wg_gzdl2) },
    { &a_gzdr2, sizeof(a_gzdr2) },
    { &ia_gzdr2, sizeof(ia_gzdr2) },
    { &pw_gzdr2a, sizeof(pw_gzdr2a) },
    { &pw_gzdr2d, sizeof(pw_gzdr2d) },
    { &pw_gzdr2, sizeof(pw_gzdr2) },
    { &wg_gzdr2, sizeof(wg_gzdr2) },
    { &a_gzk, sizeof(a_gzk) },
    { &ia_gzk, sizeof(ia_gzk) },
    { &pw_gzka, sizeof(pw_gzka) },
    { &pw_gzkd, sizeof(pw_gzkd) },
    { &pw_gzk, sizeof(pw_gzk) },
    { &wg_gzk, sizeof(wg_gzk) },
    { &pw_wgx, sizeof(pw_wgx) },
    { &wg_wgx, sizeof(wg_wgx) },
    { &pw_wgy, sizeof(pw_wgy) },
    { &wg_wgy, sizeof(wg_wgy) },
    { &pw_wgz, sizeof(pw_wgz) },
    { &wg_wgz, sizeof(wg_wgz) },
    { &pw_wssp, sizeof(pw_wssp) },
    { &wg_wssp, sizeof(wg_wssp) },
    { &pw_sspdelay, sizeof(pw_sspdelay) },
    { &wg_sspdelay, sizeof(wg_sspdelay) },
    { &pw_omegadelay, sizeof(pw_omegadelay) },
    { &wg_omegadelay, sizeof(wg_omegadelay) },
    { &pw_womega, sizeof(pw_womega) },
    { &wg_womega, sizeof(wg_womega) },
    { &pw_sspshift, sizeof(pw_sspshift) },
    { &wg_sspshift, sizeof(wg_sspshift) },
    { &pw_ssp_pass_delay, sizeof(pw_ssp_pass_delay) },
    { &wg_ssp_pass_delay, sizeof(wg_ssp_pass_delay) },
    { &a_gzrf0, sizeof(a_gzrf0) },
    { &ia_gzrf0, sizeof(ia_gzrf0) },
    { &pw_gzrf0a, sizeof(pw_gzrf0a) },
    { &pw_gzrf0d, sizeof(pw_gzrf0d) },
    { &pw_gzrf0, sizeof(pw_gzrf0) },
    { &res_gzrf0, sizeof(res_gzrf0) },
    { &a_rf0, sizeof(a_rf0) },
    { &ia_rf0, sizeof(ia_rf0) },
    { &pw_rf0, sizeof(pw_rf0) },
    { &res_rf0, sizeof(res_rf0) },
    { &cyc_rf0, sizeof(cyc_rf0) },
    { &off_rf0, sizeof(off_rf0) },
    { &alpha_rf0, sizeof(alpha_rf0) },
    { &thk_rf0, sizeof(thk_rf0) },
    { &gscale_rf0, sizeof(gscale_rf0) },
    { &flip_rf0, sizeof(flip_rf0) },
    { &wg_rf0, sizeof(wg_rf0) },
    { &a_omegarf0, sizeof(a_omegarf0) },
    { &ia_omegarf0, sizeof(ia_omegarf0) },
    { &pw_omegarf0, sizeof(pw_omegarf0) },
    { &res_omegarf0, sizeof(res_omegarf0) },
    { &off_omegarf0, sizeof(off_omegarf0) },
    { &rfslot_omegarf0, sizeof(rfslot_omegarf0) },
    { &gscale_omegarf0, sizeof(gscale_omegarf0) },
    { &n_omegarf0, sizeof(n_omegarf0) },
    { &wg_omegarf0, sizeof(wg_omegarf0) },
    { &a_gyk0, sizeof(a_gyk0) },
    { &ia_gyk0, sizeof(ia_gyk0) },
    { &pw_gyk0a, sizeof(pw_gyk0a) },
    { &pw_gyk0d, sizeof(pw_gyk0d) },
    { &pw_gyk0, sizeof(pw_gyk0) },
    { &wg_gyk0, sizeof(wg_gyk0) },
    { &ia_bline_unblank, sizeof(ia_bline_unblank) },
    { &filter_blineacq1, sizeof(filter_blineacq1) },
    { &res_rfcssat, sizeof(res_rfcssat) },
    { &wg_rfcssat, sizeof(wg_rfcssat) },
    { &a_dbgxrfcssat, sizeof(a_dbgxrfcssat) },
    { &ia_dbgxrfcssat, sizeof(ia_dbgxrfcssat) },
    { &pw_dbgxrfcssata, sizeof(pw_dbgxrfcssata) },
    { &pw_dbgxrfcssatd, sizeof(pw_dbgxrfcssatd) },
    { &pw_dbgxrfcssat, sizeof(pw_dbgxrfcssat) },
    { &wg_dbgxrfcssat, sizeof(wg_dbgxrfcssat) },
    { &a_dbgyrfcssat, sizeof(a_dbgyrfcssat) },
    { &ia_dbgyrfcssat, sizeof(ia_dbgyrfcssat) },
    { &pw_dbgyrfcssata, sizeof(pw_dbgyrfcssata) },
    { &pw_dbgyrfcssatd, sizeof(pw_dbgyrfcssatd) },
    { &pw_dbgyrfcssat, sizeof(pw_dbgyrfcssat) },
    { &wg_dbgyrfcssat, sizeof(wg_dbgyrfcssat) },
    { &a_dbgzrfcssat, sizeof(a_dbgzrfcssat) },
    { &ia_dbgzrfcssat, sizeof(ia_dbgzrfcssat) },
    { &pw_dbgzrfcssata, sizeof(pw_dbgzrfcssata) },
    { &pw_dbgzrfcssatd, sizeof(pw_dbgzrfcssatd) },
    { &pw_dbgzrfcssat, sizeof(pw_dbgzrfcssat) },
    { &wg_dbgzrfcssat, sizeof(wg_dbgzrfcssat) },
    { &res_omega_hs_rfcssat, sizeof(res_omega_hs_rfcssat) },
    { &wg_omega_hs_rfcssat, sizeof(wg_omega_hs_rfcssat) },
    { &a_gzrfcs, sizeof(a_gzrfcs) },
    { &ia_gzrfcs, sizeof(ia_gzrfcs) },
    { &pw_gzrfcsa, sizeof(pw_gzrfcsa) },
    { &pw_gzrfcsd, sizeof(pw_gzrfcsd) },
    { &pw_gzrfcs, sizeof(pw_gzrfcs) },
    { &wg_gzrfcs, sizeof(wg_gzrfcs) },
    { &a_gykcs, sizeof(a_gykcs) },
    { &ia_gykcs, sizeof(ia_gykcs) },
    { &pw_gykcsa, sizeof(pw_gykcsa) },
    { &pw_gykcsd, sizeof(pw_gykcsd) },
    { &pw_gykcs, sizeof(pw_gykcs) },
    { &wg_gykcs, sizeof(wg_gykcs) },
    { &a_gxkcs, sizeof(a_gxkcs) },
    { &ia_gxkcs, sizeof(ia_gxkcs) },
    { &pw_gxkcsa, sizeof(pw_gxkcsa) },
    { &pw_gxkcsd, sizeof(pw_gxkcsd) },
    { &pw_gxkcs, sizeof(pw_gxkcs) },
    { &wg_gxkcs, sizeof(wg_gxkcs) },
    { &a_gzkcs, sizeof(a_gzkcs) },
    { &ia_gzkcs, sizeof(ia_gzkcs) },
    { &pw_gzkcsa, sizeof(pw_gzkcsa) },
    { &pw_gzkcsd, sizeof(pw_gzkcsd) },
    { &pw_gzkcs, sizeof(pw_gzkcs) },
    { &wg_gzkcs, sizeof(wg_gzkcs) },
    { &pw_isi_cardiacsat, sizeof(pw_isi_cardiacsat) },
    { &wg_isi_cardiacsat, sizeof(wg_isi_cardiacsat) },
    { &pw_rot_update_cardiacsat, sizeof(pw_rot_update_cardiacsat) },
    { &wg_rot_update_cardiacsat, sizeof(wg_rot_update_cardiacsat) },
    { &a_gzrfse1, sizeof(a_gzrfse1) },
    { &ia_gzrfse1, sizeof(ia_gzrfse1) },
    { &pw_gzrfse1a, sizeof(pw_gzrfse1a) },
    { &pw_gzrfse1d, sizeof(pw_gzrfse1d) },
    { &pw_gzrfse1, sizeof(pw_gzrfse1) },
    { &a_rfse1, sizeof(a_rfse1) },
    { &ia_rfse1, sizeof(ia_rfse1) },
    { &pw_rfse1, sizeof(pw_rfse1) },
    { &res_rfse1, sizeof(res_rfse1) },
    { &temp_res_rfse1, sizeof(temp_res_rfse1) },
    { &cyc_rfse1, sizeof(cyc_rfse1) },
    { &off_rfse1, sizeof(off_rfse1) },
    { &alpha_rfse1, sizeof(alpha_rfse1) },
    { &thk_rfse1, sizeof(thk_rfse1) },
    { &gscale_rfse1, sizeof(gscale_rfse1) },
    { &flip_rfse1, sizeof(flip_rfse1) },
    { &wg_rfse1, sizeof(wg_rfse1) },
    { &pw_isi_sate1, sizeof(pw_isi_sate1) },
    { &wg_isi_sate1, sizeof(wg_isi_sate1) },
    { &pw_rot_update_e1, sizeof(pw_rot_update_e1) },
    { &wg_rot_update_e1, sizeof(wg_rot_update_e1) },
    { &a_gykse1, sizeof(a_gykse1) },
    { &ia_gykse1, sizeof(ia_gykse1) },
    { &pw_gykse1a, sizeof(pw_gykse1a) },
    { &pw_gykse1d, sizeof(pw_gykse1d) },
    { &pw_gykse1, sizeof(pw_gykse1) },
    { &wg_gykse1, sizeof(wg_gykse1) },
    { &a_gxkse1, sizeof(a_gxkse1) },
    { &ia_gxkse1, sizeof(ia_gxkse1) },
    { &pw_gxkse1a, sizeof(pw_gxkse1a) },
    { &pw_gxkse1d, sizeof(pw_gxkse1d) },
    { &pw_gxkse1, sizeof(pw_gxkse1) },
    { &wg_gxkse1, sizeof(wg_gxkse1) },
    { &pw_isi_satek1, sizeof(pw_isi_satek1) },
    { &wg_isi_satek1, sizeof(wg_isi_satek1) },
    { &pw_rot_update_ek1, sizeof(pw_rot_update_ek1) },
    { &wg_rot_update_ek1, sizeof(wg_rot_update_ek1) },
    { &a_gzrfse2, sizeof(a_gzrfse2) },
    { &ia_gzrfse2, sizeof(ia_gzrfse2) },
    { &pw_gzrfse2a, sizeof(pw_gzrfse2a) },
    { &pw_gzrfse2d, sizeof(pw_gzrfse2d) },
    { &pw_gzrfse2, sizeof(pw_gzrfse2) },
    { &a_rfse2, sizeof(a_rfse2) },
    { &ia_rfse2, sizeof(ia_rfse2) },
    { &pw_rfse2, sizeof(pw_rfse2) },
    { &res_rfse2, sizeof(res_rfse2) },
    { &temp_res_rfse2, sizeof(temp_res_rfse2) },
    { &cyc_rfse2, sizeof(cyc_rfse2) },
    { &off_rfse2, sizeof(off_rfse2) },
    { &alpha_rfse2, sizeof(alpha_rfse2) },
    { &thk_rfse2, sizeof(thk_rfse2) },
    { &gscale_rfse2, sizeof(gscale_rfse2) },
    { &flip_rfse2, sizeof(flip_rfse2) },
    { &wg_rfse2, sizeof(wg_rfse2) },
    { &pw_isi_sate2, sizeof(pw_isi_sate2) },
    { &wg_isi_sate2, sizeof(wg_isi_sate2) },
    { &pw_rot_update_e2, sizeof(pw_rot_update_e2) },
    { &wg_rot_update_e2, sizeof(wg_rot_update_e2) },
    { &a_gykse2, sizeof(a_gykse2) },
    { &ia_gykse2, sizeof(ia_gykse2) },
    { &pw_gykse2a, sizeof(pw_gykse2a) },
    { &pw_gykse2d, sizeof(pw_gykse2d) },
    { &pw_gykse2, sizeof(pw_gykse2) },
    { &wg_gykse2, sizeof(wg_gykse2) },
    { &a_gxkse2, sizeof(a_gxkse2) },
    { &ia_gxkse2, sizeof(ia_gxkse2) },
    { &pw_gxkse2a, sizeof(pw_gxkse2a) },
    { &pw_gxkse2d, sizeof(pw_gxkse2d) },
    { &pw_gxkse2, sizeof(pw_gxkse2) },
    { &wg_gxkse2, sizeof(wg_gxkse2) },
    { &pw_isi_satek2, sizeof(pw_isi_satek2) },
    { &wg_isi_satek2, sizeof(wg_isi_satek2) },
    { &pw_rot_update_ek2, sizeof(pw_rot_update_ek2) },
    { &wg_rot_update_ek2, sizeof(wg_rot_update_ek2) },
    { &a_gzrfse3, sizeof(a_gzrfse3) },
    { &ia_gzrfse3, sizeof(ia_gzrfse3) },
    { &pw_gzrfse3a, sizeof(pw_gzrfse3a) },
    { &pw_gzrfse3d, sizeof(pw_gzrfse3d) },
    { &pw_gzrfse3, sizeof(pw_gzrfse3) },
    { &a_rfse3, sizeof(a_rfse3) },
    { &ia_rfse3, sizeof(ia_rfse3) },
    { &pw_rfse3, sizeof(pw_rfse3) },
    { &res_rfse3, sizeof(res_rfse3) },
    { &temp_res_rfse3, sizeof(temp_res_rfse3) },
    { &cyc_rfse3, sizeof(cyc_rfse3) },
    { &off_rfse3, sizeof(off_rfse3) },
    { &alpha_rfse3, sizeof(alpha_rfse3) },
    { &thk_rfse3, sizeof(thk_rfse3) },
    { &gscale_rfse3, sizeof(gscale_rfse3) },
    { &flip_rfse3, sizeof(flip_rfse3) },
    { &wg_rfse3, sizeof(wg_rfse3) },
    { &pw_isi_sate3, sizeof(pw_isi_sate3) },
    { &wg_isi_sate3, sizeof(wg_isi_sate3) },
    { &pw_rot_update_e3, sizeof(pw_rot_update_e3) },
    { &wg_rot_update_e3, sizeof(wg_rot_update_e3) },
    { &a_gykse3, sizeof(a_gykse3) },
    { &ia_gykse3, sizeof(ia_gykse3) },
    { &pw_gykse3a, sizeof(pw_gykse3a) },
    { &pw_gykse3d, sizeof(pw_gykse3d) },
    { &pw_gykse3, sizeof(pw_gykse3) },
    { &wg_gykse3, sizeof(wg_gykse3) },
    { &a_gxkse3, sizeof(a_gxkse3) },
    { &ia_gxkse3, sizeof(ia_gxkse3) },
    { &pw_gxkse3a, sizeof(pw_gxkse3a) },
    { &pw_gxkse3d, sizeof(pw_gxkse3d) },
    { &pw_gxkse3, sizeof(pw_gxkse3) },
    { &wg_gxkse3, sizeof(wg_gxkse3) },
    { &pw_isi_satek3, sizeof(pw_isi_satek3) },
    { &wg_isi_satek3, sizeof(wg_isi_satek3) },
    { &pw_rot_update_ek3, sizeof(pw_rot_update_ek3) },
    { &wg_rot_update_ek3, sizeof(wg_rot_update_ek3) },
    { &a_gzrfse4, sizeof(a_gzrfse4) },
    { &ia_gzrfse4, sizeof(ia_gzrfse4) },
    { &pw_gzrfse4a, sizeof(pw_gzrfse4a) },
    { &pw_gzrfse4d, sizeof(pw_gzrfse4d) },
    { &pw_gzrfse4, sizeof(pw_gzrfse4) },
    { &a_rfse4, sizeof(a_rfse4) },
    { &ia_rfse4, sizeof(ia_rfse4) },
    { &pw_rfse4, sizeof(pw_rfse4) },
    { &res_rfse4, sizeof(res_rfse4) },
    { &temp_res_rfse4, sizeof(temp_res_rfse4) },
    { &cyc_rfse4, sizeof(cyc_rfse4) },
    { &off_rfse4, sizeof(off_rfse4) },
    { &alpha_rfse4, sizeof(alpha_rfse4) },
    { &thk_rfse4, sizeof(thk_rfse4) },
    { &gscale_rfse4, sizeof(gscale_rfse4) },
    { &flip_rfse4, sizeof(flip_rfse4) },
    { &wg_rfse4, sizeof(wg_rfse4) },
    { &pw_isi_sate4, sizeof(pw_isi_sate4) },
    { &wg_isi_sate4, sizeof(wg_isi_sate4) },
    { &pw_rot_update_e4, sizeof(pw_rot_update_e4) },
    { &wg_rot_update_e4, sizeof(wg_rot_update_e4) },
    { &a_gykse4, sizeof(a_gykse4) },
    { &ia_gykse4, sizeof(ia_gykse4) },
    { &pw_gykse4a, sizeof(pw_gykse4a) },
    { &pw_gykse4d, sizeof(pw_gykse4d) },
    { &pw_gykse4, sizeof(pw_gykse4) },
    { &wg_gykse4, sizeof(wg_gykse4) },
    { &a_gxkse4, sizeof(a_gxkse4) },
    { &ia_gxkse4, sizeof(ia_gxkse4) },
    { &pw_gxkse4a, sizeof(pw_gxkse4a) },
    { &pw_gxkse4d, sizeof(pw_gxkse4d) },
    { &pw_gxkse4, sizeof(pw_gxkse4) },
    { &wg_gxkse4, sizeof(wg_gxkse4) },
    { &pw_isi_satek4, sizeof(pw_isi_satek4) },
    { &wg_isi_satek4, sizeof(wg_isi_satek4) },
    { &pw_rot_update_ek4, sizeof(pw_rot_update_ek4) },
    { &wg_rot_update_ek4, sizeof(wg_rot_update_ek4) },
    { &a_gzrfse5, sizeof(a_gzrfse5) },
    { &ia_gzrfse5, sizeof(ia_gzrfse5) },
    { &pw_gzrfse5a, sizeof(pw_gzrfse5a) },
    { &pw_gzrfse5d, sizeof(pw_gzrfse5d) },
    { &pw_gzrfse5, sizeof(pw_gzrfse5) },
    { &a_rfse5, sizeof(a_rfse5) },
    { &ia_rfse5, sizeof(ia_rfse5) },
    { &pw_rfse5, sizeof(pw_rfse5) },
    { &res_rfse5, sizeof(res_rfse5) },
    { &temp_res_rfse5, sizeof(temp_res_rfse5) },
    { &cyc_rfse5, sizeof(cyc_rfse5) },
    { &off_rfse5, sizeof(off_rfse5) },
    { &alpha_rfse5, sizeof(alpha_rfse5) },
    { &thk_rfse5, sizeof(thk_rfse5) },
    { &gscale_rfse5, sizeof(gscale_rfse5) },
    { &flip_rfse5, sizeof(flip_rfse5) },
    { &wg_rfse5, sizeof(wg_rfse5) },
    { &pw_isi_sate5, sizeof(pw_isi_sate5) },
    { &wg_isi_sate5, sizeof(wg_isi_sate5) },
    { &pw_rot_update_e5, sizeof(pw_rot_update_e5) },
    { &wg_rot_update_e5, sizeof(wg_rot_update_e5) },
    { &a_gykse5, sizeof(a_gykse5) },
    { &ia_gykse5, sizeof(ia_gykse5) },
    { &pw_gykse5a, sizeof(pw_gykse5a) },
    { &pw_gykse5d, sizeof(pw_gykse5d) },
    { &pw_gykse5, sizeof(pw_gykse5) },
    { &wg_gykse5, sizeof(wg_gykse5) },
    { &a_gxkse5, sizeof(a_gxkse5) },
    { &ia_gxkse5, sizeof(ia_gxkse5) },
    { &pw_gxkse5a, sizeof(pw_gxkse5a) },
    { &pw_gxkse5d, sizeof(pw_gxkse5d) },
    { &pw_gxkse5, sizeof(pw_gxkse5) },
    { &wg_gxkse5, sizeof(wg_gxkse5) },
    { &pw_isi_satek5, sizeof(pw_isi_satek5) },
    { &wg_isi_satek5, sizeof(wg_isi_satek5) },
    { &pw_rot_update_ek5, sizeof(pw_rot_update_ek5) },
    { &wg_rot_update_ek5, sizeof(wg_rot_update_ek5) },
    { &a_gzrfse6, sizeof(a_gzrfse6) },
    { &ia_gzrfse6, sizeof(ia_gzrfse6) },
    { &pw_gzrfse6a, sizeof(pw_gzrfse6a) },
    { &pw_gzrfse6d, sizeof(pw_gzrfse6d) },
    { &pw_gzrfse6, sizeof(pw_gzrfse6) },
    { &a_rfse6, sizeof(a_rfse6) },
    { &ia_rfse6, sizeof(ia_rfse6) },
    { &pw_rfse6, sizeof(pw_rfse6) },
    { &res_rfse6, sizeof(res_rfse6) },
    { &temp_res_rfse6, sizeof(temp_res_rfse6) },
    { &cyc_rfse6, sizeof(cyc_rfse6) },
    { &off_rfse6, sizeof(off_rfse6) },
    { &alpha_rfse6, sizeof(alpha_rfse6) },
    { &thk_rfse6, sizeof(thk_rfse6) },
    { &gscale_rfse6, sizeof(gscale_rfse6) },
    { &flip_rfse6, sizeof(flip_rfse6) },
    { &wg_rfse6, sizeof(wg_rfse6) },
    { &pw_isi_sate6, sizeof(pw_isi_sate6) },
    { &wg_isi_sate6, sizeof(wg_isi_sate6) },
    { &pw_rot_update_e6, sizeof(pw_rot_update_e6) },
    { &wg_rot_update_e6, sizeof(wg_rot_update_e6) },
    { &a_gykse6, sizeof(a_gykse6) },
    { &ia_gykse6, sizeof(ia_gykse6) },
    { &pw_gykse6a, sizeof(pw_gykse6a) },
    { &pw_gykse6d, sizeof(pw_gykse6d) },
    { &pw_gykse6, sizeof(pw_gykse6) },
    { &wg_gykse6, sizeof(wg_gykse6) },
    { &a_gxkse6, sizeof(a_gxkse6) },
    { &ia_gxkse6, sizeof(ia_gxkse6) },
    { &pw_gxkse6a, sizeof(pw_gxkse6a) },
    { &pw_gxkse6d, sizeof(pw_gxkse6d) },
    { &pw_gxkse6, sizeof(pw_gxkse6) },
    { &wg_gxkse6, sizeof(wg_gxkse6) },
    { &pw_isi_satek6, sizeof(pw_isi_satek6) },
    { &wg_isi_satek6, sizeof(wg_isi_satek6) },
    { &pw_rot_update_ek6, sizeof(pw_rot_update_ek6) },
    { &wg_rot_update_ek6, sizeof(wg_rot_update_ek6) },
    { &a_gxrfsx1, sizeof(a_gxrfsx1) },
    { &ia_gxrfsx1, sizeof(ia_gxrfsx1) },
    { &pw_gxrfsx1a, sizeof(pw_gxrfsx1a) },
    { &pw_gxrfsx1d, sizeof(pw_gxrfsx1d) },
    { &pw_gxrfsx1, sizeof(pw_gxrfsx1) },
    { &a_rfsx1, sizeof(a_rfsx1) },
    { &ia_rfsx1, sizeof(ia_rfsx1) },
    { &pw_rfsx1, sizeof(pw_rfsx1) },
    { &res_rfsx1, sizeof(res_rfsx1) },
    { &temp_res_rfsx1, sizeof(temp_res_rfsx1) },
    { &cyc_rfsx1, sizeof(cyc_rfsx1) },
    { &off_rfsx1, sizeof(off_rfsx1) },
    { &alpha_rfsx1, sizeof(alpha_rfsx1) },
    { &gscale_rfsx1, sizeof(gscale_rfsx1) },
    { &thk_rfsx1, sizeof(thk_rfsx1) },
    { &flip_rfsx1, sizeof(flip_rfsx1) },
    { &wg_rfsx1, sizeof(wg_rfsx1) },
    { &pw_isi_satx1, sizeof(pw_isi_satx1) },
    { &wg_isi_satx1, sizeof(wg_isi_satx1) },
    { &pw_rot_update_x1, sizeof(pw_rot_update_x1) },
    { &wg_rot_update_x1, sizeof(wg_rot_update_x1) },
    { &a_gyksx1, sizeof(a_gyksx1) },
    { &ia_gyksx1, sizeof(ia_gyksx1) },
    { &pw_gyksx1a, sizeof(pw_gyksx1a) },
    { &pw_gyksx1d, sizeof(pw_gyksx1d) },
    { &pw_gyksx1, sizeof(pw_gyksx1) },
    { &wg_gyksx1, sizeof(wg_gyksx1) },
    { &a_gxksx1, sizeof(a_gxksx1) },
    { &ia_gxksx1, sizeof(ia_gxksx1) },
    { &pw_gxksx1a, sizeof(pw_gxksx1a) },
    { &pw_gxksx1d, sizeof(pw_gxksx1d) },
    { &pw_gxksx1, sizeof(pw_gxksx1) },
    { &wg_gxksx1, sizeof(wg_gxksx1) },
    { &pw_isi_satxk1, sizeof(pw_isi_satxk1) },
    { &wg_isi_satxk1, sizeof(wg_isi_satxk1) },
    { &pw_rot_update_xk1, sizeof(pw_rot_update_xk1) },
    { &wg_rot_update_xk1, sizeof(wg_rot_update_xk1) },
    { &a_gxrfsx2, sizeof(a_gxrfsx2) },
    { &ia_gxrfsx2, sizeof(ia_gxrfsx2) },
    { &pw_gxrfsx2a, sizeof(pw_gxrfsx2a) },
    { &pw_gxrfsx2d, sizeof(pw_gxrfsx2d) },
    { &pw_gxrfsx2, sizeof(pw_gxrfsx2) },
    { &a_rfsx2, sizeof(a_rfsx2) },
    { &ia_rfsx2, sizeof(ia_rfsx2) },
    { &pw_rfsx2, sizeof(pw_rfsx2) },
    { &res_rfsx2, sizeof(res_rfsx2) },
    { &temp_res_rfsx2, sizeof(temp_res_rfsx2) },
    { &cyc_rfsx2, sizeof(cyc_rfsx2) },
    { &off_rfsx2, sizeof(off_rfsx2) },
    { &alpha_rfsx2, sizeof(alpha_rfsx2) },
    { &gscale_rfsx2, sizeof(gscale_rfsx2) },
    { &thk_rfsx2, sizeof(thk_rfsx2) },
    { &flip_rfsx2, sizeof(flip_rfsx2) },
    { &wg_rfsx2, sizeof(wg_rfsx2) },
    { &pw_isi_satx2, sizeof(pw_isi_satx2) },
    { &wg_isi_satx2, sizeof(wg_isi_satx2) },
    { &pw_rot_update_x2, sizeof(pw_rot_update_x2) },
    { &wg_rot_update_x2, sizeof(wg_rot_update_x2) },
    { &a_gyksx2, sizeof(a_gyksx2) },
    { &ia_gyksx2, sizeof(ia_gyksx2) },
    { &pw_gyksx2a, sizeof(pw_gyksx2a) },
    { &pw_gyksx2d, sizeof(pw_gyksx2d) },
    { &pw_gyksx2, sizeof(pw_gyksx2) },
    { &wg_gyksx2, sizeof(wg_gyksx2) },
    { &a_gxksx2, sizeof(a_gxksx2) },
    { &ia_gxksx2, sizeof(ia_gxksx2) },
    { &pw_gxksx2a, sizeof(pw_gxksx2a) },
    { &pw_gxksx2d, sizeof(pw_gxksx2d) },
    { &pw_gxksx2, sizeof(pw_gxksx2) },
    { &wg_gxksx2, sizeof(wg_gxksx2) },
    { &pw_isi_satxk2, sizeof(pw_isi_satxk2) },
    { &wg_isi_satxk2, sizeof(wg_isi_satxk2) },
    { &pw_rot_update_xk2, sizeof(pw_rot_update_xk2) },
    { &wg_rot_update_xk2, sizeof(wg_rot_update_xk2) },
    { &a_gyrfsy1, sizeof(a_gyrfsy1) },
    { &ia_gyrfsy1, sizeof(ia_gyrfsy1) },
    { &pw_gyrfsy1a, sizeof(pw_gyrfsy1a) },
    { &pw_gyrfsy1d, sizeof(pw_gyrfsy1d) },
    { &pw_gyrfsy1, sizeof(pw_gyrfsy1) },
    { &a_rfsy1, sizeof(a_rfsy1) },
    { &ia_rfsy1, sizeof(ia_rfsy1) },
    { &pw_rfsy1, sizeof(pw_rfsy1) },
    { &res_rfsy1, sizeof(res_rfsy1) },
    { &temp_res_rfsy1, sizeof(temp_res_rfsy1) },
    { &cyc_rfsy1, sizeof(cyc_rfsy1) },
    { &off_rfsy1, sizeof(off_rfsy1) },
    { &alpha_rfsy1, sizeof(alpha_rfsy1) },
    { &thk_rfsy1, sizeof(thk_rfsy1) },
    { &gscale_rfsy1, sizeof(gscale_rfsy1) },
    { &flip_rfsy1, sizeof(flip_rfsy1) },
    { &wg_rfsy1, sizeof(wg_rfsy1) },
    { &pw_isi_saty1, sizeof(pw_isi_saty1) },
    { &wg_isi_saty1, sizeof(wg_isi_saty1) },
    { &pw_rot_update_y1, sizeof(pw_rot_update_y1) },
    { &wg_rot_update_y1, sizeof(wg_rot_update_y1) },
    { &a_gyksy1, sizeof(a_gyksy1) },
    { &ia_gyksy1, sizeof(ia_gyksy1) },
    { &pw_gyksy1a, sizeof(pw_gyksy1a) },
    { &pw_gyksy1d, sizeof(pw_gyksy1d) },
    { &pw_gyksy1, sizeof(pw_gyksy1) },
    { &wg_gyksy1, sizeof(wg_gyksy1) },
    { &a_gxksy1, sizeof(a_gxksy1) },
    { &ia_gxksy1, sizeof(ia_gxksy1) },
    { &pw_gxksy1a, sizeof(pw_gxksy1a) },
    { &pw_gxksy1d, sizeof(pw_gxksy1d) },
    { &pw_gxksy1, sizeof(pw_gxksy1) },
    { &wg_gxksy1, sizeof(wg_gxksy1) },
    { &pw_isi_satyk1, sizeof(pw_isi_satyk1) },
    { &wg_isi_satyk1, sizeof(wg_isi_satyk1) },
    { &pw_rot_update_yk1, sizeof(pw_rot_update_yk1) },
    { &wg_rot_update_yk1, sizeof(wg_rot_update_yk1) },
    { &a_gyrfsy2, sizeof(a_gyrfsy2) },
    { &ia_gyrfsy2, sizeof(ia_gyrfsy2) },
    { &pw_gyrfsy2a, sizeof(pw_gyrfsy2a) },
    { &pw_gyrfsy2d, sizeof(pw_gyrfsy2d) },
    { &pw_gyrfsy2, sizeof(pw_gyrfsy2) },
    { &a_rfsy2, sizeof(a_rfsy2) },
    { &ia_rfsy2, sizeof(ia_rfsy2) },
    { &pw_rfsy2, sizeof(pw_rfsy2) },
    { &res_rfsy2, sizeof(res_rfsy2) },
    { &temp_res_rfsy2, sizeof(temp_res_rfsy2) },
    { &cyc_rfsy2, sizeof(cyc_rfsy2) },
    { &off_rfsy2, sizeof(off_rfsy2) },
    { &alpha_rfsy2, sizeof(alpha_rfsy2) },
    { &thk_rfsy2, sizeof(thk_rfsy2) },
    { &gscale_rfsy2, sizeof(gscale_rfsy2) },
    { &flip_rfsy2, sizeof(flip_rfsy2) },
    { &wg_rfsy2, sizeof(wg_rfsy2) },
    { &pw_isi_saty2, sizeof(pw_isi_saty2) },
    { &wg_isi_saty2, sizeof(wg_isi_saty2) },
    { &pw_rot_update_y2, sizeof(pw_rot_update_y2) },
    { &wg_rot_update_y2, sizeof(wg_rot_update_y2) },
    { &a_gyksy2, sizeof(a_gyksy2) },
    { &ia_gyksy2, sizeof(ia_gyksy2) },
    { &pw_gyksy2a, sizeof(pw_gyksy2a) },
    { &pw_gyksy2d, sizeof(pw_gyksy2d) },
    { &pw_gyksy2, sizeof(pw_gyksy2) },
    { &wg_gyksy2, sizeof(wg_gyksy2) },
    { &a_gxksy2, sizeof(a_gxksy2) },
    { &ia_gxksy2, sizeof(ia_gxksy2) },
    { &pw_gxksy2a, sizeof(pw_gxksy2a) },
    { &pw_gxksy2d, sizeof(pw_gxksy2d) },
    { &pw_gxksy2, sizeof(pw_gxksy2) },
    { &wg_gxksy2, sizeof(wg_gxksy2) },
    { &pw_isi_satyk2, sizeof(pw_isi_satyk2) },
    { &wg_isi_satyk2, sizeof(wg_isi_satyk2) },
    { &pw_rot_update_yk2, sizeof(pw_rot_update_yk2) },
    { &wg_rot_update_yk2, sizeof(wg_rot_update_yk2) },
    { &a_gzrfsz1, sizeof(a_gzrfsz1) },
    { &ia_gzrfsz1, sizeof(ia_gzrfsz1) },
    { &pw_gzrfsz1a, sizeof(pw_gzrfsz1a) },
    { &pw_gzrfsz1d, sizeof(pw_gzrfsz1d) },
    { &pw_gzrfsz1, sizeof(pw_gzrfsz1) },
    { &a_rfsz1, sizeof(a_rfsz1) },
    { &ia_rfsz1, sizeof(ia_rfsz1) },
    { &pw_rfsz1, sizeof(pw_rfsz1) },
    { &res_rfsz1, sizeof(res_rfsz1) },
    { &temp_res_rfsz1, sizeof(temp_res_rfsz1) },
    { &cyc_rfsz1, sizeof(cyc_rfsz1) },
    { &off_rfsz1, sizeof(off_rfsz1) },
    { &alpha_rfsz1, sizeof(alpha_rfsz1) },
    { &thk_rfsz1, sizeof(thk_rfsz1) },
    { &gscale_rfsz1, sizeof(gscale_rfsz1) },
    { &flip_rfsz1, sizeof(flip_rfsz1) },
    { &wg_rfsz1, sizeof(wg_rfsz1) },
    { &pw_isi_satz1, sizeof(pw_isi_satz1) },
    { &wg_isi_satz1, sizeof(wg_isi_satz1) },
    { &pw_rot_update_z1, sizeof(pw_rot_update_z1) },
    { &wg_rot_update_z1, sizeof(wg_rot_update_z1) },
    { &a_gyksz1, sizeof(a_gyksz1) },
    { &ia_gyksz1, sizeof(ia_gyksz1) },
    { &pw_gyksz1a, sizeof(pw_gyksz1a) },
    { &pw_gyksz1d, sizeof(pw_gyksz1d) },
    { &pw_gyksz1, sizeof(pw_gyksz1) },
    { &wg_gyksz1, sizeof(wg_gyksz1) },
    { &a_gxksz1, sizeof(a_gxksz1) },
    { &ia_gxksz1, sizeof(ia_gxksz1) },
    { &pw_gxksz1a, sizeof(pw_gxksz1a) },
    { &pw_gxksz1d, sizeof(pw_gxksz1d) },
    { &pw_gxksz1, sizeof(pw_gxksz1) },
    { &wg_gxksz1, sizeof(wg_gxksz1) },
    { &pw_isi_satzk1, sizeof(pw_isi_satzk1) },
    { &wg_isi_satzk1, sizeof(wg_isi_satzk1) },
    { &pw_rot_update_zk1, sizeof(pw_rot_update_zk1) },
    { &wg_rot_update_zk1, sizeof(wg_rot_update_zk1) },
    { &a_gzrfsz2, sizeof(a_gzrfsz2) },
    { &ia_gzrfsz2, sizeof(ia_gzrfsz2) },
    { &pw_gzrfsz2a, sizeof(pw_gzrfsz2a) },
    { &pw_gzrfsz2d, sizeof(pw_gzrfsz2d) },
    { &pw_gzrfsz2, sizeof(pw_gzrfsz2) },
    { &a_rfsz2, sizeof(a_rfsz2) },
    { &ia_rfsz2, sizeof(ia_rfsz2) },
    { &pw_rfsz2, sizeof(pw_rfsz2) },
    { &res_rfsz2, sizeof(res_rfsz2) },
    { &temp_res_rfsz2, sizeof(temp_res_rfsz2) },
    { &cyc_rfsz2, sizeof(cyc_rfsz2) },
    { &off_rfsz2, sizeof(off_rfsz2) },
    { &alpha_rfsz2, sizeof(alpha_rfsz2) },
    { &thk_rfsz2, sizeof(thk_rfsz2) },
    { &gscale_rfsz2, sizeof(gscale_rfsz2) },
    { &flip_rfsz2, sizeof(flip_rfsz2) },
    { &wg_rfsz2, sizeof(wg_rfsz2) },
    { &pw_isi_satz2, sizeof(pw_isi_satz2) },
    { &wg_isi_satz2, sizeof(wg_isi_satz2) },
    { &pw_rot_update_z2, sizeof(pw_rot_update_z2) },
    { &wg_rot_update_z2, sizeof(wg_rot_update_z2) },
    { &a_gyksz2, sizeof(a_gyksz2) },
    { &ia_gyksz2, sizeof(ia_gyksz2) },
    { &pw_gyksz2a, sizeof(pw_gyksz2a) },
    { &pw_gyksz2d, sizeof(pw_gyksz2d) },
    { &pw_gyksz2, sizeof(pw_gyksz2) },
    { &wg_gyksz2, sizeof(wg_gyksz2) },
    { &a_gxksz2, sizeof(a_gxksz2) },
    { &ia_gxksz2, sizeof(ia_gxksz2) },
    { &pw_gxksz2a, sizeof(pw_gxksz2a) },
    { &pw_gxksz2d, sizeof(pw_gxksz2d) },
    { &pw_gxksz2, sizeof(pw_gxksz2) },
    { &wg_gxksz2, sizeof(wg_gxksz2) },
    { &pw_isi_satzk2, sizeof(pw_isi_satzk2) },
    { &wg_isi_satzk2, sizeof(wg_isi_satzk2) },
    { &pw_rot_update_zk2, sizeof(pw_rot_update_zk2) },
    { &wg_rot_update_zk2, sizeof(wg_rot_update_zk2) },
    { &pw_y_ccs_null, sizeof(pw_y_ccs_null) },
    { &wg_y_ccs_null, sizeof(wg_y_ccs_null) },
    { &a_rf1mps1, sizeof(a_rf1mps1) },
    { &ia_rf1mps1, sizeof(ia_rf1mps1) },
    { &pw_rf1mps1, sizeof(pw_rf1mps1) },
    { &res_rf1mps1, sizeof(res_rf1mps1) },
    { &cyc_rf1mps1, sizeof(cyc_rf1mps1) },
    { &off_rf1mps1, sizeof(off_rf1mps1) },
    { &alpha_rf1mps1, sizeof(alpha_rf1mps1) },
    { &wg_rf1mps1, sizeof(wg_rf1mps1) },
    { &a_gyrf1mps1, sizeof(a_gyrf1mps1) },
    { &ia_gyrf1mps1, sizeof(ia_gyrf1mps1) },
    { &pw_gyrf1mps1a, sizeof(pw_gyrf1mps1a) },
    { &pw_gyrf1mps1d, sizeof(pw_gyrf1mps1d) },
    { &pw_gyrf1mps1, sizeof(pw_gyrf1mps1) },
    { &wg_gyrf1mps1, sizeof(wg_gyrf1mps1) },
    { &a_gy1mps1, sizeof(a_gy1mps1) },
    { &ia_gy1mps1, sizeof(ia_gy1mps1) },
    { &pw_gy1mps1a, sizeof(pw_gy1mps1a) },
    { &pw_gy1mps1d, sizeof(pw_gy1mps1d) },
    { &pw_gy1mps1, sizeof(pw_gy1mps1) },
    { &wg_gy1mps1, sizeof(wg_gy1mps1) },
    { &a_gzrf1mps1, sizeof(a_gzrf1mps1) },
    { &ia_gzrf1mps1, sizeof(ia_gzrf1mps1) },
    { &pw_gzrf1mps1a, sizeof(pw_gzrf1mps1a) },
    { &pw_gzrf1mps1d, sizeof(pw_gzrf1mps1d) },
    { &pw_gzrf1mps1, sizeof(pw_gzrf1mps1) },
    { &wg_gzrf1mps1, sizeof(wg_gzrf1mps1) },
    { &a_gz1mps1, sizeof(a_gz1mps1) },
    { &ia_gz1mps1, sizeof(ia_gz1mps1) },
    { &pw_gz1mps1a, sizeof(pw_gz1mps1a) },
    { &pw_gz1mps1d, sizeof(pw_gz1mps1d) },
    { &pw_gz1mps1, sizeof(pw_gz1mps1) },
    { &wg_gz1mps1, sizeof(wg_gz1mps1) },
    { &a_gx1mps1, sizeof(a_gx1mps1) },
    { &ia_gx1mps1, sizeof(ia_gx1mps1) },
    { &pw_gx1mps1a, sizeof(pw_gx1mps1a) },
    { &pw_gx1mps1d, sizeof(pw_gx1mps1d) },
    { &pw_gx1mps1, sizeof(pw_gx1mps1) },
    { &wg_gx1mps1, sizeof(wg_gx1mps1) },
    { &a_gzrf2mps1, sizeof(a_gzrf2mps1) },
    { &ia_gzrf2mps1, sizeof(ia_gzrf2mps1) },
    { &pw_gzrf2mps1a, sizeof(pw_gzrf2mps1a) },
    { &pw_gzrf2mps1d, sizeof(pw_gzrf2mps1d) },
    { &pw_gzrf2mps1, sizeof(pw_gzrf2mps1) },
    { &a_rf2mps1, sizeof(a_rf2mps1) },
    { &ia_rf2mps1, sizeof(ia_rf2mps1) },
    { &pw_rf2mps1, sizeof(pw_rf2mps1) },
    { &res_rf2mps1, sizeof(res_rf2mps1) },
    { &temp_res_rf2mps1, sizeof(temp_res_rf2mps1) },
    { &cyc_rf2mps1, sizeof(cyc_rf2mps1) },
    { &off_rf2mps1, sizeof(off_rf2mps1) },
    { &alpha_rf2mps1, sizeof(alpha_rf2mps1) },
    { &thk_rf2mps1, sizeof(thk_rf2mps1) },
    { &gscale_rf2mps1, sizeof(gscale_rf2mps1) },
    { &flip_rf2mps1, sizeof(flip_rf2mps1) },
    { &wg_rf2mps1, sizeof(wg_rf2mps1) },
    { &a_gzrf2lmps1, sizeof(a_gzrf2lmps1) },
    { &ia_gzrf2lmps1, sizeof(ia_gzrf2lmps1) },
    { &pw_gzrf2lmps1a, sizeof(pw_gzrf2lmps1a) },
    { &pw_gzrf2lmps1d, sizeof(pw_gzrf2lmps1d) },
    { &pw_gzrf2lmps1, sizeof(pw_gzrf2lmps1) },
    { &wg_gzrf2lmps1, sizeof(wg_gzrf2lmps1) },
    { &a_gzrf2rmps1, sizeof(a_gzrf2rmps1) },
    { &ia_gzrf2rmps1, sizeof(ia_gzrf2rmps1) },
    { &pw_gzrf2rmps1a, sizeof(pw_gzrf2rmps1a) },
    { &pw_gzrf2rmps1d, sizeof(pw_gzrf2rmps1d) },
    { &pw_gzrf2rmps1, sizeof(pw_gzrf2rmps1) },
    { &wg_gzrf2rmps1, sizeof(wg_gzrf2rmps1) },
    { &a_gxwmps1, sizeof(a_gxwmps1) },
    { &ia_gxwmps1, sizeof(ia_gxwmps1) },
    { &pw_gxwmps1a, sizeof(pw_gxwmps1a) },
    { &pw_gxwmps1d, sizeof(pw_gxwmps1d) },
    { &pw_gxwmps1, sizeof(pw_gxwmps1) },
    { &wg_gxwmps1, sizeof(wg_gxwmps1) },
    { &filter_echo1mps1, sizeof(filter_echo1mps1) },
    { &a_gzrf1cfl, sizeof(a_gzrf1cfl) },
    { &ia_gzrf1cfl, sizeof(ia_gzrf1cfl) },
    { &pw_gzrf1cfla, sizeof(pw_gzrf1cfla) },
    { &pw_gzrf1cfld, sizeof(pw_gzrf1cfld) },
    { &pw_gzrf1cfl, sizeof(pw_gzrf1cfl) },
    { &a_rf1cfl, sizeof(a_rf1cfl) },
    { &ia_rf1cfl, sizeof(ia_rf1cfl) },
    { &pw_rf1cfl, sizeof(pw_rf1cfl) },
    { &res_rf1cfl, sizeof(res_rf1cfl) },
    { &temp_res_rf1cfl, sizeof(temp_res_rf1cfl) },
    { &cyc_rf1cfl, sizeof(cyc_rf1cfl) },
    { &off_rf1cfl, sizeof(off_rf1cfl) },
    { &alpha_rf1cfl, sizeof(alpha_rf1cfl) },
    { &thk_rf1cfl, sizeof(thk_rf1cfl) },
    { &gscale_rf1cfl, sizeof(gscale_rf1cfl) },
    { &flip_rf1cfl, sizeof(flip_rf1cfl) },
    { &wg_rf1cfl, sizeof(wg_rf1cfl) },
    { &a_gz1cfl, sizeof(a_gz1cfl) },
    { &ia_gz1cfl, sizeof(ia_gz1cfl) },
    { &pw_gz1cfla, sizeof(pw_gz1cfla) },
    { &pw_gz1cfld, sizeof(pw_gz1cfld) },
    { &pw_gz1cfl, sizeof(pw_gz1cfl) },
    { &wg_gz1cfl, sizeof(wg_gz1cfl) },
    { &filter_cfl_fid, sizeof(filter_cfl_fid) },
    { &a_gykcfl, sizeof(a_gykcfl) },
    { &ia_gykcfl, sizeof(ia_gykcfl) },
    { &pw_gykcfla, sizeof(pw_gykcfla) },
    { &pw_gykcfld, sizeof(pw_gykcfld) },
    { &pw_gykcfl, sizeof(pw_gykcfl) },
    { &wg_gykcfl, sizeof(wg_gykcfl) },
    { &a_gxkrcvn, sizeof(a_gxkrcvn) },
    { &ia_gxkrcvn, sizeof(ia_gxkrcvn) },
    { &pw_gxkrcvna, sizeof(pw_gxkrcvna) },
    { &pw_gxkrcvnd, sizeof(pw_gxkrcvnd) },
    { &pw_gxkrcvn, sizeof(pw_gxkrcvn) },
    { &wg_gxkrcvn, sizeof(wg_gxkrcvn) },
    { &a_gykrcvn, sizeof(a_gykrcvn) },
    { &ia_gykrcvn, sizeof(ia_gykrcvn) },
    { &pw_gykrcvna, sizeof(pw_gykrcvna) },
    { &pw_gykrcvnd, sizeof(pw_gykrcvnd) },
    { &pw_gykrcvn, sizeof(pw_gykrcvn) },
    { &wg_gykrcvn, sizeof(wg_gykrcvn) },
    { &a_gzkrcvn, sizeof(a_gzkrcvn) },
    { &ia_gzkrcvn, sizeof(ia_gzkrcvn) },
    { &pw_gzkrcvna, sizeof(pw_gzkrcvna) },
    { &pw_gzkrcvnd, sizeof(pw_gzkrcvnd) },
    { &pw_gzkrcvn, sizeof(pw_gzkrcvn) },
    { &wg_gzkrcvn, sizeof(wg_gzkrcvn) },
    { &pw_grd_trig, sizeof(pw_grd_trig) },
    { &wg_grd_trig, sizeof(wg_grd_trig) },
    { &a_gxk2rcvn, sizeof(a_gxk2rcvn) },
    { &ia_gxk2rcvn, sizeof(ia_gxk2rcvn) },
    { &pw_gxk2rcvna, sizeof(pw_gxk2rcvna) },
    { &pw_gxk2rcvnd, sizeof(pw_gxk2rcvnd) },
    { &pw_gxk2rcvn, sizeof(pw_gxk2rcvn) },
    { &wg_gxk2rcvn, sizeof(wg_gxk2rcvn) },
    { &a_gyk2rcvn, sizeof(a_gyk2rcvn) },
    { &ia_gyk2rcvn, sizeof(ia_gyk2rcvn) },
    { &pw_gyk2rcvna, sizeof(pw_gyk2rcvna) },
    { &pw_gyk2rcvnd, sizeof(pw_gyk2rcvnd) },
    { &pw_gyk2rcvn, sizeof(pw_gyk2rcvn) },
    { &wg_gyk2rcvn, sizeof(wg_gyk2rcvn) },
    { &a_gzk2rcvn, sizeof(a_gzk2rcvn) },
    { &ia_gzk2rcvn, sizeof(ia_gzk2rcvn) },
    { &pw_gzk2rcvna, sizeof(pw_gzk2rcvna) },
    { &pw_gzk2rcvnd, sizeof(pw_gzk2rcvnd) },
    { &pw_gzk2rcvn, sizeof(pw_gzk2rcvn) },
    { &wg_gzk2rcvn, sizeof(wg_gzk2rcvn) },
    { &pw_rcvn_wait, sizeof(pw_rcvn_wait) },
    { &wg_rcvn_wait, sizeof(wg_rcvn_wait) },
    { &ia_rcvrbl, sizeof(ia_rcvrbl) },
    { &filter_rcvn_fid, sizeof(filter_rcvn_fid) },
    { &ia_rcvrbl2, sizeof(ia_rcvrbl2) },
    { &a_gzrf0cfh, sizeof(a_gzrf0cfh) },
    { &ia_gzrf0cfh, sizeof(ia_gzrf0cfh) },
    { &pw_gzrf0cfha, sizeof(pw_gzrf0cfha) },
    { &pw_gzrf0cfhd, sizeof(pw_gzrf0cfhd) },
    { &pw_gzrf0cfh, sizeof(pw_gzrf0cfh) },
    { &res_gzrf0cfh, sizeof(res_gzrf0cfh) },
    { &a_rf0cfh, sizeof(a_rf0cfh) },
    { &ia_rf0cfh, sizeof(ia_rf0cfh) },
    { &pw_rf0cfh, sizeof(pw_rf0cfh) },
    { &res_rf0cfh, sizeof(res_rf0cfh) },
    { &cyc_rf0cfh, sizeof(cyc_rf0cfh) },
    { &off_rf0cfh, sizeof(off_rf0cfh) },
    { &alpha_rf0cfh, sizeof(alpha_rf0cfh) },
    { &thk_rf0cfh, sizeof(thk_rf0cfh) },
    { &gscale_rf0cfh, sizeof(gscale_rf0cfh) },
    { &flip_rf0cfh, sizeof(flip_rf0cfh) },
    { &wg_rf0cfh, sizeof(wg_rf0cfh) },
    { &a_omegarf0cfh, sizeof(a_omegarf0cfh) },
    { &ia_omegarf0cfh, sizeof(ia_omegarf0cfh) },
    { &pw_omegarf0cfh, sizeof(pw_omegarf0cfh) },
    { &res_omegarf0cfh, sizeof(res_omegarf0cfh) },
    { &off_omegarf0cfh, sizeof(off_omegarf0cfh) },
    { &rfslot_omegarf0cfh, sizeof(rfslot_omegarf0cfh) },
    { &gscale_omegarf0cfh, sizeof(gscale_omegarf0cfh) },
    { &n_omegarf0cfh, sizeof(n_omegarf0cfh) },
    { &wg_omegarf0cfh, sizeof(wg_omegarf0cfh) },
    { &a_gyrf0kcfh, sizeof(a_gyrf0kcfh) },
    { &ia_gyrf0kcfh, sizeof(ia_gyrf0kcfh) },
    { &pw_gyrf0kcfha, sizeof(pw_gyrf0kcfha) },
    { &pw_gyrf0kcfhd, sizeof(pw_gyrf0kcfhd) },
    { &pw_gyrf0kcfh, sizeof(pw_gyrf0kcfh) },
    { &wg_gyrf0kcfh, sizeof(wg_gyrf0kcfh) },
    { &pw_zticfh, sizeof(pw_zticfh) },
    { &wg_zticfh, sizeof(wg_zticfh) },
    { &pw_rticfh, sizeof(pw_rticfh) },
    { &wg_rticfh, sizeof(wg_rticfh) },
    { &pw_xticfh, sizeof(pw_xticfh) },
    { &wg_xticfh, sizeof(wg_xticfh) },
    { &pw_yticfh, sizeof(pw_yticfh) },
    { &wg_yticfh, sizeof(wg_yticfh) },
    { &pw_sticfh, sizeof(pw_sticfh) },
    { &wg_sticfh, sizeof(wg_sticfh) },
    { &a_gzrf1cfh, sizeof(a_gzrf1cfh) },
    { &ia_gzrf1cfh, sizeof(ia_gzrf1cfh) },
    { &pw_gzrf1cfha, sizeof(pw_gzrf1cfha) },
    { &pw_gzrf1cfhd, sizeof(pw_gzrf1cfhd) },
    { &pw_gzrf1cfh, sizeof(pw_gzrf1cfh) },
    { &a_rf1cfh, sizeof(a_rf1cfh) },
    { &ia_rf1cfh, sizeof(ia_rf1cfh) },
    { &pw_rf1cfh, sizeof(pw_rf1cfh) },
    { &res_rf1cfh, sizeof(res_rf1cfh) },
    { &temp_res_rf1cfh, sizeof(temp_res_rf1cfh) },
    { &cyc_rf1cfh, sizeof(cyc_rf1cfh) },
    { &off_rf1cfh, sizeof(off_rf1cfh) },
    { &alpha_rf1cfh, sizeof(alpha_rf1cfh) },
    { &thk_rf1cfh, sizeof(thk_rf1cfh) },
    { &gscale_rf1cfh, sizeof(gscale_rf1cfh) },
    { &flip_rf1cfh, sizeof(flip_rf1cfh) },
    { &wg_rf1cfh, sizeof(wg_rf1cfh) },
    { &a_rf2cfh, sizeof(a_rf2cfh) },
    { &ia_rf2cfh, sizeof(ia_rf2cfh) },
    { &pw_rf2cfh, sizeof(pw_rf2cfh) },
    { &res_rf2cfh, sizeof(res_rf2cfh) },
    { &cyc_rf2cfh, sizeof(cyc_rf2cfh) },
    { &off_rf2cfh, sizeof(off_rf2cfh) },
    { &alpha_rf2cfh, sizeof(alpha_rf2cfh) },
    { &wg_rf2cfh, sizeof(wg_rf2cfh) },
    { &a_rf3cfh, sizeof(a_rf3cfh) },
    { &ia_rf3cfh, sizeof(ia_rf3cfh) },
    { &pw_rf3cfh, sizeof(pw_rf3cfh) },
    { &res_rf3cfh, sizeof(res_rf3cfh) },
    { &cyc_rf3cfh, sizeof(cyc_rf3cfh) },
    { &off_rf3cfh, sizeof(off_rf3cfh) },
    { &alpha_rf3cfh, sizeof(alpha_rf3cfh) },
    { &wg_rf3cfh, sizeof(wg_rf3cfh) },
    { &a_rf4cfh, sizeof(a_rf4cfh) },
    { &ia_rf4cfh, sizeof(ia_rf4cfh) },
    { &pw_rf4cfh, sizeof(pw_rf4cfh) },
    { &res_rf4cfh, sizeof(res_rf4cfh) },
    { &cyc_rf4cfh, sizeof(cyc_rf4cfh) },
    { &off_rf4cfh, sizeof(off_rf4cfh) },
    { &alpha_rf4cfh, sizeof(alpha_rf4cfh) },
    { &wg_rf4cfh, sizeof(wg_rf4cfh) },
    { &a_gxrf2cfh, sizeof(a_gxrf2cfh) },
    { &ia_gxrf2cfh, sizeof(ia_gxrf2cfh) },
    { &pw_gxrf2cfha, sizeof(pw_gxrf2cfha) },
    { &pw_gxrf2cfhd, sizeof(pw_gxrf2cfhd) },
    { &pw_gxrf2cfh, sizeof(pw_gxrf2cfh) },
    { &wg_gxrf2cfh, sizeof(wg_gxrf2cfh) },
    { &a_gyrf2cfh, sizeof(a_gyrf2cfh) },
    { &ia_gyrf2cfh, sizeof(ia_gyrf2cfh) },
    { &pw_gyrf2cfha, sizeof(pw_gyrf2cfha) },
    { &pw_gyrf2cfhd, sizeof(pw_gyrf2cfhd) },
    { &pw_gyrf2cfh, sizeof(pw_gyrf2cfh) },
    { &wg_gyrf2cfh, sizeof(wg_gyrf2cfh) },
    { &a_gzrf2lcfh, sizeof(a_gzrf2lcfh) },
    { &ia_gzrf2lcfh, sizeof(ia_gzrf2lcfh) },
    { &pw_gzrf2lcfha, sizeof(pw_gzrf2lcfha) },
    { &pw_gzrf2lcfhd, sizeof(pw_gzrf2lcfhd) },
    { &pw_gzrf2lcfh, sizeof(pw_gzrf2lcfh) },
    { &wg_gzrf2lcfh, sizeof(wg_gzrf2lcfh) },
    { &a_gzrf2rcfh, sizeof(a_gzrf2rcfh) },
    { &ia_gzrf2rcfh, sizeof(ia_gzrf2rcfh) },
    { &pw_gzrf2rcfha, sizeof(pw_gzrf2rcfha) },
    { &pw_gzrf2rcfhd, sizeof(pw_gzrf2rcfhd) },
    { &pw_gzrf2rcfh, sizeof(pw_gzrf2rcfh) },
    { &wg_gzrf2rcfh, sizeof(wg_gzrf2rcfh) },
    { &a_gyrf3cfh, sizeof(a_gyrf3cfh) },
    { &ia_gyrf3cfh, sizeof(ia_gyrf3cfh) },
    { &pw_gyrf3cfha, sizeof(pw_gyrf3cfha) },
    { &pw_gyrf3cfhd, sizeof(pw_gyrf3cfhd) },
    { &pw_gyrf3cfh, sizeof(pw_gyrf3cfh) },
    { &wg_gyrf3cfh, sizeof(wg_gyrf3cfh) },
    { &a_gzrf3lcfh, sizeof(a_gzrf3lcfh) },
    { &ia_gzrf3lcfh, sizeof(ia_gzrf3lcfh) },
    { &pw_gzrf3lcfha, sizeof(pw_gzrf3lcfha) },
    { &pw_gzrf3lcfhd, sizeof(pw_gzrf3lcfhd) },
    { &pw_gzrf3lcfh, sizeof(pw_gzrf3lcfh) },
    { &wg_gzrf3lcfh, sizeof(wg_gzrf3lcfh) },
    { &a_gzrf3rcfh, sizeof(a_gzrf3rcfh) },
    { &ia_gzrf3rcfh, sizeof(ia_gzrf3rcfh) },
    { &pw_gzrf3rcfha, sizeof(pw_gzrf3rcfha) },
    { &pw_gzrf3rcfhd, sizeof(pw_gzrf3rcfhd) },
    { &pw_gzrf3rcfh, sizeof(pw_gzrf3rcfh) },
    { &wg_gzrf3rcfh, sizeof(wg_gzrf3rcfh) },
    { &a_gy1cfh, sizeof(a_gy1cfh) },
    { &ia_gy1cfh, sizeof(ia_gy1cfh) },
    { &pw_gy1cfha, sizeof(pw_gy1cfha) },
    { &pw_gy1cfhd, sizeof(pw_gy1cfhd) },
    { &pw_gy1cfh, sizeof(pw_gy1cfh) },
    { &wg_gy1cfh, sizeof(wg_gy1cfh) },
    { &a_gx1cfh, sizeof(a_gx1cfh) },
    { &ia_gx1cfh, sizeof(ia_gx1cfh) },
    { &pw_gx1cfha, sizeof(pw_gx1cfha) },
    { &pw_gx1cfhd, sizeof(pw_gx1cfhd) },
    { &pw_gx1cfh, sizeof(pw_gx1cfh) },
    { &wg_gx1cfh, sizeof(wg_gx1cfh) },
    { &a_gzrf4cfh, sizeof(a_gzrf4cfh) },
    { &ia_gzrf4cfh, sizeof(ia_gzrf4cfh) },
    { &pw_gzrf4cfha, sizeof(pw_gzrf4cfha) },
    { &pw_gzrf4cfhd, sizeof(pw_gzrf4cfhd) },
    { &pw_gzrf4cfh, sizeof(pw_gzrf4cfh) },
    { &wg_gzrf4cfh, sizeof(wg_gzrf4cfh) },
    { &pw_isi_slice1, sizeof(pw_isi_slice1) },
    { &wg_isi_slice1, sizeof(wg_isi_slice1) },
    { &pw_rot_slice1, sizeof(pw_rot_slice1) },
    { &wg_rot_slice1, sizeof(wg_rot_slice1) },
    { &pw_isi_slice2, sizeof(pw_isi_slice2) },
    { &wg_isi_slice2, sizeof(wg_isi_slice2) },
    { &pw_rot_slice2, sizeof(pw_rot_slice2) },
    { &wg_rot_slice2, sizeof(wg_rot_slice2) },
    { &a_gzrf4lcfh, sizeof(a_gzrf4lcfh) },
    { &ia_gzrf4lcfh, sizeof(ia_gzrf4lcfh) },
    { &pw_gzrf4lcfha, sizeof(pw_gzrf4lcfha) },
    { &pw_gzrf4lcfhd, sizeof(pw_gzrf4lcfhd) },
    { &pw_gzrf4lcfh, sizeof(pw_gzrf4lcfh) },
    { &wg_gzrf4lcfh, sizeof(wg_gzrf4lcfh) },
    { &a_gzrf4rcfh, sizeof(a_gzrf4rcfh) },
    { &ia_gzrf4rcfh, sizeof(ia_gzrf4rcfh) },
    { &pw_gzrf4rcfha, sizeof(pw_gzrf4rcfha) },
    { &pw_gzrf4rcfhd, sizeof(pw_gzrf4rcfhd) },
    { &pw_gzrf4rcfh, sizeof(pw_gzrf4rcfh) },
    { &wg_gzrf4rcfh, sizeof(wg_gzrf4rcfh) },
    { &filter_cfh_fid, sizeof(filter_cfh_fid) },
    { &a_gykcfh, sizeof(a_gykcfh) },
    { &ia_gykcfh, sizeof(ia_gykcfh) },
    { &pw_gykcfha, sizeof(pw_gykcfha) },
    { &pw_gykcfhd, sizeof(pw_gykcfhd) },
    { &pw_gykcfh, sizeof(pw_gykcfh) },
    { &wg_gykcfh, sizeof(wg_gykcfh) },
    { &ia_contrfhubsel, sizeof(ia_contrfhubsel) },
    { &ia_contrfsel, sizeof(ia_contrfsel) },
    { &pw_csw_wait, sizeof(pw_csw_wait) },
    { &wg_csw_wait, sizeof(wg_csw_wait) },
    { &a_gzrf1ftg, sizeof(a_gzrf1ftg) },
    { &ia_gzrf1ftg, sizeof(ia_gzrf1ftg) },
    { &pw_gzrf1ftga, sizeof(pw_gzrf1ftga) },
    { &pw_gzrf1ftgd, sizeof(pw_gzrf1ftgd) },
    { &pw_gzrf1ftg, sizeof(pw_gzrf1ftg) },
    { &a_rf1ftg, sizeof(a_rf1ftg) },
    { &ia_rf1ftg, sizeof(ia_rf1ftg) },
    { &pw_rf1ftg, sizeof(pw_rf1ftg) },
    { &res_rf1ftg, sizeof(res_rf1ftg) },
    { &temp_res_rf1ftg, sizeof(temp_res_rf1ftg) },
    { &cyc_rf1ftg, sizeof(cyc_rf1ftg) },
    { &off_rf1ftg, sizeof(off_rf1ftg) },
    { &alpha_rf1ftg, sizeof(alpha_rf1ftg) },
    { &thk_rf1ftg, sizeof(thk_rf1ftg) },
    { &gscale_rf1ftg, sizeof(gscale_rf1ftg) },
    { &flip_rf1ftg, sizeof(flip_rf1ftg) },
    { &wg_rf1ftg, sizeof(wg_rf1ftg) },
    { &a_gz1ftg, sizeof(a_gz1ftg) },
    { &ia_gz1ftg, sizeof(ia_gz1ftg) },
    { &pw_gz1ftga, sizeof(pw_gz1ftga) },
    { &pw_gz1ftgd, sizeof(pw_gz1ftgd) },
    { &pw_gz1ftg, sizeof(pw_gz1ftg) },
    { &wg_gz1ftg, sizeof(wg_gz1ftg) },
    { &a_gzrf2ftg, sizeof(a_gzrf2ftg) },
    { &ia_gzrf2ftg, sizeof(ia_gzrf2ftg) },
    { &pw_gzrf2ftga, sizeof(pw_gzrf2ftga) },
    { &pw_gzrf2ftgd, sizeof(pw_gzrf2ftgd) },
    { &pw_gzrf2ftg, sizeof(pw_gzrf2ftg) },
    { &a_rf2ftg, sizeof(a_rf2ftg) },
    { &ia_rf2ftg, sizeof(ia_rf2ftg) },
    { &pw_rf2ftg, sizeof(pw_rf2ftg) },
    { &res_rf2ftg, sizeof(res_rf2ftg) },
    { &temp_res_rf2ftg, sizeof(temp_res_rf2ftg) },
    { &cyc_rf2ftg, sizeof(cyc_rf2ftg) },
    { &off_rf2ftg, sizeof(off_rf2ftg) },
    { &alpha_rf2ftg, sizeof(alpha_rf2ftg) },
    { &thk_rf2ftg, sizeof(thk_rf2ftg) },
    { &gscale_rf2ftg, sizeof(gscale_rf2ftg) },
    { &flip_rf2ftg, sizeof(flip_rf2ftg) },
    { &wg_rf2ftg, sizeof(wg_rf2ftg) },
    { &a_gz2ftg, sizeof(a_gz2ftg) },
    { &ia_gz2ftg, sizeof(ia_gz2ftg) },
    { &pw_gz2ftga, sizeof(pw_gz2ftga) },
    { &pw_gz2ftgd, sizeof(pw_gz2ftgd) },
    { &pw_gz2ftg, sizeof(pw_gz2ftg) },
    { &wg_gz2ftg, sizeof(wg_gz2ftg) },
    { &a_gzrf3ftg, sizeof(a_gzrf3ftg) },
    { &ia_gzrf3ftg, sizeof(ia_gzrf3ftg) },
    { &pw_gzrf3ftga, sizeof(pw_gzrf3ftga) },
    { &pw_gzrf3ftgd, sizeof(pw_gzrf3ftgd) },
    { &pw_gzrf3ftg, sizeof(pw_gzrf3ftg) },
    { &a_rf3ftg, sizeof(a_rf3ftg) },
    { &ia_rf3ftg, sizeof(ia_rf3ftg) },
    { &pw_rf3ftg, sizeof(pw_rf3ftg) },
    { &res_rf3ftg, sizeof(res_rf3ftg) },
    { &temp_res_rf3ftg, sizeof(temp_res_rf3ftg) },
    { &cyc_rf3ftg, sizeof(cyc_rf3ftg) },
    { &off_rf3ftg, sizeof(off_rf3ftg) },
    { &alpha_rf3ftg, sizeof(alpha_rf3ftg) },
    { &thk_rf3ftg, sizeof(thk_rf3ftg) },
    { &gscale_rf3ftg, sizeof(gscale_rf3ftg) },
    { &flip_rf3ftg, sizeof(flip_rf3ftg) },
    { &wg_rf3ftg, sizeof(wg_rf3ftg) },
    { &a_gz3ftg, sizeof(a_gz3ftg) },
    { &ia_gz3ftg, sizeof(ia_gz3ftg) },
    { &pw_gz3ftga, sizeof(pw_gz3ftga) },
    { &pw_gz3ftgd, sizeof(pw_gz3ftgd) },
    { &pw_gz3ftg, sizeof(pw_gz3ftg) },
    { &wg_gz3ftg, sizeof(wg_gz3ftg) },
    { &a_gx1ftg, sizeof(a_gx1ftg) },
    { &ia_gx1ftg, sizeof(ia_gx1ftg) },
    { &pw_gx1ftga, sizeof(pw_gx1ftga) },
    { &pw_gx1ftgd, sizeof(pw_gx1ftgd) },
    { &pw_gx1ftg, sizeof(pw_gx1ftg) },
    { &wg_gx1ftg, sizeof(wg_gx1ftg) },
    { &a_gx1bftg, sizeof(a_gx1bftg) },
    { &ia_gx1bftg, sizeof(ia_gx1bftg) },
    { &pw_gx1bftga, sizeof(pw_gx1bftga) },
    { &pw_gx1bftgd, sizeof(pw_gx1bftgd) },
    { &pw_gx1bftg, sizeof(pw_gx1bftg) },
    { &wg_gx1bftg, sizeof(wg_gx1bftg) },
    { &a_gxw1ftg, sizeof(a_gxw1ftg) },
    { &ia_gxw1ftg, sizeof(ia_gxw1ftg) },
    { &pw_gxw1ftga, sizeof(pw_gxw1ftga) },
    { &pw_gxw1ftgd, sizeof(pw_gxw1ftgd) },
    { &pw_gxw1ftg, sizeof(pw_gxw1ftg) },
    { &wg_gxw1ftg, sizeof(wg_gxw1ftg) },
    { &a_postgxw1ftg, sizeof(a_postgxw1ftg) },
    { &ia_postgxw1ftg, sizeof(ia_postgxw1ftg) },
    { &pw_postgxw1ftga, sizeof(pw_postgxw1ftga) },
    { &pw_postgxw1ftgd, sizeof(pw_postgxw1ftgd) },
    { &pw_postgxw1ftg, sizeof(pw_postgxw1ftg) },
    { &wg_postgxw1ftg, sizeof(wg_postgxw1ftg) },
    { &filter_echo1ftg, sizeof(filter_echo1ftg) },
    { &a_gz2bftg, sizeof(a_gz2bftg) },
    { &ia_gz2bftg, sizeof(ia_gz2bftg) },
    { &pw_gz2bftga, sizeof(pw_gz2bftga) },
    { &pw_gz2bftgd, sizeof(pw_gz2bftgd) },
    { &pw_gz2bftg, sizeof(pw_gz2bftg) },
    { &wg_gz2bftg, sizeof(wg_gz2bftg) },
    { &a_gx2ftg, sizeof(a_gx2ftg) },
    { &ia_gx2ftg, sizeof(ia_gx2ftg) },
    { &pw_gx2ftga, sizeof(pw_gx2ftga) },
    { &pw_gx2ftgd, sizeof(pw_gx2ftgd) },
    { &pw_gx2ftg, sizeof(pw_gx2ftg) },
    { &wg_gx2ftg, sizeof(wg_gx2ftg) },
    { &a_gxw2ftg, sizeof(a_gxw2ftg) },
    { &ia_gxw2ftg, sizeof(ia_gxw2ftg) },
    { &pw_gxw2ftga, sizeof(pw_gxw2ftga) },
    { &pw_gxw2ftgd, sizeof(pw_gxw2ftgd) },
    { &pw_gxw2ftg, sizeof(pw_gxw2ftg) },
    { &wg_gxw2ftg, sizeof(wg_gxw2ftg) },
    { &a_gx2test, sizeof(a_gx2test) },
    { &ia_gx2test, sizeof(ia_gx2test) },
    { &pw_gx2testa, sizeof(pw_gx2testa) },
    { &pw_gx2testd, sizeof(pw_gx2testd) },
    { &pw_gx2test, sizeof(pw_gx2test) },
    { &wg_gx2test, sizeof(wg_gx2test) },
    { &filter_echo2ftg, sizeof(filter_echo2ftg) },
    { &a_rf1xtg, sizeof(a_rf1xtg) },
    { &ia_rf1xtg, sizeof(ia_rf1xtg) },
    { &pw_rf1xtg, sizeof(pw_rf1xtg) },
    { &res_rf1xtg, sizeof(res_rf1xtg) },
    { &cyc_rf1xtg, sizeof(cyc_rf1xtg) },
    { &off_rf1xtg, sizeof(off_rf1xtg) },
    { &alpha_rf1xtg, sizeof(alpha_rf1xtg) },
    { &wg_rf1xtg, sizeof(wg_rf1xtg) },
    { &a_gyrf1xtg, sizeof(a_gyrf1xtg) },
    { &ia_gyrf1xtg, sizeof(ia_gyrf1xtg) },
    { &pw_gyrf1xtga, sizeof(pw_gyrf1xtga) },
    { &pw_gyrf1xtgd, sizeof(pw_gyrf1xtgd) },
    { &pw_gyrf1xtg, sizeof(pw_gyrf1xtg) },
    { &wg_gyrf1xtg, sizeof(wg_gyrf1xtg) },
    { &a_gzrf1xtg, sizeof(a_gzrf1xtg) },
    { &ia_gzrf1xtg, sizeof(ia_gzrf1xtg) },
    { &pw_gzrf1xtga, sizeof(pw_gzrf1xtga) },
    { &pw_gzrf1xtgd, sizeof(pw_gzrf1xtgd) },
    { &pw_gzrf1xtg, sizeof(pw_gzrf1xtg) },
    { &wg_gzrf1xtg, sizeof(wg_gzrf1xtg) },
    { &a_gykxtgl, sizeof(a_gykxtgl) },
    { &ia_gykxtgl, sizeof(ia_gykxtgl) },
    { &pw_gykxtgla, sizeof(pw_gykxtgla) },
    { &pw_gykxtgld, sizeof(pw_gykxtgld) },
    { &pw_gykxtgl, sizeof(pw_gykxtgl) },
    { &wg_gykxtgl, sizeof(wg_gykxtgl) },
    { &a_rf3xtg, sizeof(a_rf3xtg) },
    { &ia_rf3xtg, sizeof(ia_rf3xtg) },
    { &pw_rf3xtg, sizeof(pw_rf3xtg) },
    { &res_rf3xtg, sizeof(res_rf3xtg) },
    { &off_rf3xtg, sizeof(off_rf3xtg) },
    { &alpha_rf3xtg, sizeof(alpha_rf3xtg) },
    { &gscale_rf3xtg, sizeof(gscale_rf3xtg) },
    { &flip_rf3xtg, sizeof(flip_rf3xtg) },
    { &ia_phs_rf3xtg, sizeof(ia_phs_rf3xtg) },
    { &wg_rf3xtg, sizeof(wg_rf3xtg) },
    { &a_gz1xtg, sizeof(a_gz1xtg) },
    { &ia_gz1xtg, sizeof(ia_gz1xtg) },
    { &pw_gz1xtga, sizeof(pw_gz1xtga) },
    { &pw_gz1xtgd, sizeof(pw_gz1xtgd) },
    { &pw_gz1xtg, sizeof(pw_gz1xtg) },
    { &wg_gz1xtg, sizeof(wg_gz1xtg) },
    { &a_gzrf2xtg, sizeof(a_gzrf2xtg) },
    { &ia_gzrf2xtg, sizeof(ia_gzrf2xtg) },
    { &pw_gzrf2xtga, sizeof(pw_gzrf2xtga) },
    { &pw_gzrf2xtgd, sizeof(pw_gzrf2xtgd) },
    { &pw_gzrf2xtg, sizeof(pw_gzrf2xtg) },
    { &a_rf2xtg, sizeof(a_rf2xtg) },
    { &ia_rf2xtg, sizeof(ia_rf2xtg) },
    { &pw_rf2xtg, sizeof(pw_rf2xtg) },
    { &res_rf2xtg, sizeof(res_rf2xtg) },
    { &temp_res_rf2xtg, sizeof(temp_res_rf2xtg) },
    { &cyc_rf2xtg, sizeof(cyc_rf2xtg) },
    { &off_rf2xtg, sizeof(off_rf2xtg) },
    { &alpha_rf2xtg, sizeof(alpha_rf2xtg) },
    { &thk_rf2xtg, sizeof(thk_rf2xtg) },
    { &gscale_rf2xtg, sizeof(gscale_rf2xtg) },
    { &flip_rf2xtg, sizeof(flip_rf2xtg) },
    { &wg_rf2xtg, sizeof(wg_rf2xtg) },
    { &a_gz2xtg, sizeof(a_gz2xtg) },
    { &ia_gz2xtg, sizeof(ia_gz2xtg) },
    { &pw_gz2xtga, sizeof(pw_gz2xtga) },
    { &pw_gz2xtgd, sizeof(pw_gz2xtgd) },
    { &pw_gz2xtg, sizeof(pw_gz2xtg) },
    { &wg_gz2xtg, sizeof(wg_gz2xtg) },
    { &a_rf4xtg, sizeof(a_rf4xtg) },
    { &ia_rf4xtg, sizeof(ia_rf4xtg) },
    { &pw_rf4xtg, sizeof(pw_rf4xtg) },
    { &res_rf4xtg, sizeof(res_rf4xtg) },
    { &off_rf4xtg, sizeof(off_rf4xtg) },
    { &alpha_rf4xtg, sizeof(alpha_rf4xtg) },
    { &gscale_rf4xtg, sizeof(gscale_rf4xtg) },
    { &flip_rf4xtg, sizeof(flip_rf4xtg) },
    { &ia_phs_rf4xtg, sizeof(ia_phs_rf4xtg) },
    { &wg_rf4xtg, sizeof(wg_rf4xtg) },
    { &a_gykxtgr, sizeof(a_gykxtgr) },
    { &ia_gykxtgr, sizeof(ia_gykxtgr) },
    { &pw_gykxtgra, sizeof(pw_gykxtgra) },
    { &pw_gykxtgrd, sizeof(pw_gykxtgrd) },
    { &pw_gykxtgr, sizeof(pw_gykxtgr) },
    { &wg_gykxtgr, sizeof(wg_gykxtgr) },
    { &a_gx1bxtg, sizeof(a_gx1bxtg) },
    { &ia_gx1bxtg, sizeof(ia_gx1bxtg) },
    { &pw_gx1bxtga, sizeof(pw_gx1bxtga) },
    { &pw_gx1bxtgd, sizeof(pw_gx1bxtgd) },
    { &pw_gx1bxtg, sizeof(pw_gx1bxtg) },
    { &wg_gx1bxtg, sizeof(wg_gx1bxtg) },
    { &a_gxw1xtg, sizeof(a_gxw1xtg) },
    { &ia_gxw1xtg, sizeof(ia_gxw1xtg) },
    { &pw_gxw1xtga, sizeof(pw_gxw1xtga) },
    { &pw_gxw1xtgd, sizeof(pw_gxw1xtgd) },
    { &pw_gxw1xtg, sizeof(pw_gxw1xtg) },
    { &wg_gxw1xtg, sizeof(wg_gxw1xtg) },
    { &filter_echo1xtg, sizeof(filter_echo1xtg) },
    { &a_gzrf1as, sizeof(a_gzrf1as) },
    { &ia_gzrf1as, sizeof(ia_gzrf1as) },
    { &pw_gzrf1asa, sizeof(pw_gzrf1asa) },
    { &pw_gzrf1asd, sizeof(pw_gzrf1asd) },
    { &pw_gzrf1as, sizeof(pw_gzrf1as) },
    { &a_rf1as, sizeof(a_rf1as) },
    { &ia_rf1as, sizeof(ia_rf1as) },
    { &pw_rf1as, sizeof(pw_rf1as) },
    { &res_rf1as, sizeof(res_rf1as) },
    { &temp_res_rf1as, sizeof(temp_res_rf1as) },
    { &cyc_rf1as, sizeof(cyc_rf1as) },
    { &off_rf1as, sizeof(off_rf1as) },
    { &alpha_rf1as, sizeof(alpha_rf1as) },
    { &thk_rf1as, sizeof(thk_rf1as) },
    { &gscale_rf1as, sizeof(gscale_rf1as) },
    { &flip_rf1as, sizeof(flip_rf1as) },
    { &wg_rf1as, sizeof(wg_rf1as) },
    { &a_gz1as, sizeof(a_gz1as) },
    { &ia_gz1as, sizeof(ia_gz1as) },
    { &pw_gz1asa, sizeof(pw_gz1asa) },
    { &pw_gz1asd, sizeof(pw_gz1asd) },
    { &pw_gz1as, sizeof(pw_gz1as) },
    { &wg_gz1as, sizeof(wg_gz1as) },
    { &a_gxwas, sizeof(a_gxwas) },
    { &ia_gxwas, sizeof(ia_gxwas) },
    { &pw_gxwasa, sizeof(pw_gxwasa) },
    { &pw_gxwasd, sizeof(pw_gxwasd) },
    { &pw_gxwas, sizeof(pw_gxwas) },
    { &wg_gxwas, sizeof(wg_gxwas) },
    { &filter_echo1as, sizeof(filter_echo1as) },
    { &a_gx1as, sizeof(a_gx1as) },
    { &ia_gx1as, sizeof(ia_gx1as) },
    { &pw_gx1asa, sizeof(pw_gx1asa) },
    { &pw_gx1asd, sizeof(pw_gx1asd) },
    { &pw_gx1as, sizeof(pw_gx1as) },
    { &wg_gx1as, sizeof(wg_gx1as) },
    { &a_gy1as, sizeof(a_gy1as) },
    { &a_gy1asa, sizeof(a_gy1asa) },
    { &a_gy1asb, sizeof(a_gy1asb) },
    { &ia_gy1as, sizeof(ia_gy1as) },
    { &ia_gy1aswa, sizeof(ia_gy1aswa) },
    { &ia_gy1aswb, sizeof(ia_gy1aswb) },
    { &pw_gy1asa, sizeof(pw_gy1asa) },
    { &pw_gy1asd, sizeof(pw_gy1asd) },
    { &pw_gy1as, sizeof(pw_gy1as) },
    { &wg_gy1as, sizeof(wg_gy1as) },
    { &a_gy1ras, sizeof(a_gy1ras) },
    { &a_gy1rasa, sizeof(a_gy1rasa) },
    { &a_gy1rasb, sizeof(a_gy1rasb) },
    { &ia_gy1ras, sizeof(ia_gy1ras) },
    { &ia_gy1raswa, sizeof(ia_gy1raswa) },
    { &ia_gy1raswb, sizeof(ia_gy1raswb) },
    { &pw_gy1rasa, sizeof(pw_gy1rasa) },
    { &pw_gy1rasd, sizeof(pw_gy1rasd) },
    { &pw_gy1ras, sizeof(pw_gy1ras) },
    { &wg_gy1ras, sizeof(wg_gy1ras) },
    { &a_gxkas, sizeof(a_gxkas) },
    { &ia_gxkas, sizeof(ia_gxkas) },
    { &pw_gxkasa, sizeof(pw_gxkasa) },
    { &pw_gxkasd, sizeof(pw_gxkasd) },
    { &pw_gxkas, sizeof(pw_gxkas) },
    { &wg_gxkas, sizeof(wg_gxkas) },
    { &a_gzkas, sizeof(a_gzkas) },
    { &ia_gzkas, sizeof(ia_gzkas) },
    { &pw_gzkasa, sizeof(pw_gzkasa) },
    { &pw_gzkasd, sizeof(pw_gzkasd) },
    { &pw_gzkas, sizeof(pw_gzkas) },
    { &wg_gzkas, sizeof(wg_gzkas) },
    { &a_xdixon, sizeof(a_xdixon) },
    { &ia_xdixon, sizeof(ia_xdixon) },
    { &pw_xdixon, sizeof(pw_xdixon) },
    { &wg_xdixon, sizeof(wg_xdixon) },
    { &a_ydixon, sizeof(a_ydixon) },
    { &ia_ydixon, sizeof(ia_ydixon) },
    { &pw_ydixon, sizeof(pw_ydixon) },
    { &wg_ydixon, sizeof(wg_ydixon) },
    { &a_zdixon, sizeof(a_zdixon) },
    { &ia_zdixon, sizeof(ia_zdixon) },
    { &pw_zdixon, sizeof(pw_zdixon) },
    { &wg_zdixon, sizeof(wg_zdixon) },
    { &a_sdixon, sizeof(a_sdixon) },
    { &ia_sdixon, sizeof(ia_sdixon) },
    { &pw_sdixon, sizeof(pw_sdixon) },
    { &wg_sdixon, sizeof(wg_sdixon) },
    { &a_sdixon2, sizeof(a_sdixon2) },
    { &ia_sdixon2, sizeof(ia_sdixon2) },
    { &pw_sdixon2, sizeof(pw_sdixon2) },
    { &wg_sdixon2, sizeof(wg_sdixon2) },
    { &ia_dDDIQ, sizeof(ia_dDDIQ) },
    { &res_rf1rs, sizeof(res_rf1rs) },
    { &wg_rf1rs, sizeof(wg_rf1rs) },
    { &a_gzrf1rs, sizeof(a_gzrf1rs) },
    { &ia_gzrf1rs, sizeof(ia_gzrf1rs) },
    { &pw_gzrf1rsa, sizeof(pw_gzrf1rsa) },
    { &pw_gzrf1rsd, sizeof(pw_gzrf1rsd) },
    { &pw_gzrf1rs, sizeof(pw_gzrf1rs) },
    { &wg_gzrf1rs, sizeof(wg_gzrf1rs) },
    { &a_gxkbsrs, sizeof(a_gxkbsrs) },
    { &ia_gxkbsrs, sizeof(ia_gxkbsrs) },
    { &pw_gxkbsrsa, sizeof(pw_gxkbsrsa) },
    { &pw_gxkbsrsd, sizeof(pw_gxkbsrsd) },
    { &pw_gxkbsrs, sizeof(pw_gxkbsrs) },
    { &wg_gxkbsrs, sizeof(wg_gxkbsrs) },
    { &a_gz1rs, sizeof(a_gz1rs) },
    { &ia_gz1rs, sizeof(ia_gz1rs) },
    { &pw_gz1rsa, sizeof(pw_gz1rsa) },
    { &pw_gz1rsd, sizeof(pw_gz1rsd) },
    { &pw_gz1rs, sizeof(pw_gz1rs) },
    { &wg_gz1rs, sizeof(wg_gz1rs) },
    { &a_rfbrs, sizeof(a_rfbrs) },
    { &ia_rfbrs, sizeof(ia_rfbrs) },
    { &pw_rfbrs, sizeof(pw_rfbrs) },
    { &res_rfbrs, sizeof(res_rfbrs) },
    { &off_rfbrs, sizeof(off_rfbrs) },
    { &rfslot_rfbrs, sizeof(rfslot_rfbrs) },
    { &gscale_rfbrs, sizeof(gscale_rfbrs) },
    { &n_rfbrs, sizeof(n_rfbrs) },
    { &wg_rfbrs, sizeof(wg_rfbrs) },
    { &a_thetarfbrs, sizeof(a_thetarfbrs) },
    { &ia_thetarfbrs, sizeof(ia_thetarfbrs) },
    { &pw_thetarfbrs, sizeof(pw_thetarfbrs) },
    { &res_thetarfbrs, sizeof(res_thetarfbrs) },
    { &off_thetarfbrs, sizeof(off_thetarfbrs) },
    { &rfslot_thetarfbrs, sizeof(rfslot_thetarfbrs) },
    { &gscale_thetarfbrs, sizeof(gscale_thetarfbrs) },
    { &n_thetarfbrs, sizeof(n_thetarfbrs) },
    { &wg_thetarfbrs, sizeof(wg_thetarfbrs) },
    { &a_gzkbsrs, sizeof(a_gzkbsrs) },
    { &ia_gzkbsrs, sizeof(ia_gzkbsrs) },
    { &pw_gzkbsrsa, sizeof(pw_gzkbsrsa) },
    { &pw_gzkbsrsd, sizeof(pw_gzkbsrsd) },
    { &pw_gzkbsrs, sizeof(pw_gzkbsrs) },
    { &wg_gzkbsrs, sizeof(wg_gzkbsrs) },
    { &a_gxwrs, sizeof(a_gxwrs) },
    { &ia_gxwrs, sizeof(ia_gxwrs) },
    { &pw_gxwrsa, sizeof(pw_gxwrsa) },
    { &pw_gxwrsd, sizeof(pw_gxwrsd) },
    { &pw_gxwrs, sizeof(pw_gxwrs) },
    { &wg_gxwrs, sizeof(wg_gxwrs) },
    { &filter_echo1rs, sizeof(filter_echo1rs) },
    { &a_gx2rs, sizeof(a_gx2rs) },
    { &ia_gx2rs, sizeof(ia_gx2rs) },
    { &pw_gx2rsa, sizeof(pw_gx2rsa) },
    { &pw_gx2rsd, sizeof(pw_gx2rsd) },
    { &pw_gx2rs, sizeof(pw_gx2rs) },
    { &wg_gx2rs, sizeof(wg_gx2rs) },
    { &a_gy2rs, sizeof(a_gy2rs) },
    { &a_gy2rsa, sizeof(a_gy2rsa) },
    { &a_gy2rsb, sizeof(a_gy2rsb) },
    { &ia_gy2rs, sizeof(ia_gy2rs) },
    { &ia_gy2rswa, sizeof(ia_gy2rswa) },
    { &ia_gy2rswb, sizeof(ia_gy2rswb) },
    { &pw_gy2rsa, sizeof(pw_gy2rsa) },
    { &pw_gy2rsd, sizeof(pw_gy2rsd) },
    { &pw_gy2rs, sizeof(pw_gy2rs) },
    { &wg_gy2rs, sizeof(wg_gy2rs) },
    { &a_gxw2rs, sizeof(a_gxw2rs) },
    { &ia_gxw2rs, sizeof(ia_gxw2rs) },
    { &pw_gxw2rsa, sizeof(pw_gxw2rsa) },
    { &pw_gxw2rsd, sizeof(pw_gxw2rsd) },
    { &pw_gxw2rs, sizeof(pw_gxw2rs) },
    { &wg_gxw2rs, sizeof(wg_gxw2rs) },
    { &a_gx1rs, sizeof(a_gx1rs) },
    { &ia_gx1rs, sizeof(ia_gx1rs) },
    { &pw_gx1rsa, sizeof(pw_gx1rsa) },
    { &pw_gx1rsd, sizeof(pw_gx1rsd) },
    { &pw_gx1rs, sizeof(pw_gx1rs) },
    { &wg_gx1rs, sizeof(wg_gx1rs) },
    { &a_gy1rrs, sizeof(a_gy1rrs) },
    { &a_gy1rrsa, sizeof(a_gy1rrsa) },
    { &a_gy1rrsb, sizeof(a_gy1rrsb) },
    { &ia_gy1rrs, sizeof(ia_gy1rrs) },
    { &ia_gy1rrswa, sizeof(ia_gy1rrswa) },
    { &ia_gy1rrswb, sizeof(ia_gy1rrswb) },
    { &pw_gy1rrsa, sizeof(pw_gy1rrsa) },
    { &pw_gy1rrsd, sizeof(pw_gy1rrsd) },
    { &pw_gy1rrs, sizeof(pw_gy1rrs) },
    { &wg_gy1rrs, sizeof(wg_gy1rrs) },
    { &a_gy1rs, sizeof(a_gy1rs) },
    { &a_gy1rsa, sizeof(a_gy1rsa) },
    { &a_gy1rsb, sizeof(a_gy1rsb) },
    { &ia_gy1rs, sizeof(ia_gy1rs) },
    { &ia_gy1rswa, sizeof(ia_gy1rswa) },
    { &ia_gy1rswb, sizeof(ia_gy1rswb) },
    { &pw_gy1rsa, sizeof(pw_gy1rsa) },
    { &pw_gy1rsd, sizeof(pw_gy1rsd) },
    { &pw_gy1rs, sizeof(pw_gy1rs) },
    { &wg_gy1rs, sizeof(wg_gy1rs) },
    { &a_gzkrs, sizeof(a_gzkrs) },
    { &ia_gzkrs, sizeof(ia_gzkrs) },
    { &pw_gzkrsa, sizeof(pw_gzkrsa) },
    { &pw_gzkrsd, sizeof(pw_gzkrsd) },
    { &pw_gzkrs, sizeof(pw_gzkrs) },
    { &wg_gzkrs, sizeof(wg_gzkrs) },
    { &a_gxkrs, sizeof(a_gxkrs) },
    { &ia_gxkrs, sizeof(ia_gxkrs) },
    { &pw_gxkrsa, sizeof(pw_gxkrsa) },
    { &pw_gxkrsd, sizeof(pw_gxkrsd) },
    { &pw_gxkrs, sizeof(pw_gxkrs) },
    { &wg_gxkrs, sizeof(wg_gxkrs) },
    { &res_rf1dtg, sizeof(res_rf1dtg) },
    { &wg_rf1dtg, sizeof(wg_rf1dtg) },
    { &a_gzrf1dtg, sizeof(a_gzrf1dtg) },
    { &ia_gzrf1dtg, sizeof(ia_gzrf1dtg) },
    { &pw_gzrf1dtga, sizeof(pw_gzrf1dtga) },
    { &pw_gzrf1dtgd, sizeof(pw_gzrf1dtgd) },
    { &pw_gzrf1dtg, sizeof(pw_gzrf1dtg) },
    { &wg_gzrf1dtg, sizeof(wg_gzrf1dtg) },
    { &a_gxkbsdtg, sizeof(a_gxkbsdtg) },
    { &ia_gxkbsdtg, sizeof(ia_gxkbsdtg) },
    { &pw_gxkbsdtga, sizeof(pw_gxkbsdtga) },
    { &pw_gxkbsdtgd, sizeof(pw_gxkbsdtgd) },
    { &pw_gxkbsdtg, sizeof(pw_gxkbsdtg) },
    { &wg_gxkbsdtg, sizeof(wg_gxkbsdtg) },
    { &a_gz1dtg, sizeof(a_gz1dtg) },
    { &ia_gz1dtg, sizeof(ia_gz1dtg) },
    { &pw_gz1dtga, sizeof(pw_gz1dtga) },
    { &pw_gz1dtgd, sizeof(pw_gz1dtgd) },
    { &pw_gz1dtg, sizeof(pw_gz1dtg) },
    { &wg_gz1dtg, sizeof(wg_gz1dtg) },
    { &a_rfbdtg, sizeof(a_rfbdtg) },
    { &ia_rfbdtg, sizeof(ia_rfbdtg) },
    { &pw_rfbdtg, sizeof(pw_rfbdtg) },
    { &res_rfbdtg, sizeof(res_rfbdtg) },
    { &off_rfbdtg, sizeof(off_rfbdtg) },
    { &rfslot_rfbdtg, sizeof(rfslot_rfbdtg) },
    { &gscale_rfbdtg, sizeof(gscale_rfbdtg) },
    { &n_rfbdtg, sizeof(n_rfbdtg) },
    { &wg_rfbdtg, sizeof(wg_rfbdtg) },
    { &a_thetarfbdtg, sizeof(a_thetarfbdtg) },
    { &ia_thetarfbdtg, sizeof(ia_thetarfbdtg) },
    { &pw_thetarfbdtg, sizeof(pw_thetarfbdtg) },
    { &res_thetarfbdtg, sizeof(res_thetarfbdtg) },
    { &off_thetarfbdtg, sizeof(off_thetarfbdtg) },
    { &rfslot_thetarfbdtg, sizeof(rfslot_thetarfbdtg) },
    { &gscale_thetarfbdtg, sizeof(gscale_thetarfbdtg) },
    { &n_thetarfbdtg, sizeof(n_thetarfbdtg) },
    { &wg_thetarfbdtg, sizeof(wg_thetarfbdtg) },
    { &a_gzkbsdtg, sizeof(a_gzkbsdtg) },
    { &ia_gzkbsdtg, sizeof(ia_gzkbsdtg) },
    { &pw_gzkbsdtga, sizeof(pw_gzkbsdtga) },
    { &pw_gzkbsdtgd, sizeof(pw_gzkbsdtgd) },
    { &pw_gzkbsdtg, sizeof(pw_gzkbsdtg) },
    { &wg_gzkbsdtg, sizeof(wg_gzkbsdtg) },
    { &a_gxwdtg, sizeof(a_gxwdtg) },
    { &ia_gxwdtg, sizeof(ia_gxwdtg) },
    { &pw_gxwdtga, sizeof(pw_gxwdtga) },
    { &pw_gxwdtgd, sizeof(pw_gxwdtgd) },
    { &pw_gxwdtg, sizeof(pw_gxwdtg) },
    { &wg_gxwdtg, sizeof(wg_gxwdtg) },
    { &filter_echo1dtg, sizeof(filter_echo1dtg) },
    { &a_gx2dtg, sizeof(a_gx2dtg) },
    { &ia_gx2dtg, sizeof(ia_gx2dtg) },
    { &pw_gx2dtga, sizeof(pw_gx2dtga) },
    { &pw_gx2dtgd, sizeof(pw_gx2dtgd) },
    { &pw_gx2dtg, sizeof(pw_gx2dtg) },
    { &wg_gx2dtg, sizeof(wg_gx2dtg) },
    { &a_gy2dtg, sizeof(a_gy2dtg) },
    { &a_gy2dtga, sizeof(a_gy2dtga) },
    { &a_gy2dtgb, sizeof(a_gy2dtgb) },
    { &ia_gy2dtg, sizeof(ia_gy2dtg) },
    { &ia_gy2dtgwa, sizeof(ia_gy2dtgwa) },
    { &ia_gy2dtgwb, sizeof(ia_gy2dtgwb) },
    { &pw_gy2dtga, sizeof(pw_gy2dtga) },
    { &pw_gy2dtgd, sizeof(pw_gy2dtgd) },
    { &pw_gy2dtg, sizeof(pw_gy2dtg) },
    { &wg_gy2dtg, sizeof(wg_gy2dtg) },
    { &a_gxw2dtg, sizeof(a_gxw2dtg) },
    { &ia_gxw2dtg, sizeof(ia_gxw2dtg) },
    { &pw_gxw2dtga, sizeof(pw_gxw2dtga) },
    { &pw_gxw2dtgd, sizeof(pw_gxw2dtgd) },
    { &pw_gxw2dtg, sizeof(pw_gxw2dtg) },
    { &wg_gxw2dtg, sizeof(wg_gxw2dtg) },
    { &a_gx1dtg, sizeof(a_gx1dtg) },
    { &ia_gx1dtg, sizeof(ia_gx1dtg) },
    { &pw_gx1dtga, sizeof(pw_gx1dtga) },
    { &pw_gx1dtgd, sizeof(pw_gx1dtgd) },
    { &pw_gx1dtg, sizeof(pw_gx1dtg) },
    { &wg_gx1dtg, sizeof(wg_gx1dtg) },
    { &a_gy1rdtg, sizeof(a_gy1rdtg) },
    { &a_gy1rdtga, sizeof(a_gy1rdtga) },
    { &a_gy1rdtgb, sizeof(a_gy1rdtgb) },
    { &ia_gy1rdtg, sizeof(ia_gy1rdtg) },
    { &ia_gy1rdtgwa, sizeof(ia_gy1rdtgwa) },
    { &ia_gy1rdtgwb, sizeof(ia_gy1rdtgwb) },
    { &pw_gy1rdtga, sizeof(pw_gy1rdtga) },
    { &pw_gy1rdtgd, sizeof(pw_gy1rdtgd) },
    { &pw_gy1rdtg, sizeof(pw_gy1rdtg) },
    { &wg_gy1rdtg, sizeof(wg_gy1rdtg) },
    { &a_gy1dtg, sizeof(a_gy1dtg) },
    { &a_gy1dtga, sizeof(a_gy1dtga) },
    { &a_gy1dtgb, sizeof(a_gy1dtgb) },
    { &ia_gy1dtg, sizeof(ia_gy1dtg) },
    { &ia_gy1dtgwa, sizeof(ia_gy1dtgwa) },
    { &ia_gy1dtgwb, sizeof(ia_gy1dtgwb) },
    { &pw_gy1dtga, sizeof(pw_gy1dtga) },
    { &pw_gy1dtgd, sizeof(pw_gy1dtgd) },
    { &pw_gy1dtg, sizeof(pw_gy1dtg) },
    { &wg_gy1dtg, sizeof(wg_gy1dtg) },
    { &a_gzkdtg, sizeof(a_gzkdtg) },
    { &ia_gzkdtg, sizeof(ia_gzkdtg) },
    { &pw_gzkdtga, sizeof(pw_gzkdtga) },
    { &pw_gzkdtgd, sizeof(pw_gzkdtgd) },
    { &pw_gzkdtg, sizeof(pw_gzkdtg) },
    { &wg_gzkdtg, sizeof(wg_gzkdtg) },
    { &a_gxkdtg, sizeof(a_gxkdtg) },
    { &ia_gxkdtg, sizeof(ia_gxkdtg) },
    { &pw_gxkdtga, sizeof(pw_gxkdtga) },
    { &pw_gxkdtgd, sizeof(pw_gxkdtgd) },
    { &pw_gxkdtg, sizeof(pw_gxkdtg) },
    { &wg_gxkdtg, sizeof(wg_gxkdtg) },
    { &a_rf1cal, sizeof(a_rf1cal) },
    { &ia_rf1cal, sizeof(ia_rf1cal) },
    { &pw_rf1cal, sizeof(pw_rf1cal) },
    { &res_rf1cal, sizeof(res_rf1cal) },
    { &off_rf1cal, sizeof(off_rf1cal) },
    { &rfslot_rf1cal, sizeof(rfslot_rf1cal) },
    { &gscale_rf1cal, sizeof(gscale_rf1cal) },
    { &n_rf1cal, sizeof(n_rf1cal) },
    { &wg_rf1cal, sizeof(wg_rf1cal) },
    { &a_gzrf1cal, sizeof(a_gzrf1cal) },
    { &ia_gzrf1cal, sizeof(ia_gzrf1cal) },
    { &pw_gzrf1cala, sizeof(pw_gzrf1cala) },
    { &pw_gzrf1cald, sizeof(pw_gzrf1cald) },
    { &pw_gzrf1cal, sizeof(pw_gzrf1cal) },
    { &wg_gzrf1cal, sizeof(wg_gzrf1cal) },
    { &a_gzcombcal, sizeof(a_gzcombcal) },
    { &a_gzcombcala, sizeof(a_gzcombcala) },
    { &a_gzcombcalb, sizeof(a_gzcombcalb) },
    { &ia_gzcombcal, sizeof(ia_gzcombcal) },
    { &ia_gzcombcalwa, sizeof(ia_gzcombcalwa) },
    { &ia_gzcombcalwb, sizeof(ia_gzcombcalwb) },
    { &pw_gzcombcala, sizeof(pw_gzcombcala) },
    { &pw_gzcombcald, sizeof(pw_gzcombcald) },
    { &pw_gzcombcalf, sizeof(pw_gzcombcalf) },
    { &pw_gzcombcal, sizeof(pw_gzcombcal) },
    { &res_gzcombcal, sizeof(res_gzcombcal) },
    { &per_gzcombcal, sizeof(per_gzcombcal) },
    { &wg_gzcombcal, sizeof(wg_gzcombcal) },
    { &a_gzprcal, sizeof(a_gzprcal) },
    { &a_gzprcala, sizeof(a_gzprcala) },
    { &a_gzprcalb, sizeof(a_gzprcalb) },
    { &ia_gzprcal, sizeof(ia_gzprcal) },
    { &ia_gzprcalwa, sizeof(ia_gzprcalwa) },
    { &ia_gzprcalwb, sizeof(ia_gzprcalwb) },
    { &pw_gzprcala, sizeof(pw_gzprcala) },
    { &pw_gzprcald, sizeof(pw_gzprcald) },
    { &pw_gzprcalf, sizeof(pw_gzprcalf) },
    { &pw_gzprcal, sizeof(pw_gzprcal) },
    { &res_gzprcal, sizeof(res_gzprcal) },
    { &per_gzprcal, sizeof(per_gzprcal) },
    { &wg_gzprcal, sizeof(wg_gzprcal) },
    { &a_gxwcal, sizeof(a_gxwcal) },
    { &ia_gxwcal, sizeof(ia_gxwcal) },
    { &pw_gxwcala, sizeof(pw_gxwcala) },
    { &pw_gxwcald, sizeof(pw_gxwcald) },
    { &pw_gxwcal, sizeof(pw_gxwcal) },
    { &wg_gxwcal, sizeof(wg_gxwcal) },
    { &filter_echo1cal, sizeof(filter_echo1cal) },
    { &a_gx1cal, sizeof(a_gx1cal) },
    { &a_gx1cala, sizeof(a_gx1cala) },
    { &a_gx1calb, sizeof(a_gx1calb) },
    { &ia_gx1cal, sizeof(ia_gx1cal) },
    { &ia_gx1calwa, sizeof(ia_gx1calwa) },
    { &ia_gx1calwb, sizeof(ia_gx1calwb) },
    { &pw_gx1cala, sizeof(pw_gx1cala) },
    { &pw_gx1cald, sizeof(pw_gx1cald) },
    { &pw_gx1calf, sizeof(pw_gx1calf) },
    { &pw_gx1cal, sizeof(pw_gx1cal) },
    { &res_gx1cal, sizeof(res_gx1cal) },
    { &per_gx1cal, sizeof(per_gx1cal) },
    { &wg_gx1cal, sizeof(wg_gx1cal) },
    { &a_gy1cal, sizeof(a_gy1cal) },
    { &a_gy1cala, sizeof(a_gy1cala) },
    { &a_gy1calb, sizeof(a_gy1calb) },
    { &ia_gy1cal, sizeof(ia_gy1cal) },
    { &ia_gy1calwa, sizeof(ia_gy1calwa) },
    { &ia_gy1calwb, sizeof(ia_gy1calwb) },
    { &pw_gy1cala, sizeof(pw_gy1cala) },
    { &pw_gy1cald, sizeof(pw_gy1cald) },
    { &pw_gy1calf, sizeof(pw_gy1calf) },
    { &pw_gy1cal, sizeof(pw_gy1cal) },
    { &res_gy1cal, sizeof(res_gy1cal) },
    { &per_gy1cal, sizeof(per_gy1cal) },
    { &wg_gy1cal, sizeof(wg_gy1cal) },
    { &a_gy1rcal, sizeof(a_gy1rcal) },
    { &a_gy1rcala, sizeof(a_gy1rcala) },
    { &a_gy1rcalb, sizeof(a_gy1rcalb) },
    { &ia_gy1rcal, sizeof(ia_gy1rcal) },
    { &ia_gy1rcalwa, sizeof(ia_gy1rcalwa) },
    { &ia_gy1rcalwb, sizeof(ia_gy1rcalwb) },
    { &pw_gy1rcala, sizeof(pw_gy1rcala) },
    { &pw_gy1rcald, sizeof(pw_gy1rcald) },
    { &pw_gy1rcalf, sizeof(pw_gy1rcalf) },
    { &pw_gy1rcal, sizeof(pw_gy1rcal) },
    { &res_gy1rcal, sizeof(res_gy1rcal) },
    { &per_gy1rcal, sizeof(per_gy1rcal) },
    { &wg_gy1rcal, sizeof(wg_gy1rcal) },
    { &a_rf1coil, sizeof(a_rf1coil) },
    { &ia_rf1coil, sizeof(ia_rf1coil) },
    { &pw_rf1coil, sizeof(pw_rf1coil) },
    { &res_rf1coil, sizeof(res_rf1coil) },
    { &off_rf1coil, sizeof(off_rf1coil) },
    { &rfslot_rf1coil, sizeof(rfslot_rf1coil) },
    { &gscale_rf1coil, sizeof(gscale_rf1coil) },
    { &n_rf1coil, sizeof(n_rf1coil) },
    { &wg_rf1coil, sizeof(wg_rf1coil) },
    { &a_gzrf1coil, sizeof(a_gzrf1coil) },
    { &ia_gzrf1coil, sizeof(ia_gzrf1coil) },
    { &pw_gzrf1coila, sizeof(pw_gzrf1coila) },
    { &pw_gzrf1coild, sizeof(pw_gzrf1coild) },
    { &pw_gzrf1coil, sizeof(pw_gzrf1coil) },
    { &wg_gzrf1coil, sizeof(wg_gzrf1coil) },
    { &a_gzcombcoil, sizeof(a_gzcombcoil) },
    { &a_gzcombcoila, sizeof(a_gzcombcoila) },
    { &a_gzcombcoilb, sizeof(a_gzcombcoilb) },
    { &ia_gzcombcoil, sizeof(ia_gzcombcoil) },
    { &ia_gzcombcoilwa, sizeof(ia_gzcombcoilwa) },
    { &ia_gzcombcoilwb, sizeof(ia_gzcombcoilwb) },
    { &pw_gzcombcoila, sizeof(pw_gzcombcoila) },
    { &pw_gzcombcoild, sizeof(pw_gzcombcoild) },
    { &pw_gzcombcoilf, sizeof(pw_gzcombcoilf) },
    { &pw_gzcombcoil, sizeof(pw_gzcombcoil) },
    { &res_gzcombcoil, sizeof(res_gzcombcoil) },
    { &per_gzcombcoil, sizeof(per_gzcombcoil) },
    { &wg_gzcombcoil, sizeof(wg_gzcombcoil) },
    { &a_gzprcoil, sizeof(a_gzprcoil) },
    { &a_gzprcoila, sizeof(a_gzprcoila) },
    { &a_gzprcoilb, sizeof(a_gzprcoilb) },
    { &ia_gzprcoil, sizeof(ia_gzprcoil) },
    { &ia_gzprcoilwa, sizeof(ia_gzprcoilwa) },
    { &ia_gzprcoilwb, sizeof(ia_gzprcoilwb) },
    { &pw_gzprcoila, sizeof(pw_gzprcoila) },
    { &pw_gzprcoild, sizeof(pw_gzprcoild) },
    { &pw_gzprcoilf, sizeof(pw_gzprcoilf) },
    { &pw_gzprcoil, sizeof(pw_gzprcoil) },
    { &res_gzprcoil, sizeof(res_gzprcoil) },
    { &per_gzprcoil, sizeof(per_gzprcoil) },
    { &wg_gzprcoil, sizeof(wg_gzprcoil) },
    { &a_gxwcoil, sizeof(a_gxwcoil) },
    { &ia_gxwcoil, sizeof(ia_gxwcoil) },
    { &pw_gxwcoila, sizeof(pw_gxwcoila) },
    { &pw_gxwcoild, sizeof(pw_gxwcoild) },
    { &pw_gxwcoil, sizeof(pw_gxwcoil) },
    { &wg_gxwcoil, sizeof(wg_gxwcoil) },
    { &filter_echo1coil, sizeof(filter_echo1coil) },
    { &a_gx1coil, sizeof(a_gx1coil) },
    { &a_gx1coila, sizeof(a_gx1coila) },
    { &a_gx1coilb, sizeof(a_gx1coilb) },
    { &ia_gx1coil, sizeof(ia_gx1coil) },
    { &ia_gx1coilwa, sizeof(ia_gx1coilwa) },
    { &ia_gx1coilwb, sizeof(ia_gx1coilwb) },
    { &pw_gx1coila, sizeof(pw_gx1coila) },
    { &pw_gx1coild, sizeof(pw_gx1coild) },
    { &pw_gx1coilf, sizeof(pw_gx1coilf) },
    { &pw_gx1coil, sizeof(pw_gx1coil) },
    { &res_gx1coil, sizeof(res_gx1coil) },
    { &per_gx1coil, sizeof(per_gx1coil) },
    { &wg_gx1coil, sizeof(wg_gx1coil) },
    { &a_gy1coil, sizeof(a_gy1coil) },
    { &a_gy1coila, sizeof(a_gy1coila) },
    { &a_gy1coilb, sizeof(a_gy1coilb) },
    { &ia_gy1coil, sizeof(ia_gy1coil) },
    { &ia_gy1coilwa, sizeof(ia_gy1coilwa) },
    { &ia_gy1coilwb, sizeof(ia_gy1coilwb) },
    { &pw_gy1coila, sizeof(pw_gy1coila) },
    { &pw_gy1coild, sizeof(pw_gy1coild) },
    { &pw_gy1coilf, sizeof(pw_gy1coilf) },
    { &pw_gy1coil, sizeof(pw_gy1coil) },
    { &res_gy1coil, sizeof(res_gy1coil) },
    { &per_gy1coil, sizeof(per_gy1coil) },
    { &wg_gy1coil, sizeof(wg_gy1coil) },
    { &a_gy1rcoil, sizeof(a_gy1rcoil) },
    { &a_gy1rcoila, sizeof(a_gy1rcoila) },
    { &a_gy1rcoilb, sizeof(a_gy1rcoilb) },
    { &ia_gy1rcoil, sizeof(ia_gy1rcoil) },
    { &ia_gy1rcoilwa, sizeof(ia_gy1rcoilwa) },
    { &ia_gy1rcoilwb, sizeof(ia_gy1rcoilwb) },
    { &pw_gy1rcoila, sizeof(pw_gy1rcoila) },
    { &pw_gy1rcoild, sizeof(pw_gy1rcoild) },
    { &pw_gy1rcoilf, sizeof(pw_gy1rcoilf) },
    { &pw_gy1rcoil, sizeof(pw_gy1rcoil) },
    { &res_gy1rcoil, sizeof(res_gy1rcoil) },
    { &per_gy1rcoil, sizeof(per_gy1rcoil) },
    { &wg_gy1rcoil, sizeof(wg_gy1rcoil) },
    { &start_gycylra, sizeof(start_gycylra) },
    { &end_gycylra, sizeof(end_gycylra) },
    { &ia_stgycylra, sizeof(ia_stgycylra) },
    { &ia_endgycylra, sizeof(ia_endgycylra) },
    { &pw_gycylra, sizeof(pw_gycylra) },
    { &res_gycylra, sizeof(res_gycylra) },
    { &wg_gycylra, sizeof(wg_gycylra) },
    { &start_gzcylra, sizeof(start_gzcylra) },
    { &end_gzcylra, sizeof(end_gzcylra) },
    { &ia_stgzcylra, sizeof(ia_stgzcylra) },
    { &ia_endgzcylra, sizeof(ia_endgzcylra) },
    { &pw_gzcylra, sizeof(pw_gzcylra) },
    { &res_gzcylra, sizeof(res_gzcylra) },
    { &wg_gzcylra, sizeof(wg_gzcylra) },
    { &res_rfcylr, sizeof(res_rfcylr) },
    { &wg_rfcylr, sizeof(wg_rfcylr) },
    { &res_thcylr, sizeof(res_thcylr) },
    { &wg_thcylr, sizeof(wg_thcylr) },
    { &res_gycylr, sizeof(res_gycylr) },
    { &wg_gycylr, sizeof(wg_gycylr) },
    { &res_gzcylr, sizeof(res_gzcylr) },
    { &wg_gzcylr, sizeof(wg_gzcylr) },
    { &a_gzrf1mon, sizeof(a_gzrf1mon) },
    { &ia_gzrf1mon, sizeof(ia_gzrf1mon) },
    { &pw_gzrf1mona, sizeof(pw_gzrf1mona) },
    { &pw_gzrf1mond, sizeof(pw_gzrf1mond) },
    { &pw_gzrf1mon, sizeof(pw_gzrf1mon) },
    { &a_rf1mon, sizeof(a_rf1mon) },
    { &ia_rf1mon, sizeof(ia_rf1mon) },
    { &pw_rf1mon, sizeof(pw_rf1mon) },
    { &res_rf1mon, sizeof(res_rf1mon) },
    { &temp_res_rf1mon, sizeof(temp_res_rf1mon) },
    { &cyc_rf1mon, sizeof(cyc_rf1mon) },
    { &off_rf1mon, sizeof(off_rf1mon) },
    { &alpha_rf1mon, sizeof(alpha_rf1mon) },
    { &thk_rf1mon, sizeof(thk_rf1mon) },
    { &gscale_rf1mon, sizeof(gscale_rf1mon) },
    { &flip_rf1mon, sizeof(flip_rf1mon) },
    { &wg_rf1mon, sizeof(wg_rf1mon) },
    { &a_gyrf1mon, sizeof(a_gyrf1mon) },
    { &ia_gyrf1mon, sizeof(ia_gyrf1mon) },
    { &pw_gyrf1mona, sizeof(pw_gyrf1mona) },
    { &pw_gyrf1mond, sizeof(pw_gyrf1mond) },
    { &pw_gyrf1mon, sizeof(pw_gyrf1mon) },
    { &wg_gyrf1mon, sizeof(wg_gyrf1mon) },
    { &a_gz1mon, sizeof(a_gz1mon) },
    { &ia_gz1mon, sizeof(ia_gz1mon) },
    { &pw_gz1mona, sizeof(pw_gz1mona) },
    { &pw_gz1mond, sizeof(pw_gz1mond) },
    { &pw_gz1mon, sizeof(pw_gz1mon) },
    { &wg_gz1mon, sizeof(wg_gz1mon) },
    { &a_gy1mon, sizeof(a_gy1mon) },
    { &ia_gy1mon, sizeof(ia_gy1mon) },
    { &pw_gy1mona, sizeof(pw_gy1mona) },
    { &pw_gy1mond, sizeof(pw_gy1mond) },
    { &pw_gy1mon, sizeof(pw_gy1mon) },
    { &wg_gy1mon, sizeof(wg_gy1mon) },
    { &a_gyrf2mon, sizeof(a_gyrf2mon) },
    { &ia_gyrf2mon, sizeof(ia_gyrf2mon) },
    { &pw_gyrf2mona, sizeof(pw_gyrf2mona) },
    { &pw_gyrf2mond, sizeof(pw_gyrf2mond) },
    { &pw_gyrf2mon, sizeof(pw_gyrf2mon) },
    { &a_rf2mon, sizeof(a_rf2mon) },
    { &ia_rf2mon, sizeof(ia_rf2mon) },
    { &pw_rf2mon, sizeof(pw_rf2mon) },
    { &res_rf2mon, sizeof(res_rf2mon) },
    { &temp_res_rf2mon, sizeof(temp_res_rf2mon) },
    { &cyc_rf2mon, sizeof(cyc_rf2mon) },
    { &off_rf2mon, sizeof(off_rf2mon) },
    { &alpha_rf2mon, sizeof(alpha_rf2mon) },
    { &thk_rf2mon, sizeof(thk_rf2mon) },
    { &gscale_rf2mon, sizeof(gscale_rf2mon) },
    { &flip_rf2mon, sizeof(flip_rf2mon) },
    { &wg_rf2mon, sizeof(wg_rf2mon) },
    { &a_gyrf2lmon, sizeof(a_gyrf2lmon) },
    { &ia_gyrf2lmon, sizeof(ia_gyrf2lmon) },
    { &pw_gyrf2lmona, sizeof(pw_gyrf2lmona) },
    { &pw_gyrf2lmond, sizeof(pw_gyrf2lmond) },
    { &pw_gyrf2lmon, sizeof(pw_gyrf2lmon) },
    { &wg_gyrf2lmon, sizeof(wg_gyrf2lmon) },
    { &a_gyrf2rmon, sizeof(a_gyrf2rmon) },
    { &ia_gyrf2rmon, sizeof(ia_gyrf2rmon) },
    { &pw_gyrf2rmona, sizeof(pw_gyrf2rmona) },
    { &pw_gyrf2rmond, sizeof(pw_gyrf2rmond) },
    { &pw_gyrf2rmon, sizeof(pw_gyrf2rmon) },
    { &wg_gyrf2rmon, sizeof(wg_gyrf2rmon) },
    { &a_gxwmon, sizeof(a_gxwmon) },
    { &ia_gxwmon, sizeof(ia_gxwmon) },
    { &pw_gxwmona, sizeof(pw_gxwmona) },
    { &pw_gxwmond, sizeof(pw_gxwmond) },
    { &pw_gxwmon, sizeof(pw_gxwmon) },
    { &wg_gxwmon, sizeof(wg_gxwmon) },
    { &a_gx1mon, sizeof(a_gx1mon) },
    { &ia_gx1mon, sizeof(ia_gx1mon) },
    { &pw_gx1mona, sizeof(pw_gx1mona) },
    { &pw_gx1mond, sizeof(pw_gx1mond) },
    { &pw_gx1mon, sizeof(pw_gx1mon) },
    { &wg_gx1mon, sizeof(wg_gx1mon) },
    { &a_gxfcmon, sizeof(a_gxfcmon) },
    { &ia_gxfcmon, sizeof(ia_gxfcmon) },
    { &pw_gxfcmona, sizeof(pw_gxfcmona) },
    { &pw_gxfcmond, sizeof(pw_gxfcmond) },
    { &pw_gxfcmon, sizeof(pw_gxfcmon) },
    { &wg_gxfcmon, sizeof(wg_gxfcmon) },
    { &filter_echo1mon, sizeof(filter_echo1mon) },
    { &a_gzkmon, sizeof(a_gzkmon) },
    { &ia_gzkmon, sizeof(ia_gzkmon) },
    { &pw_gzkmona, sizeof(pw_gzkmona) },
    { &pw_gzkmond, sizeof(pw_gzkmond) },
    { &pw_gzkmon, sizeof(pw_gzkmon) },
    { &wg_gzkmon, sizeof(wg_gzkmon) },
    { &start_gycylratipup, sizeof(start_gycylratipup) },
    { &end_gycylratipup, sizeof(end_gycylratipup) },
    { &ia_stgycylratipup, sizeof(ia_stgycylratipup) },
    { &ia_endgycylratipup, sizeof(ia_endgycylratipup) },
    { &pw_gycylratipup, sizeof(pw_gycylratipup) },
    { &res_gycylratipup, sizeof(res_gycylratipup) },
    { &wg_gycylratipup, sizeof(wg_gycylratipup) },
    { &start_gzcylratipup, sizeof(start_gzcylratipup) },
    { &end_gzcylratipup, sizeof(end_gzcylratipup) },
    { &ia_stgzcylratipup, sizeof(ia_stgzcylratipup) },
    { &ia_endgzcylratipup, sizeof(ia_endgzcylratipup) },
    { &pw_gzcylratipup, sizeof(pw_gzcylratipup) },
    { &res_gzcylratipup, sizeof(res_gzcylratipup) },
    { &wg_gzcylratipup, sizeof(wg_gzcylratipup) },
    { &res_rfcylrtipup, sizeof(res_rfcylrtipup) },
    { &wg_rfcylrtipup, sizeof(wg_rfcylrtipup) },
    { &res_thcylrtipup, sizeof(res_thcylrtipup) },
    { &wg_thcylrtipup, sizeof(wg_thcylrtipup) },
    { &res_gycylrtipup, sizeof(res_gycylrtipup) },
    { &wg_gycylrtipup, sizeof(wg_gycylrtipup) },
    { &res_gzcylrtipup, sizeof(res_gzcylrtipup) },
    { &wg_gzcylrtipup, sizeof(wg_gzcylrtipup) },
    { &a_gyrfmontipup, sizeof(a_gyrfmontipup) },
    { &ia_gyrfmontipup, sizeof(ia_gyrfmontipup) },
    { &pw_gyrfmontipupa, sizeof(pw_gyrfmontipupa) },
    { &pw_gyrfmontipupd, sizeof(pw_gyrfmontipupd) },
    { &pw_gyrfmontipup, sizeof(pw_gyrfmontipup) },
    { &a_rfmontipup, sizeof(a_rfmontipup) },
    { &ia_rfmontipup, sizeof(ia_rfmontipup) },
    { &pw_rfmontipup, sizeof(pw_rfmontipup) },
    { &res_rfmontipup, sizeof(res_rfmontipup) },
    { &temp_res_rfmontipup, sizeof(temp_res_rfmontipup) },
    { &cyc_rfmontipup, sizeof(cyc_rfmontipup) },
    { &off_rfmontipup, sizeof(off_rfmontipup) },
    { &alpha_rfmontipup, sizeof(alpha_rfmontipup) },
    { &thk_rfmontipup, sizeof(thk_rfmontipup) },
    { &gscale_rfmontipup, sizeof(gscale_rfmontipup) },
    { &flip_rfmontipup, sizeof(flip_rfmontipup) },
    { &wg_rfmontipup, sizeof(wg_rfmontipup) },
    { &a_gzkmontipup, sizeof(a_gzkmontipup) },
    { &ia_gzkmontipup, sizeof(ia_gzkmontipup) },
    { &pw_gzkmontipupa, sizeof(pw_gzkmontipupa) },
    { &pw_gzkmontipupd, sizeof(pw_gzkmontipupd) },
    { &pw_gzkmontipup, sizeof(pw_gzkmontipup) },
    { &wg_gzkmontipup, sizeof(wg_gzkmontipup) },
    { &_lastcv, sizeof(_lastcv) },
    { &rsp_info, sizeof(rsp_info) },
    { &rsprot, sizeof(rsprot) },
    { &rsptrigger, sizeof(rsptrigger) },
    { &ipg_alloc_instr, sizeof(ipg_alloc_instr) },
    { &asrsp_info, sizeof(asrsp_info) },
    { &sat_rot_matrices, sizeof(sat_rot_matrices) },
    { &sat_rot_ex_indices, sizeof(sat_rot_ex_indices) },
    { &phygrd, sizeof(phygrd) },
    { &loggrd, sizeof(loggrd) },
    { &satloggrd, sizeof(satloggrd) },
    { &asloggrd, sizeof(asloggrd) },
    { &asscan_info, sizeof(asscan_info) },
    { &PSrot, sizeof(PSrot) },
    { &PSrot_mod, sizeof(PSrot_mod) },
    { &phase_off, sizeof(phase_off) },
    { &yres_phase, sizeof(yres_phase) },
    { &yoffs1, sizeof(yoffs1) },
    { &off_rfcsz_base, sizeof(off_rfcsz_base) },
    { &scan_info_base, sizeof(scan_info_base) },
    { &xyz_base, sizeof(xyz_base) },
    { &rsprot_base, sizeof(rsprot_base) },
    { &rtia_first_scan_flag, sizeof(rtia_first_scan_flag) },
    { &rsp_psc_info, sizeof(rsp_psc_info) },
    { &coilInfo_tgt, sizeof(coilInfo_tgt) },
    { &volRecCoilInfo_tgt, sizeof(volRecCoilInfo_tgt) },
    { &fullRecCoilInfo_tgt, sizeof(fullRecCoilInfo_tgt) },
    { &txCoilInfo_tgt, sizeof(txCoilInfo_tgt) },
    { &cframpdir_tgt, sizeof(cframpdir_tgt) },
    { &chksum_rampdir_tgt, sizeof(chksum_rampdir_tgt) },
    { &seqcfginfo, sizeof(seqcfginfo) },
    { &PSfreq_offset, sizeof(PSfreq_offset) },
    { &cfl_tdaq, sizeof(cfl_tdaq) },
    { &cfh_tdaq, sizeof(cfh_tdaq) },
    { &rcvn_tdaq, sizeof(rcvn_tdaq) },
    { &rsp_PSrot, sizeof(rsp_PSrot) },
    { &rsp_rcvnrot, sizeof(rsp_rcvnrot) },
    { &rsrsprot, sizeof(rsrsprot) },
    { &dtgrsprot, sizeof(dtgrsprot) },
    { &calrsprot, sizeof(calrsprot) },
    { &coilrsprot, sizeof(coilrsprot) },
    { &min_ssp, sizeof(min_ssp) },
    { &rsrsp_info, sizeof(rsrsp_info) },
    { &dtgrsp_info, sizeof(dtgrsp_info) },
    { &calrsp_info, sizeof(calrsp_info) },
    { &coilrsp_info, sizeof(coilrsp_info) },
    { &cal_zyindex, sizeof(cal_zyindex) },
    { &coil_zyindex, sizeof(coil_zyindex) },
    { &presscfh_info, sizeof(presscfh_info) },
    { &cflloggrd, sizeof(cflloggrd) },
    { &ps1loggrd, sizeof(ps1loggrd) },
    { &cfhloggrd, sizeof(cfhloggrd) },
    { &rcvnloggrd, sizeof(rcvnloggrd) },
    { &rsloggrd, sizeof(rsloggrd) },
    { &dtgloggrd, sizeof(dtgloggrd) },
    { &calloggrd, sizeof(calloggrd) },
    { &coilloggrd, sizeof(coilloggrd) },
    { &maptgloggrd, sizeof(maptgloggrd) },
    { &original_pgrd, sizeof(original_pgrd) },
    { &read_axis, sizeof(read_axis) },
    { &killer_axis, sizeof(killer_axis) },
    { &tg_killer_axis, sizeof(tg_killer_axis) },
    { &tg_read_axis, sizeof(tg_read_axis) },
    { &z_to_omscale, sizeof(z_to_omscale) },
    { &y_to_omscale, sizeof(y_to_omscale) },
    { &shift_to_omscale, sizeof(shift_to_omscale) },
    { &runtime_rf_waveform_rf1, sizeof(runtime_rf_waveform_rf1) },
    { &runtime_rf_waveform_rf1a, sizeof(runtime_rf_waveform_rf1a) },
    { &runtime_rf_waveform_rf1b, sizeof(runtime_rf_waveform_rf1b) },
    { &runtime_rf_waveform_rf1c, sizeof(runtime_rf_waveform_rf1c) },
    { &runtime_rf_waveform_rf1d, sizeof(runtime_rf_waveform_rf1d) },
    { &runtime_rf_waveform_rf1e, sizeof(runtime_rf_waveform_rf1e) },
    { &runtime_rf_waveform_rf1f, sizeof(runtime_rf_waveform_rf1f) },
    { &runtime_rf_waveform_rf1g, sizeof(runtime_rf_waveform_rf1g) },
    { &runtime_rf_waveform_rf1h, sizeof(runtime_rf_waveform_rf1h) },
    { &runtime_rf_waveform_rf1i, sizeof(runtime_rf_waveform_rf1i) },
    { &slloc2sltime, sizeof(slloc2sltime) },
    { &sltime2slloc, sizeof(sltime2slloc) },
    { &f_sltime2slloc, sizeof(f_sltime2slloc) },
    { &act_slquant1, sizeof(act_slquant1) },
    { &rsprot_unscaled, sizeof(rsprot_unscaled) },
    { &inversRR, sizeof(inversRR) },
    { &D, sizeof(D) },
    { &log_incdifx, sizeof(log_incdifx) },
    { &log_incdify, sizeof(log_incdify) },
    { &log_incdifz, sizeof(log_incdifz) },
    { &diff_ampx2, sizeof(diff_ampx2) },
    { &diff_ampy2, sizeof(diff_ampy2) },
    { &diff_ampz2, sizeof(diff_ampz2) },
    { &off_rfcsz, sizeof(off_rfcsz) },
    { &dwigcor, sizeof(dwigcor) },
    { &dwibcor, sizeof(dwibcor) },
    { &dwikcor, sizeof(dwikcor) },
    { &dwi_hoec_gcor_XonX, sizeof(dwi_hoec_gcor_XonX) },
    { &dwi_hoec_gcor_YonX, sizeof(dwi_hoec_gcor_YonX) },
    { &dwi_hoec_gcor_ZonX, sizeof(dwi_hoec_gcor_ZonX) },
    { &dwi_hoec_gcor_XonY, sizeof(dwi_hoec_gcor_XonY) },
    { &dwi_hoec_gcor_YonY, sizeof(dwi_hoec_gcor_YonY) },
    { &dwi_hoec_gcor_ZonY, sizeof(dwi_hoec_gcor_ZonY) },
    { &dwi_hoec_bcor_XonB0, sizeof(dwi_hoec_bcor_XonB0) },
    { &dwi_hoec_bcor_YonB0, sizeof(dwi_hoec_bcor_YonB0) },
    { &dwi_hoec_bcor_ZonB0, sizeof(dwi_hoec_bcor_ZonB0) },
    { &diff_ampx, sizeof(diff_ampx) },
    { &diff_ampy, sizeof(diff_ampy) },
    { &diff_ampz, sizeof(diff_ampz) },
    { &diff_bv_weight, sizeof(diff_bv_weight) },
    { &epiphygrd, sizeof(epiphygrd) },
    { &epiloggrd, sizeof(epiloggrd) },
    { &orthphygrd, sizeof(orthphygrd) },
    { &orthloggrd, sizeof(orthloggrd) },
    { &rfpulseInfo, sizeof(rfpulseInfo) },
    { &delay_buffer, sizeof(delay_buffer) },
    { &dither_buffer, sizeof(dither_buffer) },
    { &ccinx, sizeof(ccinx) },
    { &cciny, sizeof(cciny) },
    { &ccinz, sizeof(ccinz) },
    { &fesp_in, sizeof(fesp_in) },
    { &esp_in, sizeof(esp_in) },
    { &g0, sizeof(g0) },
    { &num_elements, sizeof(num_elements) },
    { &file_exist, sizeof(file_exist) },
    { &taratio_arr, sizeof(taratio_arr) },
    { &totarea_arr, sizeof(totarea_arr) },
    { &agxdif_tmp, sizeof(agxdif_tmp) },
    { &agydif_tmp, sizeof(agydif_tmp) },
    { &agzdif_tmp, sizeof(agzdif_tmp) },
    { &difnextab_rsp, sizeof(difnextab_rsp) },
    { &ctlend_last, sizeof(ctlend_last) },
    { &ctlend_fill, sizeof(ctlend_fill) },
    { &ctlend_unfill, sizeof(ctlend_unfill) },
    { &t1flair_slice_info_enh, sizeof(t1flair_slice_info_enh) },
    { &t1flair_slice_info_reg, sizeof(t1flair_slice_info_reg) },
    { &ssrffile, sizeof(ssrffile) },
    { &ssgzfile, sizeof(ssgzfile) },
    { &hgzssfn, sizeof(hgzssfn) },
    { &ss_psd_slthick, sizeof(ss_psd_slthick) },
    { &mon_rsp_info, sizeof(mon_rsp_info) },
    { &mon_rsp_info2, sizeof(mon_rsp_info2) },
    { &monloggrd, sizeof(monloggrd) },
    { &monphygrd, sizeof(monphygrd) },
    { &rsprot_monitor, sizeof(rsprot_monitor) },
    { &mcbias_info, sizeof(mcbias_info) },
    { &arcPhIndex, sizeof(arcPhIndex) },
    { &arcSlIndex, sizeof(arcSlIndex) },
    { NULL, 0 }
};

/**
 * returns array of CVs and TGT export variable to copy
 */
const cvcopy_table_entry * get_cvcopy_table( void )
{
     return cvcopy_table;
}

/**
 * byteswaps all CVs and TGT export variables in specified array
 *
 * @param[in] data - Contiguous array of CVs and TGT export variables
 *                   populated by epic_cvcopy
 */
#ifdef HOST_TGT
void cvcopy_cnv_endian( char * data )
{
#ifdef PSD_HW
    cv_cnv_endian_psd_annefact_level( data );
    data += sizeof(psd_annefact_level);

    cv_cnv_endian_rhpsd_annefact_level( data );
    data += sizeof(rhpsd_annefact_level);

    cv_cnv_endian_psd_relative_excited_volume_freq( data );
    data += sizeof(psd_relative_excited_volume_freq);

    cv_cnv_endian_psd_relative_excited_volume_phase( data );
    data += sizeof(psd_relative_excited_volume_phase);

    cv_cnv_endian_psd_relative_excited_volume_slice( data );
    data += sizeof(psd_relative_excited_volume_slice);

    cv_cnv_endian_psd_relative_encoded_volume_freq( data );
    data += sizeof(psd_relative_encoded_volume_freq);

    cv_cnv_endian_psd_relative_encoded_volume_phase( data );
    data += sizeof(psd_relative_encoded_volume_phase);

    cv_cnv_endian_psd_relative_encoded_volume_slice( data );
    data += sizeof(psd_relative_encoded_volume_slice);

    cv_cnv_endian_opresearch( data );
    data += sizeof(opresearch);

    cv_cnv_endian_opweight( data );
    data += sizeof(opweight);

    cv_cnv_endian_oplandmark( data );
    data += sizeof(oplandmark);

    cv_cnv_endian_optabent( data );
    data += sizeof(optabent);

    cv_cnv_endian_opentry( data );
    data += sizeof(opentry);

    cv_cnv_endian_oppos( data );
    data += sizeof(oppos);

    cv_cnv_endian_opplane( data );
    data += sizeof(opplane);

    cv_cnv_endian_opphysplane( data );
    data += sizeof(opphysplane);

    cv_cnv_endian_opobplane( data );
    data += sizeof(opobplane);

    cv_cnv_endian_opimode( data );
    data += sizeof(opimode);

    cv_cnv_endian_oppseq( data );
    data += sizeof(oppseq);

    cv_cnv_endian_opgradmode( data );
    data += sizeof(opgradmode);

    cv_cnv_endian_opanatomy( data );
    data += sizeof(opanatomy);

    cv_cnv_endian_piimgoptlist( data );
    data += sizeof(piimgoptlist);

    cv_cnv_endian_opcgate( data );
    data += sizeof(opcgate);

    cv_cnv_endian_opexor( data );
    data += sizeof(opexor);

    cv_cnv_endian_opcmon( data );
    data += sizeof(opcmon);

    cv_cnv_endian_opfcomp( data );
    data += sizeof(opfcomp);

    cv_cnv_endian_opgrx( data );
    data += sizeof(opgrx);

    cv_cnv_endian_opgrxroi( data );
    data += sizeof(opgrxroi);

    cv_cnv_endian_opnopwrap( data );
    data += sizeof(opnopwrap);

    cv_cnv_endian_opptsize( data );
    data += sizeof(opptsize);

    cv_cnv_endian_oppomp( data );
    data += sizeof(oppomp);

    cv_cnv_endian_opscic( data );
    data += sizeof(opscic);

    cv_cnv_endian_oprect( data );
    data += sizeof(oprect);

    cv_cnv_endian_opsquare( data );
    data += sizeof(opsquare);

    cv_cnv_endian_opvbw( data );
    data += sizeof(opvbw);

    cv_cnv_endian_opblim( data );
    data += sizeof(opblim);

    cv_cnv_endian_opfast( data );
    data += sizeof(opfast);

    cv_cnv_endian_opcs( data );
    data += sizeof(opcs);

    cv_cnv_endian_opdeprep( data );
    data += sizeof(opdeprep);

    cv_cnv_endian_opirprep( data );
    data += sizeof(opirprep);

    cv_cnv_endian_opsrprep( data );
    data += sizeof(opsrprep);

    cv_cnv_endian_opmph( data );
    data += sizeof(opmph);

    cv_cnv_endian_opdynaplan( data );
    data += sizeof(opdynaplan);

    cv_cnv_endian_opdynaplan_mask_phase( data );
    data += sizeof(opdynaplan_mask_phase);

    cv_cnv_endian_opbsp( data );
    data += sizeof(opbsp);

    cv_cnv_endian_oprealtime( data );
    data += sizeof(oprealtime);

    cv_cnv_endian_opfluorotrigger( data );
    data += sizeof(opfluorotrigger);

    cv_cnv_endian_opET( data );
    data += sizeof(opET);

    cv_cnv_endian_opmultistation( data );
    data += sizeof(opmultistation);

    cv_cnv_endian_opepi( data );
    data += sizeof(opepi);

    cv_cnv_endian_opflair( data );
    data += sizeof(opflair);

    cv_cnv_endian_opt1flair( data );
    data += sizeof(opt1flair);

    cv_cnv_endian_opt2flair( data );
    data += sizeof(opt2flair);

    cv_cnv_endian_opdoubleir( data );
    data += sizeof(opdoubleir);

    cv_cnv_endian_optissuet1( data );
    data += sizeof(optissuet1);

    cv_cnv_endian_opautotissuet1( data );
    data += sizeof(opautotissuet1);

    cv_cnv_endian_optlrdrf( data );
    data += sizeof(optlrdrf);

    cv_cnv_endian_opfulltrain( data );
    data += sizeof(opfulltrain);

    cv_cnv_endian_opirmode( data );
    data += sizeof(opirmode);

    cv_cnv_endian_opmt( data );
    data += sizeof(opmt);

    cv_cnv_endian_opzip512( data );
    data += sizeof(opzip512);

    cv_cnv_endian_opzip1024( data );
    data += sizeof(opzip1024);

    cv_cnv_endian_opslzip2( data );
    data += sizeof(opslzip2);

    cv_cnv_endian_opslzip4( data );
    data += sizeof(opslzip4);

    cv_cnv_endian_opsmartprep( data );
    data += sizeof(opsmartprep);

    cv_cnv_endian_opssrf( data );
    data += sizeof(opssrf);

    cv_cnv_endian_opt2prep( data );
    data += sizeof(opt2prep);

    cv_cnv_endian_opspiral( data );
    data += sizeof(opspiral);

    cv_cnv_endian_opnav( data );
    data += sizeof(opnav);

    cv_cnv_endian_opfmri( data );
    data += sizeof(opfmri);

    cv_cnv_endian_opectricks( data );
    data += sizeof(opectricks);

    cv_cnv_endian_optricksdel( data );
    data += sizeof(optricksdel);

    cv_cnv_endian_optrickspause( data );
    data += sizeof(optrickspause);

    cv_cnv_endian_opfr( data );
    data += sizeof(opfr);

    cv_cnv_endian_opcube( data );
    data += sizeof(opcube);

    cv_cnv_endian_ophydro( data );
    data += sizeof(ophydro);

    cv_cnv_endian_opphasecycle( data );
    data += sizeof(opphasecycle);

    cv_cnv_endian_oplava( data );
    data += sizeof(oplava);

    cv_cnv_endian_op3dcine_fiesta( data );
    data += sizeof(op3dcine_fiesta);

    cv_cnv_endian_op3dcine_spgr( data );
    data += sizeof(op3dcine_spgr);

    cv_cnv_endian_op4dflow( data );
    data += sizeof(op4dflow);

    cv_cnv_endian_opbrava( data );
    data += sizeof(opbrava);

    cv_cnv_endian_opcosmic( data );
    data += sizeof(opcosmic);

    cv_cnv_endian_opvibrant( data );
    data += sizeof(opvibrant);

    cv_cnv_endian_opbravo( data );
    data += sizeof(opbravo);

    cv_cnv_endian_opdisco( data );
    data += sizeof(opdisco);

    cv_cnv_endian_opmprage( data );
    data += sizeof(opmprage);

    cv_cnv_endian_oppromo( data );
    data += sizeof(oppromo);

    cv_cnv_endian_opprop( data );
    data += sizeof(opprop);

    cv_cnv_endian_opdwprop( data );
    data += sizeof(opdwprop);

    cv_cnv_endian_opdwpropduo( data );
    data += sizeof(opdwpropduo);

    cv_cnv_endian_opmuse( data );
    data += sizeof(opmuse);

    cv_cnv_endian_opallowedrescantime( data );
    data += sizeof(opallowedrescantime);

    cv_cnv_endian_opbreastmrs( data );
    data += sizeof(opbreastmrs);

    cv_cnv_endian_opjrmode( data );
    data += sizeof(opjrmode);

    cv_cnv_endian_opssfse( data );
    data += sizeof(opssfse);

    cv_cnv_endian_t1flair_flag( data );
    data += sizeof(t1flair_flag);

    cv_cnv_endian_opphsen( data );
    data += sizeof(opphsen);

    cv_cnv_endian_opbc( data );
    data += sizeof(opbc);

    cv_cnv_endian_opfatwater( data );
    data += sizeof(opfatwater);

    cv_cnv_endian_oprtbc( data );
    data += sizeof(oprtbc);

    cv_cnv_endian_opnseg( data );
    data += sizeof(opnseg);

    cv_cnv_endian_opnnex( data );
    data += sizeof(opnnex);

    cv_cnv_endian_opsilent( data );
    data += sizeof(opsilent);

    cv_cnv_endian_opsilentlevel( data );
    data += sizeof(opsilentlevel);

    cv_cnv_endian_opmerge( data );
    data += sizeof(opmerge);

    cv_cnv_endian_opswan( data );
    data += sizeof(opswan);

    cv_cnv_endian_opphaseimage( data );
    data += sizeof(opphaseimage);

    cv_cnv_endian_opdixon( data );
    data += sizeof(opdixon);

    cv_cnv_endian_opdixproc( data );
    data += sizeof(opdixproc);

    cv_cnv_endian_opmedal( data );
    data += sizeof(opmedal);

    cv_cnv_endian_opquickstep( data );
    data += sizeof(opquickstep);

    cv_cnv_endian_opidealiq( data );
    data += sizeof(opidealiq);

    cv_cnv_endian_opsilentmr( data );
    data += sizeof(opsilentmr);

    cv_cnv_endian_opmagic( data );
    data += sizeof(opmagic);

    cv_cnv_endian_opzoom_fov_xy( data );
    data += sizeof(opzoom_fov_xy);

    cv_cnv_endian_opzoom_fov_z( data );
    data += sizeof(opzoom_fov_z);

    cv_cnv_endian_opzoom_dist_ax( data );
    data += sizeof(opzoom_dist_ax);

    cv_cnv_endian_opzoom_dist_cor( data );
    data += sizeof(opzoom_dist_cor);

    cv_cnv_endian_opzoom_dist_sag( data );
    data += sizeof(opzoom_dist_sag);

    cv_cnv_endian_app_grad_type( data );
    data += sizeof(app_grad_type);

    cv_cnv_endian_opzoom_coil_ind( data );
    data += sizeof(opzoom_coil_ind);

    cv_cnv_endian_pizoom_index( data );
    data += sizeof(pizoom_index);

    cv_cnv_endian_opsat( data );
    data += sizeof(opsat);

    cv_cnv_endian_opsatx( data );
    data += sizeof(opsatx);

    cv_cnv_endian_opsaty( data );
    data += sizeof(opsaty);

    cv_cnv_endian_opsatz( data );
    data += sizeof(opsatz);

    cv_cnv_endian_opsatxloc1( data );
    data += sizeof(opsatxloc1);

    cv_cnv_endian_opsatxloc2( data );
    data += sizeof(opsatxloc2);

    cv_cnv_endian_opsatyloc1( data );
    data += sizeof(opsatyloc1);

    cv_cnv_endian_opsatyloc2( data );
    data += sizeof(opsatyloc2);

    cv_cnv_endian_opsatzloc1( data );
    data += sizeof(opsatzloc1);

    cv_cnv_endian_opsatzloc2( data );
    data += sizeof(opsatzloc2);

    cv_cnv_endian_opsatxthick( data );
    data += sizeof(opsatxthick);

    cv_cnv_endian_opsatythick( data );
    data += sizeof(opsatythick);

    cv_cnv_endian_opsatzthick( data );
    data += sizeof(opsatzthick);

    cv_cnv_endian_opsatmask( data );
    data += sizeof(opsatmask);

    cv_cnv_endian_opfat( data );
    data += sizeof(opfat);

    cv_cnv_endian_opwater( data );
    data += sizeof(opwater);

    cv_cnv_endian_opccsat( data );
    data += sizeof(opccsat);

    cv_cnv_endian_opfatcl( data );
    data += sizeof(opfatcl);

    cv_cnv_endian_opspecir( data );
    data += sizeof(opspecir);

    cv_cnv_endian_opexsatmask( data );
    data += sizeof(opexsatmask);

    cv_cnv_endian_opexsathick1( data );
    data += sizeof(opexsathick1);

    cv_cnv_endian_opexsathick2( data );
    data += sizeof(opexsathick2);

    cv_cnv_endian_opexsathick3( data );
    data += sizeof(opexsathick3);

    cv_cnv_endian_opexsathick4( data );
    data += sizeof(opexsathick4);

    cv_cnv_endian_opexsathick5( data );
    data += sizeof(opexsathick5);

    cv_cnv_endian_opexsathick6( data );
    data += sizeof(opexsathick6);

    cv_cnv_endian_opexsatloc1( data );
    data += sizeof(opexsatloc1);

    cv_cnv_endian_opexsatloc2( data );
    data += sizeof(opexsatloc2);

    cv_cnv_endian_opexsatloc3( data );
    data += sizeof(opexsatloc3);

    cv_cnv_endian_opexsatloc4( data );
    data += sizeof(opexsatloc4);

    cv_cnv_endian_opexsatloc5( data );
    data += sizeof(opexsatloc5);

    cv_cnv_endian_opexsatloc6( data );
    data += sizeof(opexsatloc6);

    cv_cnv_endian_opexsatparal( data );
    data += sizeof(opexsatparal);

    cv_cnv_endian_opexsatoff1( data );
    data += sizeof(opexsatoff1);

    cv_cnv_endian_opexsatoff2( data );
    data += sizeof(opexsatoff2);

    cv_cnv_endian_opexsatoff3( data );
    data += sizeof(opexsatoff3);

    cv_cnv_endian_opexsatoff4( data );
    data += sizeof(opexsatoff4);

    cv_cnv_endian_opexsatoff5( data );
    data += sizeof(opexsatoff5);

    cv_cnv_endian_opexsatoff6( data );
    data += sizeof(opexsatoff6);

    cv_cnv_endian_opexsatlen1( data );
    data += sizeof(opexsatlen1);

    cv_cnv_endian_opexsatlen2( data );
    data += sizeof(opexsatlen2);

    cv_cnv_endian_opexsatlen3( data );
    data += sizeof(opexsatlen3);

    cv_cnv_endian_opexsatlen4( data );
    data += sizeof(opexsatlen4);

    cv_cnv_endian_opexsatlen5( data );
    data += sizeof(opexsatlen5);

    cv_cnv_endian_opexsatlen6( data );
    data += sizeof(opexsatlen6);

    cv_cnv_endian_opdfsathick1( data );
    data += sizeof(opdfsathick1);

    cv_cnv_endian_opdfsathick2( data );
    data += sizeof(opdfsathick2);

    cv_cnv_endian_opdfsathick3( data );
    data += sizeof(opdfsathick3);

    cv_cnv_endian_opdfsathick4( data );
    data += sizeof(opdfsathick4);

    cv_cnv_endian_opdfsathick5( data );
    data += sizeof(opdfsathick5);

    cv_cnv_endian_opdfsathick6( data );
    data += sizeof(opdfsathick6);

    cv_cnv_endian_exsat1_normth_R( data );
    data += sizeof(exsat1_normth_R);

    cv_cnv_endian_exsat1_normth_A( data );
    data += sizeof(exsat1_normth_A);

    cv_cnv_endian_exsat1_normth_S( data );
    data += sizeof(exsat1_normth_S);

    cv_cnv_endian_exsat2_normth_R( data );
    data += sizeof(exsat2_normth_R);

    cv_cnv_endian_exsat2_normth_A( data );
    data += sizeof(exsat2_normth_A);

    cv_cnv_endian_exsat2_normth_S( data );
    data += sizeof(exsat2_normth_S);

    cv_cnv_endian_exsat3_normth_R( data );
    data += sizeof(exsat3_normth_R);

    cv_cnv_endian_exsat3_normth_A( data );
    data += sizeof(exsat3_normth_A);

    cv_cnv_endian_exsat3_normth_S( data );
    data += sizeof(exsat3_normth_S);

    cv_cnv_endian_exsat4_normth_R( data );
    data += sizeof(exsat4_normth_R);

    cv_cnv_endian_exsat4_normth_A( data );
    data += sizeof(exsat4_normth_A);

    cv_cnv_endian_exsat4_normth_S( data );
    data += sizeof(exsat4_normth_S);

    cv_cnv_endian_exsat5_normth_R( data );
    data += sizeof(exsat5_normth_R);

    cv_cnv_endian_exsat5_normth_A( data );
    data += sizeof(exsat5_normth_A);

    cv_cnv_endian_exsat5_normth_S( data );
    data += sizeof(exsat5_normth_S);

    cv_cnv_endian_exsat6_normth_R( data );
    data += sizeof(exsat6_normth_R);

    cv_cnv_endian_exsat6_normth_A( data );
    data += sizeof(exsat6_normth_A);

    cv_cnv_endian_exsat6_normth_S( data );
    data += sizeof(exsat6_normth_S);

    cv_cnv_endian_exsat1_dist( data );
    data += sizeof(exsat1_dist);

    cv_cnv_endian_exsat2_dist( data );
    data += sizeof(exsat2_dist);

    cv_cnv_endian_exsat3_dist( data );
    data += sizeof(exsat3_dist);

    cv_cnv_endian_exsat4_dist( data );
    data += sizeof(exsat4_dist);

    cv_cnv_endian_exsat5_dist( data );
    data += sizeof(exsat5_dist);

    cv_cnv_endian_exsat6_dist( data );
    data += sizeof(exsat6_dist);

    cv_cnv_endian_pigirscrn( data );
    data += sizeof(pigirscrn);

    cv_cnv_endian_piautoirbands( data );
    data += sizeof(piautoirbands);

    cv_cnv_endian_pigirdefthick( data );
    data += sizeof(pigirdefthick);

    cv_cnv_endian_pinumgir( data );
    data += sizeof(pinumgir);

    cv_cnv_endian_opnumgir( data );
    data += sizeof(opnumgir);

    cv_cnv_endian_pigirmode( data );
    data += sizeof(pigirmode);

    cv_cnv_endian_opgirmode( data );
    data += sizeof(opgirmode);

    cv_cnv_endian_optagging( data );
    data += sizeof(optagging);

    cv_cnv_endian_optagspc( data );
    data += sizeof(optagspc);

    cv_cnv_endian_optagangle( data );
    data += sizeof(optagangle);

    cv_cnv_endian_opvenc( data );
    data += sizeof(opvenc);

    cv_cnv_endian_opflaxx( data );
    data += sizeof(opflaxx);

    cv_cnv_endian_opflaxy( data );
    data += sizeof(opflaxy);

    cv_cnv_endian_opflaxz( data );
    data += sizeof(opflaxz);

    cv_cnv_endian_opflaxall( data );
    data += sizeof(opflaxall);

    cv_cnv_endian_opproject( data );
    data += sizeof(opproject);

    cv_cnv_endian_opcollapse( data );
    data += sizeof(opcollapse);

    cv_cnv_endian_oprlflow( data );
    data += sizeof(oprlflow);

    cv_cnv_endian_opapflow( data );
    data += sizeof(opapflow);

    cv_cnv_endian_opsiflow( data );
    data += sizeof(opsiflow);

    cv_cnv_endian_opmagc( data );
    data += sizeof(opmagc);

    cv_cnv_endian_opflrecon( data );
    data += sizeof(opflrecon);

    cv_cnv_endian_oprampdir( data );
    data += sizeof(oprampdir);

    cv_cnv_endian_project( data );
    data += sizeof(project);

    cv_cnv_endian_vas_ovrhd( data );
    data += sizeof(vas_ovrhd);

    cv_cnv_endian_slice_col( data );
    data += sizeof(slice_col);

    cv_cnv_endian_phase_col( data );
    data += sizeof(phase_col);

    cv_cnv_endian_read_col( data );
    data += sizeof(read_col);

    cv_cnv_endian_mag_mask( data );
    data += sizeof(mag_mask);

    cv_cnv_endian_phase_cor( data );
    data += sizeof(phase_cor);

    cv_cnv_endian_extras( data );
    data += sizeof(extras);

    cv_cnv_endian_mag_create( data );
    data += sizeof(mag_create);

    cv_cnv_endian_rl_flow( data );
    data += sizeof(rl_flow);

    cv_cnv_endian_ap_flow( data );
    data += sizeof(ap_flow);

    cv_cnv_endian_si_flow( data );
    data += sizeof(si_flow);

    cv_cnv_endian_imagenum( data );
    data += sizeof(imagenum);

    cv_cnv_endian_motsa_ovrhd( data );
    data += sizeof(motsa_ovrhd);

    cv_cnv_endian_opslinky( data );
    data += sizeof(opslinky);

    cv_cnv_endian_opinhance( data );
    data += sizeof(opinhance);

    cv_cnv_endian_opmavric( data );
    data += sizeof(opmavric);

    cv_cnv_endian_opinhsflow( data );
    data += sizeof(opinhsflow);

    cv_cnv_endian_opmsde( data );
    data += sizeof(opmsde);

    cv_cnv_endian_opvest( data );
    data += sizeof(opvest);

    cv_cnv_endian_opmsdeaxx( data );
    data += sizeof(opmsdeaxx);

    cv_cnv_endian_opmsdeaxy( data );
    data += sizeof(opmsdeaxy);

    cv_cnv_endian_opmsdeaxz( data );
    data += sizeof(opmsdeaxz);

    cv_cnv_endian_opbreathhold( data );
    data += sizeof(opbreathhold);

    cv_cnv_endian_opautosubtract( data );
    data += sizeof(opautosubtract);

    cv_cnv_endian_opsepseries( data );
    data += sizeof(opsepseries);

    cv_cnv_endian_pititle( data );
    data += sizeof(pititle);

    cv_cnv_endian_opuser0( data );
    data += sizeof(opuser0);

    cv_cnv_endian_opuser1( data );
    data += sizeof(opuser1);

    cv_cnv_endian_opuser2( data );
    data += sizeof(opuser2);

    cv_cnv_endian_opuser3( data );
    data += sizeof(opuser3);

    cv_cnv_endian_opuser4( data );
    data += sizeof(opuser4);

    cv_cnv_endian_opuser5( data );
    data += sizeof(opuser5);

    cv_cnv_endian_opuser6( data );
    data += sizeof(opuser6);

    cv_cnv_endian_opuser7( data );
    data += sizeof(opuser7);

    cv_cnv_endian_opuser8( data );
    data += sizeof(opuser8);

    cv_cnv_endian_opuser9( data );
    data += sizeof(opuser9);

    cv_cnv_endian_opuser10( data );
    data += sizeof(opuser10);

    cv_cnv_endian_opuser11( data );
    data += sizeof(opuser11);

    cv_cnv_endian_opuser12( data );
    data += sizeof(opuser12);

    cv_cnv_endian_opuser13( data );
    data += sizeof(opuser13);

    cv_cnv_endian_opuser14( data );
    data += sizeof(opuser14);

    cv_cnv_endian_opuser15( data );
    data += sizeof(opuser15);

    cv_cnv_endian_opuser16( data );
    data += sizeof(opuser16);

    cv_cnv_endian_opuser17( data );
    data += sizeof(opuser17);

    cv_cnv_endian_opuser18( data );
    data += sizeof(opuser18);

    cv_cnv_endian_opuser19( data );
    data += sizeof(opuser19);

    cv_cnv_endian_opuser20( data );
    data += sizeof(opuser20);

    cv_cnv_endian_opuser21( data );
    data += sizeof(opuser21);

    cv_cnv_endian_opuser22( data );
    data += sizeof(opuser22);

    cv_cnv_endian_opuser23( data );
    data += sizeof(opuser23);

    cv_cnv_endian_opuser24( data );
    data += sizeof(opuser24);

    cv_cnv_endian_opuser25( data );
    data += sizeof(opuser25);

    cv_cnv_endian_opuser26( data );
    data += sizeof(opuser26);

    cv_cnv_endian_opuser27( data );
    data += sizeof(opuser27);

    cv_cnv_endian_opuser28( data );
    data += sizeof(opuser28);

    cv_cnv_endian_opuser29( data );
    data += sizeof(opuser29);

    cv_cnv_endian_opuser30( data );
    data += sizeof(opuser30);

    cv_cnv_endian_opuser31( data );
    data += sizeof(opuser31);

    cv_cnv_endian_opuser32( data );
    data += sizeof(opuser32);

    cv_cnv_endian_opuser33( data );
    data += sizeof(opuser33);

    cv_cnv_endian_opuser34( data );
    data += sizeof(opuser34);

    cv_cnv_endian_opuser35( data );
    data += sizeof(opuser35);

    cv_cnv_endian_opuser36( data );
    data += sizeof(opuser36);

    cv_cnv_endian_opuser37( data );
    data += sizeof(opuser37);

    cv_cnv_endian_opuser38( data );
    data += sizeof(opuser38);

    cv_cnv_endian_opuser39( data );
    data += sizeof(opuser39);

    cv_cnv_endian_opuser40( data );
    data += sizeof(opuser40);

    cv_cnv_endian_opuser41( data );
    data += sizeof(opuser41);

    cv_cnv_endian_opuser42( data );
    data += sizeof(opuser42);

    cv_cnv_endian_opuser43( data );
    data += sizeof(opuser43);

    cv_cnv_endian_opuser44( data );
    data += sizeof(opuser44);

    cv_cnv_endian_opuser45( data );
    data += sizeof(opuser45);

    cv_cnv_endian_opuser46( data );
    data += sizeof(opuser46);

    cv_cnv_endian_opuser47( data );
    data += sizeof(opuser47);

    cv_cnv_endian_opuser48( data );
    data += sizeof(opuser48);

    cv_cnv_endian_opnostations( data );
    data += sizeof(opnostations);

    cv_cnv_endian_opstation( data );
    data += sizeof(opstation);

    cv_cnv_endian_oploadprotocol( data );
    data += sizeof(oploadprotocol);

    cv_cnv_endian_opmask( data );
    data += sizeof(opmask);

    cv_cnv_endian_opvenous( data );
    data += sizeof(opvenous);

    cv_cnv_endian_opprotRxMode( data );
    data += sizeof(opprotRxMode);

    cv_cnv_endian_opacqo( data );
    data += sizeof(opacqo);

    cv_cnv_endian_opfphases( data );
    data += sizeof(opfphases);

    cv_cnv_endian_opsldelay( data );
    data += sizeof(opsldelay);

    cv_cnv_endian_avminsldelay( data );
    data += sizeof(avminsldelay);

    cv_cnv_endian_optphases( data );
    data += sizeof(optphases);

    cv_cnv_endian_opdynaplan_nphases( data );
    data += sizeof(opdynaplan_nphases);

    cv_cnv_endian_opvsphases( data );
    data += sizeof(opvsphases);

    cv_cnv_endian_opdiffuse( data );
    data += sizeof(opdiffuse);

    cv_cnv_endian_opsavedf( data );
    data += sizeof(opsavedf);

    cv_cnv_endian_opmintedif( data );
    data += sizeof(opmintedif);

    cv_cnv_endian_opseparatesynb( data );
    data += sizeof(opseparatesynb);

    cv_cnv_endian_opdfaxx( data );
    data += sizeof(opdfaxx);

    cv_cnv_endian_opdfaxy( data );
    data += sizeof(opdfaxy);

    cv_cnv_endian_opdfaxz( data );
    data += sizeof(opdfaxz);

    cv_cnv_endian_opdfaxall( data );
    data += sizeof(opdfaxall);

    cv_cnv_endian_opdfaxtetra( data );
    data += sizeof(opdfaxtetra);

    cv_cnv_endian_opdfax3in1( data );
    data += sizeof(opdfax3in1);

    cv_cnv_endian_opbval( data );
    data += sizeof(opbval);

    cv_cnv_endian_opnumbvals( data );
    data += sizeof(opnumbvals);

    cv_cnv_endian_opautonumbvals( data );
    data += sizeof(opautonumbvals);

    cv_cnv_endian_opnumsynbvals( data );
    data += sizeof(opnumsynbvals);

    cv_cnv_endian_opdifnext2( data );
    data += sizeof(opdifnext2);

    cv_cnv_endian_opautodifnext2( data );
    data += sizeof(opautodifnext2);

    cv_cnv_endian_optensor( data );
    data += sizeof(optensor);

    cv_cnv_endian_opdifnumdirs( data );
    data += sizeof(opdifnumdirs);

    cv_cnv_endian_opdifnumt2( data );
    data += sizeof(opdifnumt2);

    cv_cnv_endian_opautodifnumt2( data );
    data += sizeof(opautodifnumt2);

    cv_cnv_endian_opdualspinecho( data );
    data += sizeof(opdualspinecho);

    cv_cnv_endian_opdifproctype( data );
    data += sizeof(opdifproctype);

    cv_cnv_endian_opdifnumbvalues( data );
    data += sizeof(opdifnumbvalues);

    cv_cnv_endian_dti_plus_flag( data );
    data += sizeof(dti_plus_flag);

    cv_cnv_endian_optouch( data );
    data += sizeof(optouch);

    cv_cnv_endian_optouchfreq( data );
    data += sizeof(optouchfreq);

    cv_cnv_endian_optouchmegfreq( data );
    data += sizeof(optouchmegfreq);

    cv_cnv_endian_optouchamp( data );
    data += sizeof(optouchamp);

    cv_cnv_endian_optouchtphases( data );
    data += sizeof(optouchtphases);

    cv_cnv_endian_optouchcyc( data );
    data += sizeof(optouchcyc);

    cv_cnv_endian_optouchax( data );
    data += sizeof(optouchax);

    cv_cnv_endian_opaslprep( data );
    data += sizeof(opaslprep);

    cv_cnv_endian_opasl( data );
    data += sizeof(opasl);

    cv_cnv_endian_oppostlabeldelay( data );
    data += sizeof(oppostlabeldelay);

    cv_cnv_endian_rhchannel_combine_method( data );
    data += sizeof(rhchannel_combine_method);

    cv_cnv_endian_rhasl_perf_weighted_scale( data );
    data += sizeof(rhasl_perf_weighted_scale);

    cv_cnv_endian_cfslew_artmedium( data );
    data += sizeof(cfslew_artmedium);

    cv_cnv_endian_cfgmax_artmedium( data );
    data += sizeof(cfgmax_artmedium);

    cv_cnv_endian_cfslew_arthigh( data );
    data += sizeof(cfslew_arthigh);

    cv_cnv_endian_cfgmax_arthigh( data );
    data += sizeof(cfgmax_arthigh);

    cv_cnv_endian_cfnumartlevels( data );
    data += sizeof(cfnumartlevels);

    cv_cnv_endian_pinumartlevels( data );
    data += sizeof(pinumartlevels);

    cv_cnv_endian_cfslew_artmediumopt( data );
    data += sizeof(cfslew_artmediumopt);

    cv_cnv_endian_cfgmax_artmediumopt( data );
    data += sizeof(cfgmax_artmediumopt);

    cv_cnv_endian_oprep_active( data );
    data += sizeof(oprep_active);

    cv_cnv_endian_oprep_rest( data );
    data += sizeof(oprep_rest);

    cv_cnv_endian_opdda( data );
    data += sizeof(opdda);

    cv_cnv_endian_opinit_state( data );
    data += sizeof(opinit_state);

    cv_cnv_endian_opfMRIPDTYPE( data );
    data += sizeof(opfMRIPDTYPE);

    cv_cnv_endian_opview_order( data );
    data += sizeof(opview_order);

    cv_cnv_endian_opslice_order( data );
    data += sizeof(opslice_order);

    cv_cnv_endian_oppsd_trig( data );
    data += sizeof(oppsd_trig);

    cv_cnv_endian_oppdgm_str( data );
    data += sizeof(oppdgm_str);

    cv_cnv_endian_opbwrt( data );
    data += sizeof(opbwrt);

    cv_cnv_endian_cont_flag( data );
    data += sizeof(cont_flag);

    cv_cnv_endian_opautonecho( data );
    data += sizeof(opautonecho);

    cv_cnv_endian_opnecho( data );
    data += sizeof(opnecho);

    cv_cnv_endian_opnshots( data );
    data += sizeof(opnshots);

    cv_cnv_endian_opautote( data );
    data += sizeof(opautote);

    cv_cnv_endian_opte( data );
    data += sizeof(opte);

    cv_cnv_endian_opte2( data );
    data += sizeof(opte2);

    cv_cnv_endian_optefw( data );
    data += sizeof(optefw);

    cv_cnv_endian_opti( data );
    data += sizeof(opti);

    cv_cnv_endian_opbspti( data );
    data += sizeof(opbspti);

    cv_cnv_endian_opautoti( data );
    data += sizeof(opautoti);

    cv_cnv_endian_opautobti( data );
    data += sizeof(opautobti);

    cv_cnv_endian_optrecovery( data );
    data += sizeof(optrecovery);

    cv_cnv_endian_optlabel( data );
    data += sizeof(optlabel);

    cv_cnv_endian_opt2prepte( data );
    data += sizeof(opt2prepte);

    cv_cnv_endian_opautotr( data );
    data += sizeof(opautotr);

    cv_cnv_endian_opnspokes( data );
    data += sizeof(opnspokes);

    cv_cnv_endian_opoversamplingfactor( data );
    data += sizeof(opoversamplingfactor);

    cv_cnv_endian_opacs( data );
    data += sizeof(opacs);

    cv_cnv_endian_opharmonize( data );
    data += sizeof(opharmonize);

    cv_cnv_endian_pieffbladewidth( data );
    data += sizeof(pieffbladewidth);

    cv_cnv_endian_opinrangetr( data );
    data += sizeof(opinrangetr);

    cv_cnv_endian_opinrangetrmin( data );
    data += sizeof(opinrangetrmin);

    cv_cnv_endian_opinrangetrmax( data );
    data += sizeof(opinrangetrmax);

    cv_cnv_endian_optr( data );
    data += sizeof(optr);

    cv_cnv_endian_opflip( data );
    data += sizeof(opflip);

    cv_cnv_endian_opautoflip( data );
    data += sizeof(opautoflip);

    cv_cnv_endian_opautoetl( data );
    data += sizeof(opautoetl);

    cv_cnv_endian_opetl( data );
    data += sizeof(opetl);

    cv_cnv_endian_opautorbw( data );
    data += sizeof(opautorbw);

    cv_cnv_endian_oprbw( data );
    data += sizeof(oprbw);

    cv_cnv_endian_oprbw2( data );
    data += sizeof(oprbw2);

    cv_cnv_endian_opfov( data );
    data += sizeof(opfov);

    cv_cnv_endian_opphasefov( data );
    data += sizeof(opphasefov);

    cv_cnv_endian_opnpwfactor( data );
    data += sizeof(opnpwfactor);

    cv_cnv_endian_opfreqfov( data );
    data += sizeof(opfreqfov);

    cv_cnv_endian_opautoslquant( data );
    data += sizeof(opautoslquant);

    cv_cnv_endian_opslquant( data );
    data += sizeof(opslquant);

    cv_cnv_endian_opsllocs( data );
    data += sizeof(opsllocs);

    cv_cnv_endian_opslthick( data );
    data += sizeof(opslthick);

    cv_cnv_endian_opslspace( data );
    data += sizeof(opslspace);

    cv_cnv_endian_opileave( data );
    data += sizeof(opileave);

    cv_cnv_endian_opcoax( data );
    data += sizeof(opcoax);

    cv_cnv_endian_opvthick( data );
    data += sizeof(opvthick);

    cv_cnv_endian_opvquant( data );
    data += sizeof(opvquant);

    cv_cnv_endian_opovl( data );
    data += sizeof(opovl);

    cv_cnv_endian_oplenrl( data );
    data += sizeof(oplenrl);

    cv_cnv_endian_oplenap( data );
    data += sizeof(oplenap);

    cv_cnv_endian_oplensi( data );
    data += sizeof(oplensi);

    cv_cnv_endian_oplocrl( data );
    data += sizeof(oplocrl);

    cv_cnv_endian_oplocap( data );
    data += sizeof(oplocap);

    cv_cnv_endian_oplocsi( data );
    data += sizeof(oplocsi);

    cv_cnv_endian_oprlcsiis( data );
    data += sizeof(oprlcsiis);

    cv_cnv_endian_opapcsiis( data );
    data += sizeof(opapcsiis);

    cv_cnv_endian_opsicsiis( data );
    data += sizeof(opsicsiis);

    cv_cnv_endian_opmonfov( data );
    data += sizeof(opmonfov);

    cv_cnv_endian_opmonthick( data );
    data += sizeof(opmonthick);

    cv_cnv_endian_opinittrigdelay( data );
    data += sizeof(opinittrigdelay);

    cv_cnv_endian_opxres( data );
    data += sizeof(opxres);

    cv_cnv_endian_opyres( data );
    data += sizeof(opyres);

    cv_cnv_endian_opautonex( data );
    data += sizeof(opautonex);

    cv_cnv_endian_opnex( data );
    data += sizeof(opnex);

    cv_cnv_endian_opslicecnt( data );
    data += sizeof(opslicecnt);

    cv_cnv_endian_opnbh( data );
    data += sizeof(opnbh);

    cv_cnv_endian_opspf( data );
    data += sizeof(opspf);

    cv_cnv_endian_opcfsel( data );
    data += sizeof(opcfsel);

    cv_cnv_endian_opfcaxis( data );
    data += sizeof(opfcaxis);

    cv_cnv_endian_opphcor( data );
    data += sizeof(opphcor);

    cv_cnv_endian_opdose( data );
    data += sizeof(opdose);

    cv_cnv_endian_opcontrast( data );
    data += sizeof(opcontrast);

    cv_cnv_endian_opchrate( data );
    data += sizeof(opchrate);

    cv_cnv_endian_opcphases( data );
    data += sizeof(opcphases);

    cv_cnv_endian_opaphases( data );
    data += sizeof(opaphases);

    cv_cnv_endian_opclocs( data );
    data += sizeof(opclocs);

    cv_cnv_endian_ophrate( data );
    data += sizeof(ophrate);

    cv_cnv_endian_oparr( data );
    data += sizeof(oparr);

    cv_cnv_endian_ophrep( data );
    data += sizeof(ophrep);

    cv_cnv_endian_opautotdel1( data );
    data += sizeof(opautotdel1);

    cv_cnv_endian_optdel1( data );
    data += sizeof(optdel1);

    cv_cnv_endian_optseq( data );
    data += sizeof(optseq);

    cv_cnv_endian_opphases( data );
    data += sizeof(opphases);

    cv_cnv_endian_opcardseq( data );
    data += sizeof(opcardseq);

    cv_cnv_endian_opmphases( data );
    data += sizeof(opmphases);

    cv_cnv_endian_oparrmon( data );
    data += sizeof(oparrmon);

    cv_cnv_endian_opvps( data );
    data += sizeof(opvps);

    cv_cnv_endian_opautovps( data );
    data += sizeof(opautovps);

    cv_cnv_endian_opcgatetype( data );
    data += sizeof(opcgatetype);

    cv_cnv_endian_opadvgate( data );
    data += sizeof(opadvgate);

    cv_cnv_endian_opfcine( data );
    data += sizeof(opfcine);

    cv_cnv_endian_opcineir( data );
    data += sizeof(opcineir);

    cv_cnv_endian_opstress( data );
    data += sizeof(opstress);

    cv_cnv_endian_opnrr( data );
    data += sizeof(opnrr);

    cv_cnv_endian_opnrr_dda( data );
    data += sizeof(opnrr_dda);

    cv_cnv_endian_oprtcgate( data );
    data += sizeof(oprtcgate);

    cv_cnv_endian_oprtrate( data );
    data += sizeof(oprtrate);

    cv_cnv_endian_oprtrep( data );
    data += sizeof(oprtrep);

    cv_cnv_endian_oprttdel1( data );
    data += sizeof(oprttdel1);

    cv_cnv_endian_oprttseq( data );
    data += sizeof(oprttseq);

    cv_cnv_endian_oprtcardseq( data );
    data += sizeof(oprtcardseq);

    cv_cnv_endian_oprtarr( data );
    data += sizeof(oprtarr);

    cv_cnv_endian_oprtpoint( data );
    data += sizeof(oprtpoint);

    cv_cnv_endian_opnavrrmeas( data );
    data += sizeof(opnavrrmeas);

    cv_cnv_endian_opnavrrmeastime( data );
    data += sizeof(opnavrrmeastime);

    cv_cnv_endian_opnavrrmeasrr( data );
    data += sizeof(opnavrrmeasrr);

    cv_cnv_endian_opnavsltrack( data );
    data += sizeof(opnavsltrack);

    cv_cnv_endian_opnavautoaccwin( data );
    data += sizeof(opnavautoaccwin);

    cv_cnv_endian_opnavaccwin( data );
    data += sizeof(opnavaccwin);

    cv_cnv_endian_opnavautotrigtime( data );
    data += sizeof(opnavautotrigtime);

    cv_cnv_endian_opnavpsctime( data );
    data += sizeof(opnavpsctime);

    cv_cnv_endian_opnavmaxinterval( data );
    data += sizeof(opnavmaxinterval);

    cv_cnv_endian_opnavtype( data );
    data += sizeof(opnavtype);

    cv_cnv_endian_opnavpscpause( data );
    data += sizeof(opnavpscpause);

    cv_cnv_endian_opnavsigenhance( data );
    data += sizeof(opnavsigenhance);

    cv_cnv_endian_opasset( data );
    data += sizeof(opasset);

    cv_cnv_endian_opassetcal( data );
    data += sizeof(opassetcal);

    cv_cnv_endian_opassetscan( data );
    data += sizeof(opassetscan);

    cv_cnv_endian_rhcoilno( data );
    data += sizeof(rhcoilno);

    cv_cnv_endian_rhcal_options( data );
    data += sizeof(rhcal_options);

    cv_cnv_endian_rhasset( data );
    data += sizeof(rhasset);

    cv_cnv_endian_rhasset_calthresh( data );
    data += sizeof(rhasset_calthresh);

    cv_cnv_endian_rhasset_R( data );
    data += sizeof(rhasset_R);

    cv_cnv_endian_rhasset_phases( data );
    data += sizeof(rhasset_phases);

    cv_cnv_endian_rhscancent( data );
    data += sizeof(rhscancent);

    cv_cnv_endian_rhasset_alt_cal( data );
    data += sizeof(rhasset_alt_cal);

    cv_cnv_endian_rhasset_torso( data );
    data += sizeof(rhasset_torso);

    cv_cnv_endian_rhasset_localTx( data );
    data += sizeof(rhasset_localTx);

    cv_cnv_endian_rhasset_TuningFactor( data );
    data += sizeof(rhasset_TuningFactor);

    cv_cnv_endian_rhasset_SnrMin( data );
    data += sizeof(rhasset_SnrMin);

    cv_cnv_endian_rhasset_SnrMax( data );
    data += sizeof(rhasset_SnrMax);

    cv_cnv_endian_rhasset_SnrScalar( data );
    data += sizeof(rhasset_SnrScalar);

    cv_cnv_endian_oppure( data );
    data += sizeof(oppure);

    cv_cnv_endian_rhpure( data );
    data += sizeof(rhpure);

    cv_cnv_endian_oppurecal( data );
    data += sizeof(oppurecal);

    cv_cnv_endian_rhpurechannel( data );
    data += sizeof(rhpurechannel);

    cv_cnv_endian_rhpurefilter( data );
    data += sizeof(rhpurefilter);

    cv_cnv_endian_rhpure_scale_factor( data );
    data += sizeof(rhpure_scale_factor);

    cv_cnv_endian_cfpure_filtering_mode( data );
    data += sizeof(cfpure_filtering_mode);

    cv_cnv_endian_rhpure_filtering_mode( data );
    data += sizeof(rhpure_filtering_mode);

    cv_cnv_endian_rhpure_lambda( data );
    data += sizeof(rhpure_lambda);

    cv_cnv_endian_rhpure_tuning_factor_surface( data );
    data += sizeof(rhpure_tuning_factor_surface);

    cv_cnv_endian_rhpure_tuning_factor_body( data );
    data += sizeof(rhpure_tuning_factor_body);

    cv_cnv_endian_rhpure_derived_cal_fraction( data );
    data += sizeof(rhpure_derived_cal_fraction);

    cv_cnv_endian_rhpure_cal_reapodization( data );
    data += sizeof(rhpure_cal_reapodization);

    cv_cnv_endian_opcalrequired( data );
    data += sizeof(opcalrequired);

    cv_cnv_endian_rhpure_blur_enable( data );
    data += sizeof(rhpure_blur_enable);

    cv_cnv_endian_rhpure_blur( data );
    data += sizeof(rhpure_blur);

    cv_cnv_endian_rhpure_mix_lambda( data );
    data += sizeof(rhpure_mix_lambda);

    cv_cnv_endian_rhpure_mix_tuning_factor_surface( data );
    data += sizeof(rhpure_mix_tuning_factor_surface);

    cv_cnv_endian_rhpure_mix_tuning_factor_body( data );
    data += sizeof(rhpure_mix_tuning_factor_body);

    cv_cnv_endian_rhpure_mix_blur_enable( data );
    data += sizeof(rhpure_mix_blur_enable);

    cv_cnv_endian_rhpure_mix_blur( data );
    data += sizeof(rhpure_mix_blur);

    cv_cnv_endian_rhpure_mix_alpha( data );
    data += sizeof(rhpure_mix_alpha);

    cv_cnv_endian_rhpure_mix_otsu_class_qty( data );
    data += sizeof(rhpure_mix_otsu_class_qty);

    cv_cnv_endian_rhpure_mix_exp_wt( data );
    data += sizeof(rhpure_mix_exp_wt);

    cv_cnv_endian_rhpure_mix_erode_dist( data );
    data += sizeof(rhpure_mix_erode_dist);

    cv_cnv_endian_rhpure_mix_dilate_dist( data );
    data += sizeof(rhpure_mix_dilate_dist);

    cv_cnv_endian_rhpure_mix_aniso_blur( data );
    data += sizeof(rhpure_mix_aniso_blur);

    cv_cnv_endian_rhpure_mix_aniso_erode_dist( data );
    data += sizeof(rhpure_mix_aniso_erode_dist);

    cv_cnv_endian_rhpure_mix_aniso_dilate_dist( data );
    data += sizeof(rhpure_mix_aniso_dilate_dist);

    cv_cnv_endian_opcalmode( data );
    data += sizeof(opcalmode);

    cv_cnv_endian_rhcalmode( data );
    data += sizeof(rhcalmode);

    cv_cnv_endian_opcaldelay( data );
    data += sizeof(opcaldelay);

    cv_cnv_endian_rhcal_pass_set_vector( data );
    data += sizeof(rhcal_pass_set_vector);

    cv_cnv_endian_rhcal_nex_vector( data );
    data += sizeof(rhcal_nex_vector);

    cv_cnv_endian_rhcal_weight_vector( data );
    data += sizeof(rhcal_weight_vector);

    cv_cnv_endian_sifsetwokey( data );
    data += sizeof(sifsetwokey);

    cv_cnv_endian_opautosldelay( data );
    data += sizeof(opautosldelay);

    cv_cnv_endian_specnuc( data );
    data += sizeof(specnuc);

    cv_cnv_endian_specpts( data );
    data += sizeof(specpts);

    cv_cnv_endian_specwidth( data );
    data += sizeof(specwidth);

    cv_cnv_endian_specnavs( data );
    data += sizeof(specnavs);

    cv_cnv_endian_specnex( data );
    data += sizeof(specnex);

    cv_cnv_endian_specdwells( data );
    data += sizeof(specdwells);

    cv_cnv_endian_acquire_type( data );
    data += sizeof(acquire_type);

    cv_cnv_endian_pixmtband( data );
    data += sizeof(pixmtband);

    cv_cnv_endian_pibbandfilt( data );
    data += sizeof(pibbandfilt);

    cv_cnv_endian_opwarmup( data );
    data += sizeof(opwarmup);

    cv_cnv_endian_pscahead( data );
    data += sizeof(pscahead);

    cv_cnv_endian_opprescanopt( data );
    data += sizeof(opprescanopt);

    cv_cnv_endian_autoadvtoscn( data );
    data += sizeof(autoadvtoscn);

    cv_cnv_endian_opapa( data );
    data += sizeof(opapa);

    cv_cnv_endian_oppscapa( data );
    data += sizeof(oppscapa);

    cv_cnv_endian_PSslice_ind( data );
    data += sizeof(PSslice_ind);

    cv_cnv_endian_oppscshimtg( data );
    data += sizeof(oppscshimtg);

    cv_cnv_endian_opdyntg( data );
    data += sizeof(opdyntg);

    cv_cnv_endian_dynTG_fov( data );
    data += sizeof(dynTG_fov);

    cv_cnv_endian_dynTG_slquant( data );
    data += sizeof(dynTG_slquant);

    cv_cnv_endian_dynTG_flipangle( data );
    data += sizeof(dynTG_flipangle);

    cv_cnv_endian_dynTG_slthick( data );
    data += sizeof(dynTG_slthick);

    cv_cnv_endian_dynTG_xres( data );
    data += sizeof(dynTG_xres);

    cv_cnv_endian_dynTG_yres( data );
    data += sizeof(dynTG_yres);

    cv_cnv_endian_dynTG_baseline( data );
    data += sizeof(dynTG_baseline);

    cv_cnv_endian_dynTG_ptsize( data );
    data += sizeof(dynTG_ptsize);

    cv_cnv_endian_dynTG_b1factor( data );
    data += sizeof(dynTG_b1factor);

    cv_cnv_endian_rfshim_fov( data );
    data += sizeof(rfshim_fov);

    cv_cnv_endian_rfshim_slquant( data );
    data += sizeof(rfshim_slquant);

    cv_cnv_endian_rfshim_flipangle( data );
    data += sizeof(rfshim_flipangle);

    cv_cnv_endian_rfshim_slthick( data );
    data += sizeof(rfshim_slthick);

    cv_cnv_endian_rfshim_xres( data );
    data += sizeof(rfshim_xres);

    cv_cnv_endian_rfshim_yres( data );
    data += sizeof(rfshim_yres);

    cv_cnv_endian_rfshim_baseline( data );
    data += sizeof(rfshim_baseline);

    cv_cnv_endian_rfshim_ptsize( data );
    data += sizeof(rfshim_ptsize);

    cv_cnv_endian_rfshim_b1factor( data );
    data += sizeof(rfshim_b1factor);

    cv_cnv_endian_cal_xres( data );
    data += sizeof(cal_xres);

    cv_cnv_endian_cal_yres( data );
    data += sizeof(cal_yres);

    cv_cnv_endian_cal_slq( data );
    data += sizeof(cal_slq);

    cv_cnv_endian_cal_nex( data );
    data += sizeof(cal_nex);

    cv_cnv_endian_cal_interleave( data );
    data += sizeof(cal_interleave);

    cv_cnv_endian_cal_fov( data );
    data += sizeof(cal_fov);

    cv_cnv_endian_cal_slthick( data );
    data += sizeof(cal_slthick);

    cv_cnv_endian_cal_pass( data );
    data += sizeof(cal_pass);

    cv_cnv_endian_coil_xres( data );
    data += sizeof(coil_xres);

    cv_cnv_endian_coil_yres( data );
    data += sizeof(coil_yres);

    cv_cnv_endian_coil_slq( data );
    data += sizeof(coil_slq);

    cv_cnv_endian_coil_nex( data );
    data += sizeof(coil_nex);

    cv_cnv_endian_coil_fov( data );
    data += sizeof(coil_fov);

    cv_cnv_endian_coil_slthick( data );
    data += sizeof(coil_slthick);

    cv_cnv_endian_coil_pass( data );
    data += sizeof(coil_pass);

    cv_cnv_endian_coil_interleave( data );
    data += sizeof(coil_interleave);

    cv_cnv_endian_asfov( data );
    data += sizeof(asfov);

    cv_cnv_endian_asslquant( data );
    data += sizeof(asslquant);

    cv_cnv_endian_asflip( data );
    data += sizeof(asflip);

    cv_cnv_endian_asslthick( data );
    data += sizeof(asslthick);

    cv_cnv_endian_asxres( data );
    data += sizeof(asxres);

    cv_cnv_endian_asyres( data );
    data += sizeof(asyres);

    cv_cnv_endian_asbaseline( data );
    data += sizeof(asbaseline);

    cv_cnv_endian_asrhblank( data );
    data += sizeof(asrhblank);

    cv_cnv_endian_asptsize( data );
    data += sizeof(asptsize);

    cv_cnv_endian_opascalcfov( data );
    data += sizeof(opascalcfov);

    cv_cnv_endian_tgfov( data );
    data += sizeof(tgfov);

    cv_cnv_endian_tgcap( data );
    data += sizeof(tgcap);

    cv_cnv_endian_tgwindow( data );
    data += sizeof(tgwindow);

    cv_cnv_endian_oppscvquant( data );
    data += sizeof(oppscvquant);

    cv_cnv_endian_opdrivemode( data );
    data += sizeof(opdrivemode);

    cv_cnv_endian_pidrivemodenub( data );
    data += sizeof(pidrivemodenub);

    cv_cnv_endian_opexcitemode( data );
    data += sizeof(opexcitemode);

    cv_cnv_endian_lp_stretch( data );
    data += sizeof(lp_stretch);

    cv_cnv_endian_lp_mode( data );
    data += sizeof(lp_mode);

    cv_cnv_endian_derateb1_body_factor( data );
    data += sizeof(derateb1_body_factor);

    cv_cnv_endian_SAR_bodyNV_weight_lim( data );
    data += sizeof(SAR_bodyNV_weight_lim);

    cv_cnv_endian_derateb1_NV_factor( data );
    data += sizeof(derateb1_NV_factor);

    cv_cnv_endian_jstd_multiplier_body( data );
    data += sizeof(jstd_multiplier_body);

    cv_cnv_endian_jstd_multiplier_NV( data );
    data += sizeof(jstd_multiplier_NV);

    cv_cnv_endian_jstd_exponent_body( data );
    data += sizeof(jstd_exponent_body);

    cv_cnv_endian_jstd_exponent_NV( data );
    data += sizeof(jstd_exponent_NV);

    cv_cnv_endian_pidiffmode( data );
    data += sizeof(pidiffmode);

    cv_cnv_endian_pifmriscrn( data );
    data += sizeof(pifmriscrn);

    cv_cnv_endian_piresol( data );
    data += sizeof(piresol);

    cv_cnv_endian_pioverlap( data );
    data += sizeof(pioverlap);

    cv_cnv_endian_piforkvrgf( data );
    data += sizeof(piforkvrgf);

    cv_cnv_endian_pinofreqoffset( data );
    data += sizeof(pinofreqoffset);

    cv_cnv_endian_pirepactivenub( data );
    data += sizeof(pirepactivenub);

    cv_cnv_endian_pireprestnub( data );
    data += sizeof(pireprestnub);

    cv_cnv_endian_piddanub( data );
    data += sizeof(piddanub);

    cv_cnv_endian_piinitstatnub( data );
    data += sizeof(piinitstatnub);

    cv_cnv_endian_piviewordernub( data );
    data += sizeof(piviewordernub);

    cv_cnv_endian_pisliceordnub( data );
    data += sizeof(pisliceordnub);

    cv_cnv_endian_pipsdtrignub( data );
    data += sizeof(pipsdtrignub);

    cv_cnv_endian_pispssupnub( data );
    data += sizeof(pispssupnub);

    cv_cnv_endian_pi_neg_sp( data );
    data += sizeof(pi_neg_sp);

    cv_cnv_endian_piisvaldef( data );
    data += sizeof(piisvaldef);

    cv_cnv_endian_pi2dmde( data );
    data += sizeof(pi2dmde);

    cv_cnv_endian_pidmode( data );
    data += sizeof(pidmode);

    cv_cnv_endian_piviews( data );
    data += sizeof(piviews);

    cv_cnv_endian_piclckcnt( data );
    data += sizeof(piclckcnt);

    cv_cnv_endian_avmintscan( data );
    data += sizeof(avmintscan);

    cv_cnv_endian_pitslice( data );
    data += sizeof(pitslice);

    cv_cnv_endian_pitscan( data );
    data += sizeof(pitscan);

    cv_cnv_endian_pimscan( data );
    data += sizeof(pimscan);

    cv_cnv_endian_pivsscan( data );
    data += sizeof(pivsscan);

    cv_cnv_endian_pireconlag( data );
    data += sizeof(pireconlag);

    cv_cnv_endian_pitres( data );
    data += sizeof(pitres);

    cv_cnv_endian_pitres2( data );
    data += sizeof(pitres2);

    cv_cnv_endian_pisaveinter( data );
    data += sizeof(pisaveinter);

    cv_cnv_endian_pivextras( data );
    data += sizeof(pivextras);

    cv_cnv_endian_pinecho( data );
    data += sizeof(pinecho);

    cv_cnv_endian_piscancenter( data );
    data += sizeof(piscancenter);

    cv_cnv_endian_pilandmark( data );
    data += sizeof(pilandmark);

    cv_cnv_endian_pitableposition( data );
    data += sizeof(pitableposition);

    cv_cnv_endian_pismode( data );
    data += sizeof(pismode);

    cv_cnv_endian_pishldctrl( data );
    data += sizeof(pishldctrl);

    cv_cnv_endian_pinolr( data );
    data += sizeof(pinolr);

    cv_cnv_endian_pinoadc( data );
    data += sizeof(pinoadc);

    cv_cnv_endian_pimixtime( data );
    data += sizeof(pimixtime);

    cv_cnv_endian_pishim2( data );
    data += sizeof(pishim2);

    cv_cnv_endian_pi1stshimb( data );
    data += sizeof(pi1stshimb);

    cv_cnv_endian_pifractecho( data );
    data += sizeof(pifractecho);

    cv_cnv_endian_nope( data );
    data += sizeof(nope);

    cv_cnv_endian_opuser_usage_tag( data );
    data += sizeof(opuser_usage_tag);

    cv_cnv_endian_rhuser_usage_tag( data );
    data += sizeof(rhuser_usage_tag);

    cv_cnv_endian_rhFillMapMSW( data );
    data += sizeof(rhFillMapMSW);

    cv_cnv_endian_rhFillMapLSW( data );
    data += sizeof(rhFillMapLSW);

    cv_cnv_endian_rhbline( data );
    data += sizeof(rhbline);

    cv_cnv_endian_rhblank( data );
    data += sizeof(rhblank);

    cv_cnv_endian_rhnex( data );
    data += sizeof(rhnex);

    cv_cnv_endian_rhnavs( data );
    data += sizeof(rhnavs);

    cv_cnv_endian_rhnslices( data );
    data += sizeof(rhnslices);

    cv_cnv_endian_rhnrefslices( data );
    data += sizeof(rhnrefslices);

    cv_cnv_endian_rhnframes( data );
    data += sizeof(rhnframes);

    cv_cnv_endian_rhfrsize( data );
    data += sizeof(rhfrsize);

    cv_cnv_endian_rhnecho( data );
    data += sizeof(rhnecho);

    cv_cnv_endian_rhnphases( data );
    data += sizeof(rhnphases);

    cv_cnv_endian_rhmphasetype( data );
    data += sizeof(rhmphasetype);

    cv_cnv_endian_rhtrickstype( data );
    data += sizeof(rhtrickstype);

    cv_cnv_endian_rhtype( data );
    data += sizeof(rhtype);

    cv_cnv_endian_rhtype1( data );
    data += sizeof(rhtype1);

    cv_cnv_endian_rhformat( data );
    data += sizeof(rhformat);

    cv_cnv_endian_rhptsize( data );
    data += sizeof(rhptsize);

    cv_cnv_endian_rhnpomp( data );
    data += sizeof(rhnpomp);

    cv_cnv_endian_rhrcctrl( data );
    data += sizeof(rhrcctrl);

    cv_cnv_endian_rhdacqctrl( data );
    data += sizeof(rhdacqctrl);

    cv_cnv_endian_rhexecctrl( data );
    data += sizeof(rhexecctrl);

    cv_cnv_endian_rhfdctrl( data );
    data += sizeof(rhfdctrl);

    cv_cnv_endian_rhxoff( data );
    data += sizeof(rhxoff);

    cv_cnv_endian_rhyoff( data );
    data += sizeof(rhyoff);

    cv_cnv_endian_rhrecon( data );
    data += sizeof(rhrecon);

    cv_cnv_endian_rhdatacq( data );
    data += sizeof(rhdatacq);

    cv_cnv_endian_rhvquant( data );
    data += sizeof(rhvquant);

    cv_cnv_endian_rhslblank( data );
    data += sizeof(rhslblank);

    cv_cnv_endian_rhhnover( data );
    data += sizeof(rhhnover);

    cv_cnv_endian_rhfeextra( data );
    data += sizeof(rhfeextra);

    cv_cnv_endian_rhheover( data );
    data += sizeof(rhheover);

    cv_cnv_endian_rhoscans( data );
    data += sizeof(rhoscans);

    cv_cnv_endian_rhddaover( data );
    data += sizeof(rhddaover);

    cv_cnv_endian_rhzeroph( data );
    data += sizeof(rhzeroph);

    cv_cnv_endian_rhalpha( data );
    data += sizeof(rhalpha);

    cv_cnv_endian_rhnwin( data );
    data += sizeof(rhnwin);

    cv_cnv_endian_rhntran( data );
    data += sizeof(rhntran);

    cv_cnv_endian_rhherawflt( data );
    data += sizeof(rhherawflt);

    cv_cnv_endian_rhherawflt_befnwin( data );
    data += sizeof(rhherawflt_befnwin);

    cv_cnv_endian_rhherawflt_befntran( data );
    data += sizeof(rhherawflt_befntran);

    cv_cnv_endian_rhherawflt_befamp( data );
    data += sizeof(rhherawflt_befamp);

    cv_cnv_endian_rhherawflt_hpfamp( data );
    data += sizeof(rhherawflt_hpfamp);

    cv_cnv_endian_rhfermw( data );
    data += sizeof(rhfermw);

    cv_cnv_endian_rhfermr( data );
    data += sizeof(rhfermr);

    cv_cnv_endian_rhferme( data );
    data += sizeof(rhferme);

    cv_cnv_endian_rhclipmin( data );
    data += sizeof(rhclipmin);

    cv_cnv_endian_rhclipmax( data );
    data += sizeof(rhclipmax);

    cv_cnv_endian_rhdoffset( data );
    data += sizeof(rhdoffset);

    cv_cnv_endian_rhudasave( data );
    data += sizeof(rhudasave);

    cv_cnv_endian_rhsspsave( data );
    data += sizeof(rhsspsave);

    cv_cnv_endian_rh2dscale( data );
    data += sizeof(rh2dscale);

    cv_cnv_endian_rh3dscale( data );
    data += sizeof(rh3dscale);

    cv_cnv_endian_rhnpasses( data );
    data += sizeof(rhnpasses);

    cv_cnv_endian_rhincrpass( data );
    data += sizeof(rhincrpass);

    cv_cnv_endian_rhinitpass( data );
    data += sizeof(rhinitpass);

    cv_cnv_endian_rhmethod( data );
    data += sizeof(rhmethod);

    cv_cnv_endian_rhdaxres( data );
    data += sizeof(rhdaxres);

    cv_cnv_endian_rhdayres( data );
    data += sizeof(rhdayres);

    cv_cnv_endian_rhrcxres( data );
    data += sizeof(rhrcxres);

    cv_cnv_endian_rhrcyres( data );
    data += sizeof(rhrcyres);

    cv_cnv_endian_rhimsize( data );
    data += sizeof(rhimsize);

    cv_cnv_endian_rhnoncart_dual_traj( data );
    data += sizeof(rhnoncart_dual_traj);

    cv_cnv_endian_rhnoncart_traj_kmax_ratio( data );
    data += sizeof(rhnoncart_traj_kmax_ratio);

    cv_cnv_endian_rhnspokes_lowres( data );
    data += sizeof(rhnspokes_lowres);

    cv_cnv_endian_rhnspokes_highres( data );
    data += sizeof(rhnspokes_highres);

    cv_cnv_endian_rhnoncart_traj_merge_start( data );
    data += sizeof(rhnoncart_traj_merge_start);

    cv_cnv_endian_rhnoncart_traj_merge_end( data );
    data += sizeof(rhnoncart_traj_merge_end);

    cv_cnv_endian_rhoversamplingfactor( data );
    data += sizeof(rhoversamplingfactor);

    cv_cnv_endian_rhnoncart_grid_factor( data );
    data += sizeof(rhnoncart_grid_factor);

    cv_cnv_endian_rhnoncart_traj_mode( data );
    data += sizeof(rhnoncart_traj_mode);

    cv_cnv_endian_rhviewSharing3D( data );
    data += sizeof(rhviewSharing3D);

    cv_cnv_endian_rhdaviewsPerBlade( data );
    data += sizeof(rhdaviewsPerBlade);

    cv_cnv_endian_rhrotationThreshold( data );
    data += sizeof(rhrotationThreshold);

    cv_cnv_endian_rhshiftThreshold( data );
    data += sizeof(rhshiftThreshold);

    cv_cnv_endian_rhcorrelationThreshold( data );
    data += sizeof(rhcorrelationThreshold);

    cv_cnv_endian_rhphaseCorrFiltFreqRadius( data );
    data += sizeof(rhphaseCorrFiltFreqRadius);

    cv_cnv_endian_rhphaseCorrFiltPhaseRadius( data );
    data += sizeof(rhphaseCorrFiltPhaseRadius);

    cv_cnv_endian_rhnpwfactor( data );
    data += sizeof(rhnpwfactor);

    cv_cnv_endian_rhuser0( data );
    data += sizeof(rhuser0);

    cv_cnv_endian_rhuser1( data );
    data += sizeof(rhuser1);

    cv_cnv_endian_rhuser2( data );
    data += sizeof(rhuser2);

    cv_cnv_endian_rhuser3( data );
    data += sizeof(rhuser3);

    cv_cnv_endian_rhuser4( data );
    data += sizeof(rhuser4);

    cv_cnv_endian_rhuser5( data );
    data += sizeof(rhuser5);

    cv_cnv_endian_rhuser6( data );
    data += sizeof(rhuser6);

    cv_cnv_endian_rhuser7( data );
    data += sizeof(rhuser7);

    cv_cnv_endian_rhuser8( data );
    data += sizeof(rhuser8);

    cv_cnv_endian_rhuser9( data );
    data += sizeof(rhuser9);

    cv_cnv_endian_rhuser10( data );
    data += sizeof(rhuser10);

    cv_cnv_endian_rhuser11( data );
    data += sizeof(rhuser11);

    cv_cnv_endian_rhuser12( data );
    data += sizeof(rhuser12);

    cv_cnv_endian_rhuser13( data );
    data += sizeof(rhuser13);

    cv_cnv_endian_rhuser14( data );
    data += sizeof(rhuser14);

    cv_cnv_endian_rhuser15( data );
    data += sizeof(rhuser15);

    cv_cnv_endian_rhuser16( data );
    data += sizeof(rhuser16);

    cv_cnv_endian_rhuser17( data );
    data += sizeof(rhuser17);

    cv_cnv_endian_rhuser18( data );
    data += sizeof(rhuser18);

    cv_cnv_endian_rhuser19( data );
    data += sizeof(rhuser19);

    cv_cnv_endian_rhuser20( data );
    data += sizeof(rhuser20);

    cv_cnv_endian_rhuser21( data );
    data += sizeof(rhuser21);

    cv_cnv_endian_rhuser22( data );
    data += sizeof(rhuser22);

    cv_cnv_endian_rhuser23( data );
    data += sizeof(rhuser23);

    cv_cnv_endian_rhuser24( data );
    data += sizeof(rhuser24);

    cv_cnv_endian_rhuser25( data );
    data += sizeof(rhuser25);

    cv_cnv_endian_rhuser26( data );
    data += sizeof(rhuser26);

    cv_cnv_endian_rhuser27( data );
    data += sizeof(rhuser27);

    cv_cnv_endian_rhuser28( data );
    data += sizeof(rhuser28);

    cv_cnv_endian_rhuser29( data );
    data += sizeof(rhuser29);

    cv_cnv_endian_rhuser30( data );
    data += sizeof(rhuser30);

    cv_cnv_endian_rhuser31( data );
    data += sizeof(rhuser31);

    cv_cnv_endian_rhuser32( data );
    data += sizeof(rhuser32);

    cv_cnv_endian_rhuser33( data );
    data += sizeof(rhuser33);

    cv_cnv_endian_rhuser34( data );
    data += sizeof(rhuser34);

    cv_cnv_endian_rhuser35( data );
    data += sizeof(rhuser35);

    cv_cnv_endian_rhuser36( data );
    data += sizeof(rhuser36);

    cv_cnv_endian_rhuser37( data );
    data += sizeof(rhuser37);

    cv_cnv_endian_rhuser38( data );
    data += sizeof(rhuser38);

    cv_cnv_endian_rhuser39( data );
    data += sizeof(rhuser39);

    cv_cnv_endian_rhuser40( data );
    data += sizeof(rhuser40);

    cv_cnv_endian_rhuser41( data );
    data += sizeof(rhuser41);

    cv_cnv_endian_rhuser42( data );
    data += sizeof(rhuser42);

    cv_cnv_endian_rhuser43( data );
    data += sizeof(rhuser43);

    cv_cnv_endian_rhuser44( data );
    data += sizeof(rhuser44);

    cv_cnv_endian_rhuser45( data );
    data += sizeof(rhuser45);

    cv_cnv_endian_rhuser46( data );
    data += sizeof(rhuser46);

    cv_cnv_endian_rhuser47( data );
    data += sizeof(rhuser47);

    cv_cnv_endian_rhuser48( data );
    data += sizeof(rhuser48);

    cv_cnv_endian_rhdab0s( data );
    data += sizeof(rhdab0s);

    cv_cnv_endian_rhdab0e( data );
    data += sizeof(rhdab0e);

    cv_cnv_endian_rhctr( data );
    data += sizeof(rhctr);

    cv_cnv_endian_rhcrrtime( data );
    data += sizeof(rhcrrtime);

    cv_cnv_endian_rhcphases( data );
    data += sizeof(rhcphases);

    cv_cnv_endian_rhaphases( data );
    data += sizeof(rhaphases);

    cv_cnv_endian_rhovl( data );
    data += sizeof(rhovl);

    cv_cnv_endian_rhvtype( data );
    data += sizeof(rhvtype);

    cv_cnv_endian_rhvenc( data );
    data += sizeof(rhvenc);

    cv_cnv_endian_rhvcoefxa( data );
    data += sizeof(rhvcoefxa);

    cv_cnv_endian_rhvcoefxb( data );
    data += sizeof(rhvcoefxb);

    cv_cnv_endian_rhvcoefxc( data );
    data += sizeof(rhvcoefxc);

    cv_cnv_endian_rhvcoefxd( data );
    data += sizeof(rhvcoefxd);

    cv_cnv_endian_rhvcoefya( data );
    data += sizeof(rhvcoefya);

    cv_cnv_endian_rhvcoefyb( data );
    data += sizeof(rhvcoefyb);

    cv_cnv_endian_rhvcoefyc( data );
    data += sizeof(rhvcoefyc);

    cv_cnv_endian_rhvcoefyd( data );
    data += sizeof(rhvcoefyd);

    cv_cnv_endian_rhvcoefza( data );
    data += sizeof(rhvcoefza);

    cv_cnv_endian_rhvcoefzb( data );
    data += sizeof(rhvcoefzb);

    cv_cnv_endian_rhvcoefzc( data );
    data += sizeof(rhvcoefzc);

    cv_cnv_endian_rhvcoefzd( data );
    data += sizeof(rhvcoefzd);

    cv_cnv_endian_rhvmcoef1( data );
    data += sizeof(rhvmcoef1);

    cv_cnv_endian_rhvmcoef2( data );
    data += sizeof(rhvmcoef2);

    cv_cnv_endian_rhvmcoef3( data );
    data += sizeof(rhvmcoef3);

    cv_cnv_endian_rhvmcoef4( data );
    data += sizeof(rhvmcoef4);

    cv_cnv_endian_rhphasescale( data );
    data += sizeof(rhphasescale);

    cv_cnv_endian_rhfreqscale( data );
    data += sizeof(rhfreqscale);

    cv_cnv_endian_rawmode( data );
    data += sizeof(rawmode);

    cv_cnv_endian_rhileaves( data );
    data += sizeof(rhileaves);

    cv_cnv_endian_rhkydir( data );
    data += sizeof(rhkydir);

    cv_cnv_endian_rhalt( data );
    data += sizeof(rhalt);

    cv_cnv_endian_rhreps( data );
    data += sizeof(rhreps);

    cv_cnv_endian_rhref( data );
    data += sizeof(rhref);

    cv_cnv_endian_rhpcthrespts( data );
    data += sizeof(rhpcthrespts);

    cv_cnv_endian_rhpcthrespct( data );
    data += sizeof(rhpcthrespct);

    cv_cnv_endian_rhpcdiscbeg( data );
    data += sizeof(rhpcdiscbeg);

    cv_cnv_endian_rhpcdiscmid( data );
    data += sizeof(rhpcdiscmid);

    cv_cnv_endian_rhpcdiscend( data );
    data += sizeof(rhpcdiscend);

    cv_cnv_endian_rhpcileave( data );
    data += sizeof(rhpcileave);

    cv_cnv_endian_rhpcextcorr( data );
    data += sizeof(rhpcextcorr);

    cv_cnv_endian_rhrefframes( data );
    data += sizeof(rhrefframes);

    cv_cnv_endian_rhpcsnore( data );
    data += sizeof(rhpcsnore);

    cv_cnv_endian_rhpcspacial( data );
    data += sizeof(rhpcspacial);

    cv_cnv_endian_rhpctemporal( data );
    data += sizeof(rhpctemporal);

    cv_cnv_endian_rhpcbestky( data );
    data += sizeof(rhpcbestky);

    cv_cnv_endian_rhhdbestky( data );
    data += sizeof(rhhdbestky);

    cv_cnv_endian_rhpcinvft( data );
    data += sizeof(rhpcinvft);

    cv_cnv_endian_rhpcctrl( data );
    data += sizeof(rhpcctrl);

    cv_cnv_endian_rhpctest( data );
    data += sizeof(rhpctest);

    cv_cnv_endian_rhpcgraph( data );
    data += sizeof(rhpcgraph);

    cv_cnv_endian_rhpclin( data );
    data += sizeof(rhpclin);

    cv_cnv_endian_rhpclinnorm( data );
    data += sizeof(rhpclinnorm);

    cv_cnv_endian_rhpclinnpts( data );
    data += sizeof(rhpclinnpts);

    cv_cnv_endian_rhpclinorder( data );
    data += sizeof(rhpclinorder);

    cv_cnv_endian_rhpclinfitwt( data );
    data += sizeof(rhpclinfitwt);

    cv_cnv_endian_rhpclinavg( data );
    data += sizeof(rhpclinavg);

    cv_cnv_endian_rhpccon( data );
    data += sizeof(rhpccon);

    cv_cnv_endian_rhpcconnorm( data );
    data += sizeof(rhpcconnorm);

    cv_cnv_endian_rhpcconnpts( data );
    data += sizeof(rhpcconnpts);

    cv_cnv_endian_rhpcconorder( data );
    data += sizeof(rhpcconorder);

    cv_cnv_endian_rhpcconfitwt( data );
    data += sizeof(rhpcconfitwt);

    cv_cnv_endian_rhvrgfxres( data );
    data += sizeof(rhvrgfxres);

    cv_cnv_endian_rhvrgf( data );
    data += sizeof(rhvrgf);

    cv_cnv_endian_rhbp_corr( data );
    data += sizeof(rhbp_corr);

    cv_cnv_endian_rhrecv_freq_s( data );
    data += sizeof(rhrecv_freq_s);

    cv_cnv_endian_rhrecv_freq_e( data );
    data += sizeof(rhrecv_freq_e);

    cv_cnv_endian_rhhniter( data );
    data += sizeof(rhhniter);

    cv_cnv_endian_rhfast_rec( data );
    data += sizeof(rhfast_rec);

    cv_cnv_endian_rhgridcontrol( data );
    data += sizeof(rhgridcontrol);

    cv_cnv_endian_rhb0map( data );
    data += sizeof(rhb0map);

    cv_cnv_endian_rhtediff( data );
    data += sizeof(rhtediff);

    cv_cnv_endian_rhradiusa( data );
    data += sizeof(rhradiusa);

    cv_cnv_endian_rhradiusb( data );
    data += sizeof(rhradiusb);

    cv_cnv_endian_rhmaxgrad( data );
    data += sizeof(rhmaxgrad);

    cv_cnv_endian_rhslewmax( data );
    data += sizeof(rhslewmax);

    cv_cnv_endian_rhscanfov( data );
    data += sizeof(rhscanfov);

    cv_cnv_endian_rhtsamp( data );
    data += sizeof(rhtsamp);

    cv_cnv_endian_rhdensityfactor( data );
    data += sizeof(rhdensityfactor);

    cv_cnv_endian_rhdispfov( data );
    data += sizeof(rhdispfov);

    cv_cnv_endian_rhmotioncomp( data );
    data += sizeof(rhmotioncomp);

    cv_cnv_endian_grid_fov_factor( data );
    data += sizeof(grid_fov_factor);

    cv_cnv_endian_rhte( data );
    data += sizeof(rhte);

    cv_cnv_endian_rhte2( data );
    data += sizeof(rhte2);

    cv_cnv_endian_rhdfm( data );
    data += sizeof(rhdfm);

    cv_cnv_endian_rhdfmnavsperpass( data );
    data += sizeof(rhdfmnavsperpass);

    cv_cnv_endian_rhdfmnavsperview( data );
    data += sizeof(rhdfmnavsperview);

    cv_cnv_endian_rhdfmrbw( data );
    data += sizeof(rhdfmrbw);

    cv_cnv_endian_rhdfmptsize( data );
    data += sizeof(rhdfmptsize);

    cv_cnv_endian_rhdfmxres( data );
    data += sizeof(rhdfmxres);

    cv_cnv_endian_rhdfmdebug( data );
    data += sizeof(rhdfmdebug);

    cv_cnv_endian_rhdfmthreshold( data );
    data += sizeof(rhdfmthreshold);

    cv_cnv_endian_rh_rc_enhance_enable( data );
    data += sizeof(rh_rc_enhance_enable);

    cv_cnv_endian_rh_ime_scic_enable( data );
    data += sizeof(rh_ime_scic_enable);

    cv_cnv_endian_rh_ime_scic_edge( data );
    data += sizeof(rh_ime_scic_edge);

    cv_cnv_endian_rh_ime_scic_smooth( data );
    data += sizeof(rh_ime_scic_smooth);

    cv_cnv_endian_rh_ime_scic_focus( data );
    data += sizeof(rh_ime_scic_focus);

    cv_cnv_endian_rh_ime_clariview_type( data );
    data += sizeof(rh_ime_clariview_type);

    cv_cnv_endian_rh_ime_clariview_edge( data );
    data += sizeof(rh_ime_clariview_edge);

    cv_cnv_endian_rh_ime_clariview_smooth( data );
    data += sizeof(rh_ime_clariview_smooth);

    cv_cnv_endian_rh_ime_clariview_focus( data );
    data += sizeof(rh_ime_clariview_focus);

    cv_cnv_endian_rh_ime_definefilter_nr( data );
    data += sizeof(rh_ime_definefilter_nr);

    cv_cnv_endian_rh_ime_definefilter_sh( data );
    data += sizeof(rh_ime_definefilter_sh);

    cv_cnv_endian_rh_ime_scic_reduction( data );
    data += sizeof(rh_ime_scic_reduction);

    cv_cnv_endian_rh_ime_scic_gauss( data );
    data += sizeof(rh_ime_scic_gauss);

    cv_cnv_endian_rh_ime_scic_threshold( data );
    data += sizeof(rh_ime_scic_threshold);

    cv_cnv_endian_rh_ime_scic_contrast( data );
    data += sizeof(rh_ime_scic_contrast);

    cv_cnv_endian_cfscic_allowed( data );
    data += sizeof(cfscic_allowed);

    cv_cnv_endian_cfscic_edge( data );
    data += sizeof(cfscic_edge);

    cv_cnv_endian_cfscic_smooth( data );
    data += sizeof(cfscic_smooth);

    cv_cnv_endian_cfscic_focus( data );
    data += sizeof(cfscic_focus);

    cv_cnv_endian_cfscic_reduction( data );
    data += sizeof(cfscic_reduction);

    cv_cnv_endian_cfscic_gauss( data );
    data += sizeof(cfscic_gauss);

    cv_cnv_endian_cfscic_threshold( data );
    data += sizeof(cfscic_threshold);

    cv_cnv_endian_cfscic_contrast( data );
    data += sizeof(cfscic_contrast);

    cv_cnv_endian_piscic( data );
    data += sizeof(piscic);

    cv_cnv_endian_cfscenic( data );
    data += sizeof(cfscenic);

    cv_cnv_endian_piscenic( data );
    data += sizeof(piscenic);

    cv_cnv_endian_opscenic( data );
    data += sizeof(opscenic);

    cv_cnv_endian_rhscenic_type( data );
    data += sizeof(rhscenic_type);

    cv_cnv_endian_cfn4_allowed( data );
    data += sizeof(cfn4_allowed);

    cv_cnv_endian_cfn4_slice_down_sample_rate( data );
    data += sizeof(cfn4_slice_down_sample_rate);

    cv_cnv_endian_cfn4_inplane_down_sample_rate( data );
    data += sizeof(cfn4_inplane_down_sample_rate);

    cv_cnv_endian_cfn4_num_levels_max( data );
    data += sizeof(cfn4_num_levels_max);

    cv_cnv_endian_cfn4_num_iterations_max( data );
    data += sizeof(cfn4_num_iterations_max);

    cv_cnv_endian_cfn4_convergence_threshold( data );
    data += sizeof(cfn4_convergence_threshold);

    cv_cnv_endian_cfn4_gain_clamp_mode( data );
    data += sizeof(cfn4_gain_clamp_mode);

    cv_cnv_endian_cfn4_gain_clamp_value( data );
    data += sizeof(cfn4_gain_clamp_value);

    cv_cnv_endian_rhn4_slice_down_sample_rate( data );
    data += sizeof(rhn4_slice_down_sample_rate);

    cv_cnv_endian_rhn4_inplane_down_sample_rate( data );
    data += sizeof(rhn4_inplane_down_sample_rate);

    cv_cnv_endian_rhn4_num_levels_max( data );
    data += sizeof(rhn4_num_levels_max);

    cv_cnv_endian_rhn4_num_iterations_max( data );
    data += sizeof(rhn4_num_iterations_max);

    cv_cnv_endian_rhn4_convergence_threshold( data );
    data += sizeof(rhn4_convergence_threshold);

    cv_cnv_endian_rhn4_gain_clamp_mode( data );
    data += sizeof(rhn4_gain_clamp_mode);

    cv_cnv_endian_rhn4_gain_clamp_value( data );
    data += sizeof(rhn4_gain_clamp_value);

    cv_cnv_endian_rhpure_gain_clamp_mode( data );
    data += sizeof(rhpure_gain_clamp_mode);

    cv_cnv_endian_rhpure_gain_clamp_value( data );
    data += sizeof(rhpure_gain_clamp_value);

    cv_cnv_endian_rhphsen_pixel_offset( data );
    data += sizeof(rhphsen_pixel_offset);

    cv_cnv_endian_rhapp( data );
    data += sizeof(rhapp);

    cv_cnv_endian_rhapp_option( data );
    data += sizeof(rhapp_option);

    cv_cnv_endian_rhncoilsel( data );
    data += sizeof(rhncoilsel);

    cv_cnv_endian_rhncoillimit( data );
    data += sizeof(rhncoillimit);

    cv_cnv_endian_rhrefframep( data );
    data += sizeof(rhrefframep);

    cv_cnv_endian_rhscnframe( data );
    data += sizeof(rhscnframe);

    cv_cnv_endian_rhpasframe( data );
    data += sizeof(rhpasframe);

    cv_cnv_endian_rhpcfitorig( data );
    data += sizeof(rhpcfitorig);

    cv_cnv_endian_rhpcshotfirst( data );
    data += sizeof(rhpcshotfirst);

    cv_cnv_endian_rhpcshotlast( data );
    data += sizeof(rhpcshotlast);

    cv_cnv_endian_rhpcmultegrp( data );
    data += sizeof(rhpcmultegrp);

    cv_cnv_endian_rhpclinfix( data );
    data += sizeof(rhpclinfix);

    cv_cnv_endian_rhpclinslope( data );
    data += sizeof(rhpclinslope);

    cv_cnv_endian_rhpcconfix( data );
    data += sizeof(rhpcconfix);

    cv_cnv_endian_rhpcconslope( data );
    data += sizeof(rhpcconslope);

    cv_cnv_endian_rhpccoil( data );
    data += sizeof(rhpccoil);

    cv_cnv_endian_rhmaxcoef1a( data );
    data += sizeof(rhmaxcoef1a);

    cv_cnv_endian_rhmaxcoef1b( data );
    data += sizeof(rhmaxcoef1b);

    cv_cnv_endian_rhmaxcoef1c( data );
    data += sizeof(rhmaxcoef1c);

    cv_cnv_endian_rhmaxcoef1d( data );
    data += sizeof(rhmaxcoef1d);

    cv_cnv_endian_rhmaxcoef2a( data );
    data += sizeof(rhmaxcoef2a);

    cv_cnv_endian_rhmaxcoef2b( data );
    data += sizeof(rhmaxcoef2b);

    cv_cnv_endian_rhmaxcoef2c( data );
    data += sizeof(rhmaxcoef2c);

    cv_cnv_endian_rhmaxcoef2d( data );
    data += sizeof(rhmaxcoef2d);

    cv_cnv_endian_rhmaxcoef3a( data );
    data += sizeof(rhmaxcoef3a);

    cv_cnv_endian_rhmaxcoef3b( data );
    data += sizeof(rhmaxcoef3b);

    cv_cnv_endian_rhmaxcoef3c( data );
    data += sizeof(rhmaxcoef3c);

    cv_cnv_endian_rhmaxcoef3d( data );
    data += sizeof(rhmaxcoef3d);

    cv_cnv_endian_rhdptype( data );
    data += sizeof(rhdptype);

    cv_cnv_endian_rhnumbvals( data );
    data += sizeof(rhnumbvals);

    cv_cnv_endian_rhdifnext2( data );
    data += sizeof(rhdifnext2);

    cv_cnv_endian_rhnumdifdirs( data );
    data += sizeof(rhnumdifdirs);

    cv_cnv_endian_rhutctrl( data );
    data += sizeof(rhutctrl);

    cv_cnv_endian_rhzipfact( data );
    data += sizeof(rhzipfact);

    cv_cnv_endian_rhfcinemode( data );
    data += sizeof(rhfcinemode);

    cv_cnv_endian_rhfcinearw( data );
    data += sizeof(rhfcinearw);

    cv_cnv_endian_rhvps( data );
    data += sizeof(rhvps);

    cv_cnv_endian_rhvvsaimgs( data );
    data += sizeof(rhvvsaimgs);

    cv_cnv_endian_rhvvstr( data );
    data += sizeof(rhvvstr);

    cv_cnv_endian_rhvvsgender( data );
    data += sizeof(rhvvsgender);

    cv_cnv_endian_rhgradmode( data );
    data += sizeof(rhgradmode);

    cv_cnv_endian_rhfatwater( data );
    data += sizeof(rhfatwater);

    cv_cnv_endian_rhfiesta( data );
    data += sizeof(rhfiesta);

    cv_cnv_endian_rhlcfiesta( data );
    data += sizeof(rhlcfiesta);

    cv_cnv_endian_rhlcfiesta_phase( data );
    data += sizeof(rhlcfiesta_phase);

    cv_cnv_endian_rhdwnavview( data );
    data += sizeof(rhdwnavview);

    cv_cnv_endian_rhdwnavcorecho( data );
    data += sizeof(rhdwnavcorecho);

    cv_cnv_endian_rhdwnavsview( data );
    data += sizeof(rhdwnavsview);

    cv_cnv_endian_rhdwnaveview( data );
    data += sizeof(rhdwnaveview);

    cv_cnv_endian_rhdwnavsshot( data );
    data += sizeof(rhdwnavsshot);

    cv_cnv_endian_rhdwnaveshot( data );
    data += sizeof(rhdwnaveshot);

    cv_cnv_endian_rhdwnavcoeff( data );
    data += sizeof(rhdwnavcoeff);

    cv_cnv_endian_rhdwnavcor( data );
    data += sizeof(rhdwnavcor);

    cv_cnv_endian_rhassetsl_R( data );
    data += sizeof(rhassetsl_R);

    cv_cnv_endian_rhasset_slwrap( data );
    data += sizeof(rhasset_slwrap);

    cv_cnv_endian_rh3dwintype( data );
    data += sizeof(rh3dwintype);

    cv_cnv_endian_rh3dwina( data );
    data += sizeof(rh3dwina);

    cv_cnv_endian_rh3dwinq( data );
    data += sizeof(rh3dwinq);

    cv_cnv_endian_rhectricks_num_regions( data );
    data += sizeof(rhectricks_num_regions);

    cv_cnv_endian_rhectricks_input_regions( data );
    data += sizeof(rhectricks_input_regions);

    cv_cnv_endian_rhretro_control( data );
    data += sizeof(rhretro_control);

    cv_cnv_endian_rhetl( data );
    data += sizeof(rhetl);

    cv_cnv_endian_rhleft_blank( data );
    data += sizeof(rhleft_blank);

    cv_cnv_endian_rhright_blank( data );
    data += sizeof(rhright_blank);

    cv_cnv_endian_rhspecwidth( data );
    data += sizeof(rhspecwidth);

    cv_cnv_endian_rhspeccsidims( data );
    data += sizeof(rhspeccsidims);

    cv_cnv_endian_rhspecrescsix( data );
    data += sizeof(rhspecrescsix);

    cv_cnv_endian_rhspecrescsiy( data );
    data += sizeof(rhspecrescsiy);

    cv_cnv_endian_rhspecrescsiz( data );
    data += sizeof(rhspecrescsiz);

    cv_cnv_endian_rhspecroilenx( data );
    data += sizeof(rhspecroilenx);

    cv_cnv_endian_rhspecroileny( data );
    data += sizeof(rhspecroileny);

    cv_cnv_endian_rhspecroilenz( data );
    data += sizeof(rhspecroilenz);

    cv_cnv_endian_rhspecroilocx( data );
    data += sizeof(rhspecroilocx);

    cv_cnv_endian_rhspecroilocy( data );
    data += sizeof(rhspecroilocy);

    cv_cnv_endian_rhspecroilocz( data );
    data += sizeof(rhspecroilocz);

    cv_cnv_endian_rhexciterusage( data );
    data += sizeof(rhexciterusage);

    cv_cnv_endian_rhexciterfreqs( data );
    data += sizeof(rhexciterfreqs);

    cv_cnv_endian_rhwiener( data );
    data += sizeof(rhwiener);

    cv_cnv_endian_rhwienera( data );
    data += sizeof(rhwienera);

    cv_cnv_endian_rhwienerb( data );
    data += sizeof(rhwienerb);

    cv_cnv_endian_rhwienert2( data );
    data += sizeof(rhwienert2);

    cv_cnv_endian_rhwieneresp( data );
    data += sizeof(rhwieneresp);

    cv_cnv_endian_rhflipfilter( data );
    data += sizeof(rhflipfilter);

    cv_cnv_endian_rhdbgrecon( data );
    data += sizeof(rhdbgrecon);

    cv_cnv_endian_rhech2skip( data );
    data += sizeof(rhech2skip);

    cv_cnv_endian_rhrcideal( data );
    data += sizeof(rhrcideal);

    cv_cnv_endian_rhrcdixproc( data );
    data += sizeof(rhrcdixproc);

    cv_cnv_endian_rhrcidealctrl( data );
    data += sizeof(rhrcidealctrl);

    cv_cnv_endian_rhdf( data );
    data += sizeof(rhdf);

    cv_cnv_endian_rhmedal_mode( data );
    data += sizeof(rhmedal_mode);

    cv_cnv_endian_rhmedal_nstack_size( data );
    data += sizeof(rhmedal_nstack_size);

    cv_cnv_endian_rhmedal_echo_order( data );
    data += sizeof(rhmedal_echo_order);

    cv_cnv_endian_rhmedal_up_kernel_size( data );
    data += sizeof(rhmedal_up_kernel_size);

    cv_cnv_endian_rhmedal_down_kernel_size( data );
    data += sizeof(rhmedal_down_kernel_size);

    cv_cnv_endian_rhmedal_smooth_kernel_size( data );
    data += sizeof(rhmedal_smooth_kernel_size);

    cv_cnv_endian_rhmedal_starting_slice( data );
    data += sizeof(rhmedal_starting_slice);

    cv_cnv_endian_rhmedal_ending_slice( data );
    data += sizeof(rhmedal_ending_slice);

    cv_cnv_endian_rhmedal_param( data );
    data += sizeof(rhmedal_param);

    cv_cnv_endian_rhvibrant( data );
    data += sizeof(rhvibrant);

    cv_cnv_endian_rhkacq_uid( data );
    data += sizeof(rhkacq_uid);

    cv_cnv_endian_rhnex_unacquired( data );
    data += sizeof(rhnex_unacquired);

    cv_cnv_endian_rhdiskacqctrl( data );
    data += sizeof(rhdiskacqctrl);

    cv_cnv_endian_rhechopc_extra_bot( data );
    data += sizeof(rhechopc_extra_bot);

    cv_cnv_endian_rhechopc_ylines( data );
    data += sizeof(rhechopc_ylines);

    cv_cnv_endian_rhechopc_primary_yfirst( data );
    data += sizeof(rhechopc_primary_yfirst);

    cv_cnv_endian_rhechopc_reverse_yfirst( data );
    data += sizeof(rhechopc_reverse_yfirst);

    cv_cnv_endian_rhechopc_zlines( data );
    data += sizeof(rhechopc_zlines);

    cv_cnv_endian_rhechopc_yxfitorder( data );
    data += sizeof(rhechopc_yxfitorder);

    cv_cnv_endian_rhechopc_ctrl( data );
    data += sizeof(rhechopc_ctrl);

    cv_cnv_endian_rhchannel_combine_filter_type( data );
    data += sizeof(rhchannel_combine_filter_type);

    cv_cnv_endian_rhchannel_combine_filter_width( data );
    data += sizeof(rhchannel_combine_filter_width);

    cv_cnv_endian_rhchannel_combine_filter_beta( data );
    data += sizeof(rhchannel_combine_filter_beta);

    cv_cnv_endian_rh_low_pass_nex_filter_width( data );
    data += sizeof(rh_low_pass_nex_filter_width);

    cv_cnv_endian_rh3dgw_interptype( data );
    data += sizeof(rh3dgw_interptype);

    cv_cnv_endian_rhrc3dcinectrl( data );
    data += sizeof(rhrc3dcinectrl);

    cv_cnv_endian_rhncycles_cine( data );
    data += sizeof(rhncycles_cine);

    cv_cnv_endian_rhnvircchannel( data );
    data += sizeof(rhnvircchannel);

    cv_cnv_endian_rhrc_cardt1map_ctrl( data );
    data += sizeof(rhrc_cardt1map_ctrl);

    cv_cnv_endian_rhrc_moco_ctrl( data );
    data += sizeof(rhrc_moco_ctrl);

    cv_cnv_endian_rhrc_algorithm_ctrl( data );
    data += sizeof(rhrc_algorithm_ctrl);

    cv_cnv_endian_ihtr( data );
    data += sizeof(ihtr);

    cv_cnv_endian_ihti( data );
    data += sizeof(ihti);

    cv_cnv_endian_ihtdel1( data );
    data += sizeof(ihtdel1);

    cv_cnv_endian_ihnex( data );
    data += sizeof(ihnex);

    cv_cnv_endian_ihflip( data );
    data += sizeof(ihflip);

    cv_cnv_endian_ihte1( data );
    data += sizeof(ihte1);

    cv_cnv_endian_ihte2( data );
    data += sizeof(ihte2);

    cv_cnv_endian_ihte3( data );
    data += sizeof(ihte3);

    cv_cnv_endian_ihte4( data );
    data += sizeof(ihte4);

    cv_cnv_endian_ihte5( data );
    data += sizeof(ihte5);

    cv_cnv_endian_ihte6( data );
    data += sizeof(ihte6);

    cv_cnv_endian_ihte7( data );
    data += sizeof(ihte7);

    cv_cnv_endian_ihte8( data );
    data += sizeof(ihte8);

    cv_cnv_endian_ihte9( data );
    data += sizeof(ihte9);

    cv_cnv_endian_ihte10( data );
    data += sizeof(ihte10);

    cv_cnv_endian_ihte11( data );
    data += sizeof(ihte11);

    cv_cnv_endian_ihte12( data );
    data += sizeof(ihte12);

    cv_cnv_endian_ihte13( data );
    data += sizeof(ihte13);

    cv_cnv_endian_ihte14( data );
    data += sizeof(ihte14);

    cv_cnv_endian_ihte15( data );
    data += sizeof(ihte15);

    cv_cnv_endian_ihte16( data );
    data += sizeof(ihte16);

    cv_cnv_endian_ihdixonte( data );
    data += sizeof(ihdixonte);

    cv_cnv_endian_ihdixonipte( data );
    data += sizeof(ihdixonipte);

    cv_cnv_endian_ihdixonoopte( data );
    data += sizeof(ihdixonoopte);

    cv_cnv_endian_ihvbw1( data );
    data += sizeof(ihvbw1);

    cv_cnv_endian_ihvbw2( data );
    data += sizeof(ihvbw2);

    cv_cnv_endian_ihvbw3( data );
    data += sizeof(ihvbw3);

    cv_cnv_endian_ihvbw4( data );
    data += sizeof(ihvbw4);

    cv_cnv_endian_ihvbw5( data );
    data += sizeof(ihvbw5);

    cv_cnv_endian_ihvbw6( data );
    data += sizeof(ihvbw6);

    cv_cnv_endian_ihvbw7( data );
    data += sizeof(ihvbw7);

    cv_cnv_endian_ihvbw8( data );
    data += sizeof(ihvbw8);

    cv_cnv_endian_ihvbw9( data );
    data += sizeof(ihvbw9);

    cv_cnv_endian_ihvbw10( data );
    data += sizeof(ihvbw10);

    cv_cnv_endian_ihvbw11( data );
    data += sizeof(ihvbw11);

    cv_cnv_endian_ihvbw12( data );
    data += sizeof(ihvbw12);

    cv_cnv_endian_ihvbw13( data );
    data += sizeof(ihvbw13);

    cv_cnv_endian_ihvbw14( data );
    data += sizeof(ihvbw14);

    cv_cnv_endian_ihvbw15( data );
    data += sizeof(ihvbw15);

    cv_cnv_endian_ihvbw16( data );
    data += sizeof(ihvbw16);

    cv_cnv_endian_ihnegscanspacing( data );
    data += sizeof(ihnegscanspacing);

    cv_cnv_endian_ihoffsetfreq( data );
    data += sizeof(ihoffsetfreq);

    cv_cnv_endian_ihbsoffsetfreq( data );
    data += sizeof(ihbsoffsetfreq);

    cv_cnv_endian_iheesp( data );
    data += sizeof(iheesp);

    cv_cnv_endian_ihfcineim( data );
    data += sizeof(ihfcineim);

    cv_cnv_endian_ihfcinent( data );
    data += sizeof(ihfcinent);

    cv_cnv_endian_ihbspti( data );
    data += sizeof(ihbspti);

    cv_cnv_endian_ihtagfa( data );
    data += sizeof(ihtagfa);

    cv_cnv_endian_ihtagor( data );
    data += sizeof(ihtagor);

    cv_cnv_endian_ih_idealdbg_cv1( data );
    data += sizeof(ih_idealdbg_cv1);

    cv_cnv_endian_ih_idealdbg_cv2( data );
    data += sizeof(ih_idealdbg_cv2);

    cv_cnv_endian_ih_idealdbg_cv3( data );
    data += sizeof(ih_idealdbg_cv3);

    cv_cnv_endian_ih_idealdbg_cv4( data );
    data += sizeof(ih_idealdbg_cv4);

    cv_cnv_endian_ih_idealdbg_cv5( data );
    data += sizeof(ih_idealdbg_cv5);

    cv_cnv_endian_ih_idealdbg_cv6( data );
    data += sizeof(ih_idealdbg_cv6);

    cv_cnv_endian_ih_idealdbg_cv7( data );
    data += sizeof(ih_idealdbg_cv7);

    cv_cnv_endian_ih_idealdbg_cv8( data );
    data += sizeof(ih_idealdbg_cv8);

    cv_cnv_endian_ih_idealdbg_cv9( data );
    data += sizeof(ih_idealdbg_cv9);

    cv_cnv_endian_ih_idealdbg_cv10( data );
    data += sizeof(ih_idealdbg_cv10);

    cv_cnv_endian_ih_idealdbg_cv11( data );
    data += sizeof(ih_idealdbg_cv11);

    cv_cnv_endian_ih_idealdbg_cv12( data );
    data += sizeof(ih_idealdbg_cv12);

    cv_cnv_endian_ih_idealdbg_cv13( data );
    data += sizeof(ih_idealdbg_cv13);

    cv_cnv_endian_ih_idealdbg_cv14( data );
    data += sizeof(ih_idealdbg_cv14);

    cv_cnv_endian_ih_idealdbg_cv15( data );
    data += sizeof(ih_idealdbg_cv15);

    cv_cnv_endian_ih_idealdbg_cv16( data );
    data += sizeof(ih_idealdbg_cv16);

    cv_cnv_endian_ih_idealdbg_cv17( data );
    data += sizeof(ih_idealdbg_cv17);

    cv_cnv_endian_ih_idealdbg_cv18( data );
    data += sizeof(ih_idealdbg_cv18);

    cv_cnv_endian_ih_idealdbg_cv19( data );
    data += sizeof(ih_idealdbg_cv19);

    cv_cnv_endian_ih_idealdbg_cv20( data );
    data += sizeof(ih_idealdbg_cv20);

    cv_cnv_endian_ih_idealdbg_cv21( data );
    data += sizeof(ih_idealdbg_cv21);

    cv_cnv_endian_ih_idealdbg_cv22( data );
    data += sizeof(ih_idealdbg_cv22);

    cv_cnv_endian_ih_idealdbg_cv23( data );
    data += sizeof(ih_idealdbg_cv23);

    cv_cnv_endian_ih_idealdbg_cv24( data );
    data += sizeof(ih_idealdbg_cv24);

    cv_cnv_endian_ih_idealdbg_cv25( data );
    data += sizeof(ih_idealdbg_cv25);

    cv_cnv_endian_ih_idealdbg_cv26( data );
    data += sizeof(ih_idealdbg_cv26);

    cv_cnv_endian_ih_idealdbg_cv27( data );
    data += sizeof(ih_idealdbg_cv27);

    cv_cnv_endian_ih_idealdbg_cv28( data );
    data += sizeof(ih_idealdbg_cv28);

    cv_cnv_endian_ih_idealdbg_cv29( data );
    data += sizeof(ih_idealdbg_cv29);

    cv_cnv_endian_ih_idealdbg_cv30( data );
    data += sizeof(ih_idealdbg_cv30);

    cv_cnv_endian_ih_idealdbg_cv31( data );
    data += sizeof(ih_idealdbg_cv31);

    cv_cnv_endian_ih_idealdbg_cv32( data );
    data += sizeof(ih_idealdbg_cv32);

    cv_cnv_endian_ihlabeltime( data );
    data += sizeof(ihlabeltime);

    cv_cnv_endian_ihpostlabeldelay( data );
    data += sizeof(ihpostlabeldelay);

    cv_cnv_endian_ihnew_series( data );
    data += sizeof(ihnew_series);

    cv_cnv_endian_ihcardt1map_hb_pattern( data );
    data += sizeof(ihcardt1map_hb_pattern);

    cv_cnv_endian_dbdt_option_key_status( data );
    data += sizeof(dbdt_option_key_status);

    cv_cnv_endian_dbdt_mode( data );
    data += sizeof(dbdt_mode);

    cv_cnv_endian_opsarmode( data );
    data += sizeof(opsarmode);

    cv_cnv_endian_cfdbdttype( data );
    data += sizeof(cfdbdttype);

    cv_cnv_endian_cfrinf( data );
    data += sizeof(cfrinf);

    cv_cnv_endian_cfrfact( data );
    data += sizeof(cfrfact);

    cv_cnv_endian_cfdbdtper_norm( data );
    data += sizeof(cfdbdtper_norm);

    cv_cnv_endian_cfdbdtper_cont( data );
    data += sizeof(cfdbdtper_cont);

    cv_cnv_endian_cfdbdtper_max( data );
    data += sizeof(cfdbdtper_max);

    cv_cnv_endian_cfnumicn( data );
    data += sizeof(cfnumicn);

    cv_cnv_endian_cfdppericn( data );
    data += sizeof(cfdppericn);

    cv_cnv_endian_cfgradcoil( data );
    data += sizeof(cfgradcoil);

    cv_cnv_endian_cfswgut( data );
    data += sizeof(cfswgut);

    cv_cnv_endian_cfswrfut( data );
    data += sizeof(cfswrfut);

    cv_cnv_endian_cfswssput( data );
    data += sizeof(cfswssput);

    cv_cnv_endian_cfhwgut( data );
    data += sizeof(cfhwgut);

    cv_cnv_endian_cfhwrfut( data );
    data += sizeof(cfhwrfut);

    cv_cnv_endian_cfhwssput( data );
    data += sizeof(cfhwssput);

    cv_cnv_endian_cfoption( data );
    data += sizeof(cfoption);

    cv_cnv_endian_cfrfboardtype( data );
    data += sizeof(cfrfboardtype);

    cv_cnv_endian_psd_board_type( data );
    data += sizeof(psd_board_type);

    cv_cnv_endian_opdfm( data );
    data += sizeof(opdfm);

    cv_cnv_endian_opdfmprescan( data );
    data += sizeof(opdfmprescan);

    cv_cnv_endian_cfdfm( data );
    data += sizeof(cfdfm);

    cv_cnv_endian_cfdfmTG( data );
    data += sizeof(cfdfmTG);

    cv_cnv_endian_cfdfmR1( data );
    data += sizeof(cfdfmR1);

    cv_cnv_endian_cfdfmDX( data );
    data += sizeof(cfdfmDX);

    cv_cnv_endian_derate_ACGD( data );
    data += sizeof(derate_ACGD);

    cv_cnv_endian_rhextra_frames_top( data );
    data += sizeof(rhextra_frames_top);

    cv_cnv_endian_rhextra_frames_bot( data );
    data += sizeof(rhextra_frames_bot);

    cv_cnv_endian_rhpc_ref_start( data );
    data += sizeof(rhpc_ref_start);

    cv_cnv_endian_rhpc_ref_stop( data );
    data += sizeof(rhpc_ref_stop);

    cv_cnv_endian_rhpc_ref_skip( data );
    data += sizeof(rhpc_ref_skip);

    cv_cnv_endian_opaxial_slice( data );
    data += sizeof(opaxial_slice);

    cv_cnv_endian_opsagittal_slice( data );
    data += sizeof(opsagittal_slice);

    cv_cnv_endian_opcoronal_slice( data );
    data += sizeof(opcoronal_slice);

    cv_cnv_endian_opvrg( data );
    data += sizeof(opvrg);

    cv_cnv_endian_opmart( data );
    data += sizeof(opmart);

    cv_cnv_endian_piassetscrn( data );
    data += sizeof(piassetscrn);

    cv_cnv_endian_opseriessave( data );
    data += sizeof(opseriessave);

    cv_cnv_endian_opt1map( data );
    data += sizeof(opt1map);

    cv_cnv_endian_opt2map( data );
    data += sizeof(opt2map);

    cv_cnv_endian_opmer2( data );
    data += sizeof(opmer2);

    cv_cnv_endian_rhnew_wnd_level_flag( data );
    data += sizeof(rhnew_wnd_level_flag);

    cv_cnv_endian_rhwnd_image_hist_area( data );
    data += sizeof(rhwnd_image_hist_area);

    cv_cnv_endian_rhwnd_high_hist( data );
    data += sizeof(rhwnd_high_hist);

    cv_cnv_endian_rhwnd_lower_hist( data );
    data += sizeof(rhwnd_lower_hist);

    cv_cnv_endian_rhrcmavric_control( data );
    data += sizeof(rhrcmavric_control);

    cv_cnv_endian_rhrcmavric_image( data );
    data += sizeof(rhrcmavric_image);

    cv_cnv_endian_rhrcmavric_bin_separation( data );
    data += sizeof(rhrcmavric_bin_separation);

    cv_cnv_endian_cfrfupa( data );
    data += sizeof(cfrfupa);

    cv_cnv_endian_cfrfupd( data );
    data += sizeof(cfrfupd);

    cv_cnv_endian_cfrfminblank( data );
    data += sizeof(cfrfminblank);

    cv_cnv_endian_cfrfminunblk( data );
    data += sizeof(cfrfminunblk);

    cv_cnv_endian_cfrfminblanktorcv( data );
    data += sizeof(cfrfminblanktorcv);

    cv_cnv_endian_cfrfampftconst( data );
    data += sizeof(cfrfampftconst);

    cv_cnv_endian_cfrfampftlinear( data );
    data += sizeof(cfrfampftlinear);

    cv_cnv_endian_cfrfampftquadratic( data );
    data += sizeof(cfrfampftquadratic);

    cv_cnv_endian_opradialrx( data );
    data += sizeof(opradialrx);

    cv_cnv_endian_cfsupportreceivefreqbands( data );
    data += sizeof(cfsupportreceivefreqbands);

    cv_cnv_endian_cfcntfreefreqlow( data );
    data += sizeof(cfcntfreefreqlow);

    cv_cnv_endian_cfcntfreefreqhigh( data );
    data += sizeof(cfcntfreefreqhigh);

    cv_cnv_endian_optracq( data );
    data += sizeof(optracq);

    cv_cnv_endian_opswift( data );
    data += sizeof(opswift);

    cv_cnv_endian_rhswiftenable( data );
    data += sizeof(rhswiftenable);

    cv_cnv_endian_rhnumCoilConfigs( data );
    data += sizeof(rhnumCoilConfigs);

    cv_cnv_endian_rhnumslabs( data );
    data += sizeof(rhnumslabs);

    cv_cnv_endian_opncoils( data );
    data += sizeof(opncoils);

    cv_cnv_endian_rtsar_first_series_flag( data );
    data += sizeof(rtsar_first_series_flag);

    cv_cnv_endian_rtsar_enable_flag( data );
    data += sizeof(rtsar_enable_flag);

    cv_cnv_endian_measured_TG( data );
    data += sizeof(measured_TG);

    cv_cnv_endian_predicted_TG( data );
    data += sizeof(predicted_TG);

    cv_cnv_endian_sar_correction_factor( data );
    data += sizeof(sar_correction_factor);

    cv_cnv_endian_gradHeatMethod( data );
    data += sizeof(gradHeatMethod);

    cv_cnv_endian_gradHeatFile( data );
    data += sizeof(gradHeatFile);

    cv_cnv_endian_gradCoilMethod( data );
    data += sizeof(gradCoilMethod);

    cv_cnv_endian_gradHeatFlag( data );
    data += sizeof(gradHeatFlag);

    cv_cnv_endian_xgd_optimization( data );
    data += sizeof(xgd_optimization);

    cv_cnv_endian_gradChokeFlag( data );
    data += sizeof(gradChokeFlag);

    cv_cnv_endian_piburstmode( data );
    data += sizeof(piburstmode);

    cv_cnv_endian_opburstmode( data );
    data += sizeof(opburstmode);

    cv_cnv_endian_burstreps( data );
    data += sizeof(burstreps);

    cv_cnv_endian_piburstcooltime( data );
    data += sizeof(piburstcooltime);

    cv_cnv_endian_opaccel_ph_stride( data );
    data += sizeof(opaccel_ph_stride);

    cv_cnv_endian_opaccel_sl_stride( data );
    data += sizeof(opaccel_sl_stride);

    cv_cnv_endian_opaccel_t_stride( data );
    data += sizeof(opaccel_t_stride);

    cv_cnv_endian_opaccel_mb_stride( data );
    data += sizeof(opaccel_mb_stride);

    cv_cnv_endian_opmb( data );
    data += sizeof(opmb);

    cv_cnv_endian_rhmb_factor( data );
    data += sizeof(rhmb_factor);

    cv_cnv_endian_rhmb_slice_fov_shift_factor( data );
    data += sizeof(rhmb_slice_fov_shift_factor);

    cv_cnv_endian_rhmb_slice_order_sign( data );
    data += sizeof(rhmb_slice_order_sign);

    cv_cnv_endian_rhmuse( data );
    data += sizeof(rhmuse);

    cv_cnv_endian_rhmuse_nav( data );
    data += sizeof(rhmuse_nav);

    cv_cnv_endian_rhmuse_nav_accel( data );
    data += sizeof(rhmuse_nav_accel);

    cv_cnv_endian_rhmuse_nav_hnover( data );
    data += sizeof(rhmuse_nav_hnover);

    cv_cnv_endian_rhmuse_nav_yres( data );
    data += sizeof(rhmuse_nav_yres);

    cv_cnv_endian_opaccel_cs_stride( data );
    data += sizeof(opaccel_cs_stride);

    cv_cnv_endian_opcompressedsensing( data );
    data += sizeof(opcompressedsensing);

    cv_cnv_endian_rhcs_factor( data );
    data += sizeof(rhcs_factor);

    cv_cnv_endian_rhcs_flag( data );
    data += sizeof(rhcs_flag);

    cv_cnv_endian_rhcs_maxiter( data );
    data += sizeof(rhcs_maxiter);

    cv_cnv_endian_rhcs_consistency( data );
    data += sizeof(rhcs_consistency);

    cv_cnv_endian_rhcs_ph_stride( data );
    data += sizeof(rhcs_ph_stride);

    cv_cnv_endian_rhcs_sl_stride( data );
    data += sizeof(rhcs_sl_stride);

    cv_cnv_endian_oparc( data );
    data += sizeof(oparc);

    cv_cnv_endian_opaccel_kt_stride( data );
    data += sizeof(opaccel_kt_stride);

    cv_cnv_endian_rhkt_factor( data );
    data += sizeof(rhkt_factor);

    cv_cnv_endian_rhkt_cal_factor( data );
    data += sizeof(rhkt_cal_factor);

    cv_cnv_endian_rhkt_calwidth_ph( data );
    data += sizeof(rhkt_calwidth_ph);

    cv_cnv_endian_rhkt_calwidth_sl( data );
    data += sizeof(rhkt_calwidth_sl);

    cv_cnv_endian_opab1( data );
    data += sizeof(opab1);

    cv_cnv_endian_op3dgradwarp( data );
    data += sizeof(op3dgradwarp);

    cv_cnv_endian_opauto3dgradwarp( data );
    data += sizeof(opauto3dgradwarp);

    cv_cnv_endian_cfmaxtransmitoffsetfreq( data );
    data += sizeof(cfmaxtransmitoffsetfreq);

    cv_cnv_endian_cfreceiveroffsetfreq( data );
    data += sizeof(cfreceiveroffsetfreq);

    cv_cnv_endian_cfcoilswitchmethod( data );
    data += sizeof(cfcoilswitchmethod);

    cv_cnv_endian_TG_record( data );
    data += sizeof(TG_record);

    cv_cnv_endian_ab1_enable( data );
    data += sizeof(ab1_enable);

    cv_cnv_endian_cfreceivertype( data );
    data += sizeof(cfreceivertype);

    cv_cnv_endian_cfreceiverswitchtype( data );
    data += sizeof(cfreceiverswitchtype);

    cv_cnv_endian_cfEllipticDriveEnable( data );
    data += sizeof(cfEllipticDriveEnable);

    cv_cnv_endian_pi3dgradwarpnub( data );
    data += sizeof(pi3dgradwarpnub);

    cv_cnv_endian_cfDualDriveCapable( data );
    data += sizeof(cfDualDriveCapable);

    cv_cnv_endian_optrip( data );
    data += sizeof(optrip);

    cv_cnv_endian_oprtb0( data );
    data += sizeof(oprtb0);

    cv_cnv_endian_pirtb0vis( data );
    data += sizeof(pirtb0vis);

    cv_cnv_endian_pirtb0nub( data );
    data += sizeof(pirtb0nub);

    cv_cnv_endian_ophoecc( data );
    data += sizeof(ophoecc);

    cv_cnv_endian_rhhoecc( data );
    data += sizeof(rhhoecc);

    cv_cnv_endian_rhhoec_fit_order( data );
    data += sizeof(rhhoec_fit_order);

    cv_cnv_endian_opdistcorr( data );
    data += sizeof(opdistcorr);

    cv_cnv_endian_pidistcorrnub( data );
    data += sizeof(pidistcorrnub);

    cv_cnv_endian_pidistcorrdefval( data );
    data += sizeof(pidistcorrdefval);

    cv_cnv_endian_rhdistcorr_ctrl( data );
    data += sizeof(rhdistcorr_ctrl);

    cv_cnv_endian_rhdistcorr_B0_filter_size( data );
    data += sizeof(rhdistcorr_B0_filter_size);

    cv_cnv_endian_rhdistcorr_B0_filter_std_dev( data );
    data += sizeof(rhdistcorr_B0_filter_std_dev);

    cv_cnv_endian_ihdistcorr( data );
    data += sizeof(ihdistcorr);

    cv_cnv_endian_rhtensor_file_number( data );
    data += sizeof(rhtensor_file_number);

    cv_cnv_endian_ihpepolar( data );
    data += sizeof(ihpepolar);

    cv_cnv_endian_rhesp( data );
    data += sizeof(rhesp);

    cv_cnv_endian_viewshd_num( data );
    data += sizeof(viewshd_num);

    cv_cnv_endian_grad_intensity_thres( data );
    data += sizeof(grad_intensity_thres);

    cv_cnv_endian_anne_mask_dilation_length( data );
    data += sizeof(anne_mask_dilation_length);

    cv_cnv_endian_anne_intensity_thres( data );
    data += sizeof(anne_intensity_thres);

    cv_cnv_endian_anne_channel_percentage( data );
    data += sizeof(anne_channel_percentage);

    cv_cnv_endian_ec3_iterations( data );
    data += sizeof(ec3_iterations);

    cv_cnv_endian_combined_coil_map_thres( data );
    data += sizeof(combined_coil_map_thres);

    cv_cnv_endian_coil_map_smooth_factor( data );
    data += sizeof(coil_map_smooth_factor);

    cv_cnv_endian_coil_map_2_filter_width( data );
    data += sizeof(coil_map_2_filter_width);

    cv_cnv_endian_ec3_iteration_method( data );
    data += sizeof(ec3_iteration_method);

    cv_cnv_endian_edr_support( data );
    data += sizeof(edr_support);

    cv_cnv_endian_recon_bandwidth_factor( data );
    data += sizeof(recon_bandwidth_factor);

    cv_cnv_endian_dacq_data_type( data );
    data += sizeof(dacq_data_type);

    cv_cnv_endian_rawmode_scaling( data );
    data += sizeof(rawmode_scaling);

    cv_cnv_endian_rawmode_scaling_factor( data );
    data += sizeof(rawmode_scaling_factor);

    cv_cnv_endian_oprgcalmode( data );
    data += sizeof(oprgcalmode);

    cv_cnv_endian_opnumgroups( data );
    data += sizeof(opnumgroups);

    cv_cnv_endian_opsarburst( data );
    data += sizeof(opsarburst);

    cv_cnv_endian_opheadscout( data );
    data += sizeof(opheadscout);

    cv_cnv_endian_rhposition_detection( data );
    data += sizeof(rhposition_detection);

    cv_cnv_endian_opfus( data );
    data += sizeof(opfus);

    cv_cnv_endian_opexamnum( data );
    data += sizeof(opexamnum);

    cv_cnv_endian_opseriesnum( data );
    data += sizeof(opseriesnum);

    cv_cnv_endian_vol_shift_type( data );
    data += sizeof(vol_shift_type);

    cv_cnv_endian_vol_shift_constraint_type( data );
    data += sizeof(vol_shift_constraint_type);

    cv_cnv_endian_vol_scale_type( data );
    data += sizeof(vol_scale_type);

    cv_cnv_endian_vol_scale_constraint_type( data );
    data += sizeof(vol_scale_constraint_type);

    cv_cnv_endian_rhsnrnoise( data );
    data += sizeof(rhsnrnoise);

    cv_cnv_endian_rhvircpolicy( data );
    data += sizeof(rhvircpolicy);

    cv_cnv_endian_rhvirsenstype( data );
    data += sizeof(rhvirsenstype);

    cv_cnv_endian_rhvircoiltype( data );
    data += sizeof(rhvircoiltype);

    cv_cnv_endian_rhvircoilunif( data );
    data += sizeof(rhvircoilunif);

    cv_cnv_endian_rhvircoilchannels( data );
    data += sizeof(rhvircoilchannels);

    cv_cnv_endian_cffield( data );
    data += sizeof(cffield);

    cv_cnv_endian_act_field_strength( data );
    data += sizeof(act_field_strength);

    cv_cnv_endian_enableReceiveFreqBands( data );
    data += sizeof(enableReceiveFreqBands);

    cv_cnv_endian_offsetReceiveFreqLower( data );
    data += sizeof(offsetReceiveFreqLower);

    cv_cnv_endian_offsetReceiveFreqHigher( data );
    data += sizeof(offsetReceiveFreqHigher);

    cv_cnv_endian_cfrfamptyp( data );
    data += sizeof(cfrfamptyp);

    cv_cnv_endian_cfssctype( data );
    data += sizeof(cfssctype);

    cv_cnv_endian_cfbodycoiltype( data );
    data += sizeof(cfbodycoiltype);

    cv_cnv_endian_cfptxcapable( data );
    data += sizeof(cfptxcapable);

    cv_cnv_endian_cfbdcabletglimit( data );
    data += sizeof(cfbdcabletglimit);

    cv_cnv_endian_cfcablefreq( data );
    data += sizeof(cfcablefreq);

    cv_cnv_endian_cfcabletg( data );
    data += sizeof(cfcabletg);

    cv_cnv_endian_cfcablebw( data );
    data += sizeof(cfcablebw);

    cv_cnv_endian_opgradshim( data );
    data += sizeof(opgradshim);

    cv_cnv_endian_track_flag( data );
    data += sizeof(track_flag);

    cv_cnv_endian_prevent_scan_under_emul( data );
    data += sizeof(prevent_scan_under_emul);

    cv_cnv_endian_acqs( data );
    data += sizeof(acqs);

    cv_cnv_endian_avround( data );
    data += sizeof(avround);

    cv_cnv_endian_baseline( data );
    data += sizeof(baseline);

    cv_cnv_endian_nex( data );
    data += sizeof(nex);

    cv_cnv_endian_trunex( data );
    data += sizeof(trunex);

    cv_cnv_endian_isOddNexGreaterThanOne( data );
    data += sizeof(isOddNexGreaterThanOne);

    cv_cnv_endian_isNonIntNexGreaterThanOne( data );
    data += sizeof(isNonIntNexGreaterThanOne);

    cv_cnv_endian_fn( data );
    data += sizeof(fn);

    cv_cnv_endian_enablfracdec( data );
    data += sizeof(enablfracdec);

    cv_cnv_endian_npw_flag( data );
    data += sizeof(npw_flag);

    cv_cnv_endian_nop( data );
    data += sizeof(nop);

    cv_cnv_endian_acq_type( data );
    data += sizeof(acq_type);

    cv_cnv_endian_seq_type( data );
    data += sizeof(seq_type);

    cv_cnv_endian_num_images( data );
    data += sizeof(num_images);

    cv_cnv_endian_recon_mag_image( data );
    data += sizeof(recon_mag_image);

    cv_cnv_endian_recon_pha_image( data );
    data += sizeof(recon_pha_image);

    cv_cnv_endian_recon_imag_image( data );
    data += sizeof(recon_imag_image);

    cv_cnv_endian_recon_qmag_image( data );
    data += sizeof(recon_qmag_image);

    cv_cnv_endian_slquant1( data );
    data += sizeof(slquant1);

    cv_cnv_endian_psd_grd_wait( data );
    data += sizeof(psd_grd_wait);

    cv_cnv_endian_psd_rf_wait( data );
    data += sizeof(psd_rf_wait);

    cv_cnv_endian_pos_moment_start( data );
    data += sizeof(pos_moment_start);

    cv_cnv_endian_mps1rf1_inst( data );
    data += sizeof(mps1rf1_inst);

    cv_cnv_endian_scanrf1_inst( data );
    data += sizeof(scanrf1_inst);

    cv_cnv_endian_cfcarddelay( data );
    data += sizeof(cfcarddelay);

    cv_cnv_endian_psd_card_hdwr_delay( data );
    data += sizeof(psd_card_hdwr_delay);

    cv_cnv_endian_GAM( data );
    data += sizeof(GAM);

    cv_cnv_endian_off90( data );
    data += sizeof(off90);

    cv_cnv_endian_TR_SLOP( data );
    data += sizeof(TR_SLOP);

    cv_cnv_endian_TR_PASS( data );
    data += sizeof(TR_PASS);

    cv_cnv_endian_TR_PASS3D( data );
    data += sizeof(TR_PASS3D);

    cv_cnv_endian_csweight( data );
    data += sizeof(csweight);

    cv_cnv_endian_exnex( data );
    data += sizeof(exnex);

    cv_cnv_endian_truenex( data );
    data += sizeof(truenex);

    cv_cnv_endian_eg_phaseres( data );
    data += sizeof(eg_phaseres);

    cv_cnv_endian_sp_satcard_loc( data );
    data += sizeof(sp_satcard_loc);

    cv_cnv_endian_min_rfdycc( data );
    data += sizeof(min_rfdycc);

    cv_cnv_endian_min_rfavgpow( data );
    data += sizeof(min_rfavgpow);

    cv_cnv_endian_min_rfrmsb1( data );
    data += sizeof(min_rfrmsb1);

    cv_cnv_endian_coll_prefls( data );
    data += sizeof(coll_prefls);

    cv_cnv_endian_maxGradRes( data );
    data += sizeof(maxGradRes);

    cv_cnv_endian_dfg( data );
    data += sizeof(dfg);

    cv_cnv_endian_pg_beta( data );
    data += sizeof(pg_beta);

    cv_cnv_endian_split_dab( data );
    data += sizeof(split_dab);

    cv_cnv_endian_freq_scale( data );
    data += sizeof(freq_scale);

    cv_cnv_endian_numrecv( data );
    data += sizeof(numrecv);

    cv_cnv_endian_pe_on( data );
    data += sizeof(pe_on);

    cv_cnv_endian_psd_targetscale( data );
    data += sizeof(psd_targetscale);

    cv_cnv_endian_psd_zero( data );
    data += sizeof(psd_zero);

    cv_cnv_endian_lx_pwmtime( data );
    data += sizeof(lx_pwmtime);

    cv_cnv_endian_ly_pwmtime( data );
    data += sizeof(ly_pwmtime);

    cv_cnv_endian_lz_pwmtime( data );
    data += sizeof(lz_pwmtime);

    cv_cnv_endian_px_pwmtime( data );
    data += sizeof(px_pwmtime);

    cv_cnv_endian_py_pwmtime( data );
    data += sizeof(py_pwmtime);

    cv_cnv_endian_pz_pwmtime( data );
    data += sizeof(pz_pwmtime);

    cv_cnv_endian_min_seqgrad( data );
    data += sizeof(min_seqgrad);

    cv_cnv_endian_min_seqrfamp( data );
    data += sizeof(min_seqrfamp);

    cv_cnv_endian_xa2s( data );
    data += sizeof(xa2s);

    cv_cnv_endian_ya2s( data );
    data += sizeof(ya2s);

    cv_cnv_endian_za2s( data );
    data += sizeof(za2s);

    cv_cnv_endian_minseqcoil_t( data );
    data += sizeof(minseqcoil_t);

    cv_cnv_endian_minseqcoilx_t( data );
    data += sizeof(minseqcoilx_t);

    cv_cnv_endian_minseqcoily_t( data );
    data += sizeof(minseqcoily_t);

    cv_cnv_endian_minseqcoilz_t( data );
    data += sizeof(minseqcoilz_t);

    cv_cnv_endian_minseqcoilburst_t( data );
    data += sizeof(minseqcoilburst_t);

    cv_cnv_endian_minseqcoilvrms_t( data );
    data += sizeof(minseqcoilvrms_t);

    cv_cnv_endian_minseqgram_t( data );
    data += sizeof(minseqgram_t);

    cv_cnv_endian_minseqchoke_t( data );
    data += sizeof(minseqchoke_t);

    cv_cnv_endian_minseqcable_t( data );
    data += sizeof(minseqcable_t);

    cv_cnv_endian_minseqcable_maxpow_t( data );
    data += sizeof(minseqcable_maxpow_t);

    cv_cnv_endian_minseqcableburst_t( data );
    data += sizeof(minseqcableburst_t);

    cv_cnv_endian_minseqbusbar_t( data );
    data += sizeof(minseqbusbar_t);

    cv_cnv_endian_minseqps_t( data );
    data += sizeof(minseqps_t);

    cv_cnv_endian_minseqpdu_t( data );
    data += sizeof(minseqpdu_t);

    cv_cnv_endian_minseqpdubreaker_t( data );
    data += sizeof(minseqpdubreaker_t);

    cv_cnv_endian_minseqcoilcool_t( data );
    data += sizeof(minseqcoilcool_t);

    cv_cnv_endian_minseqsyscool_t( data );
    data += sizeof(minseqsyscool_t);

    cv_cnv_endian_minseqccucool_t( data );
    data += sizeof(minseqccucool_t);

    cv_cnv_endian_minseqxfmr_t( data );
    data += sizeof(minseqxfmr_t);

    cv_cnv_endian_minseqresist_t( data );
    data += sizeof(minseqresist_t);

    cv_cnv_endian_minseqgrddrv_t( data );
    data += sizeof(minseqgrddrv_t);

    cv_cnv_endian_minseqgrddrv_case_t( data );
    data += sizeof(minseqgrddrv_case_t);

    cv_cnv_endian_minseqgrddrvx_t( data );
    data += sizeof(minseqgrddrvx_t);

    cv_cnv_endian_minseqgrddrvy_t( data );
    data += sizeof(minseqgrddrvy_t);

    cv_cnv_endian_minseqgrddrvz_t( data );
    data += sizeof(minseqgrddrvz_t);

    cv_cnv_endian_powerx( data );
    data += sizeof(powerx);

    cv_cnv_endian_powery( data );
    data += sizeof(powery);

    cv_cnv_endian_powerz( data );
    data += sizeof(powerz);

    cv_cnv_endian_pospowerx( data );
    data += sizeof(pospowerx);

    cv_cnv_endian_pospowery( data );
    data += sizeof(pospowery);

    cv_cnv_endian_pospowerz( data );
    data += sizeof(pospowerz);

    cv_cnv_endian_negpowerx( data );
    data += sizeof(negpowerx);

    cv_cnv_endian_negpowery( data );
    data += sizeof(negpowery);

    cv_cnv_endian_negpowerz( data );
    data += sizeof(negpowerz);

    cv_cnv_endian_amptrans_lx( data );
    data += sizeof(amptrans_lx);

    cv_cnv_endian_amptrans_ly( data );
    data += sizeof(amptrans_ly);

    cv_cnv_endian_amptrans_lz( data );
    data += sizeof(amptrans_lz);

    cv_cnv_endian_amptrans_px( data );
    data += sizeof(amptrans_px);

    cv_cnv_endian_amptrans_py( data );
    data += sizeof(amptrans_py);

    cv_cnv_endian_amptrans_pz( data );
    data += sizeof(amptrans_pz);

    cv_cnv_endian_abspower_lx( data );
    data += sizeof(abspower_lx);

    cv_cnv_endian_abspower_ly( data );
    data += sizeof(abspower_ly);

    cv_cnv_endian_abspower_lz( data );
    data += sizeof(abspower_lz);

    cv_cnv_endian_abspower_px( data );
    data += sizeof(abspower_px);

    cv_cnv_endian_abspower_py( data );
    data += sizeof(abspower_py);

    cv_cnv_endian_abspower_pz( data );
    data += sizeof(abspower_pz);

    cv_cnv_endian_minseqpwm_x( data );
    data += sizeof(minseqpwm_x);

    cv_cnv_endian_minseqpwm_y( data );
    data += sizeof(minseqpwm_y);

    cv_cnv_endian_minseqpwm_z( data );
    data += sizeof(minseqpwm_z);

    cv_cnv_endian_minseqgpm_t( data );
    data += sizeof(minseqgpm_t);

    cv_cnv_endian_minseqgpm_maxpow_t( data );
    data += sizeof(minseqgpm_maxpow_t);

    cv_cnv_endian_vol_ratio_est_req( data );
    data += sizeof(vol_ratio_est_req);

    cv_cnv_endian_skip_waveform_rotmat_check( data );
    data += sizeof(skip_waveform_rotmat_check);

    cv_cnv_endian_set_realtime_rotmat( data );
    data += sizeof(set_realtime_rotmat);

    cv_cnv_endian_skip_rotmat_search( data );
    data += sizeof(skip_rotmat_search);

    cv_cnv_endian_enforce_minseqseg( data );
    data += sizeof(enforce_minseqseg);

    cv_cnv_endian_enforce_dbdtopt( data );
    data += sizeof(enforce_dbdtopt);

    cv_cnv_endian_skip_minseqseg( data );
    data += sizeof(skip_minseqseg);

    cv_cnv_endian_skip_initialize_dbdtopt( data );
    data += sizeof(skip_initialize_dbdtopt);

    cv_cnv_endian_time_pgen( data );
    data += sizeof(time_pgen);

    cv_cnv_endian_cont_debug( data );
    data += sizeof(cont_debug);

    cv_cnv_endian_maxpc_cor( data );
    data += sizeof(maxpc_cor);

    cv_cnv_endian_maxpc_debug( data );
    data += sizeof(maxpc_debug);

    cv_cnv_endian_maxpc_points( data );
    data += sizeof(maxpc_points);

    cv_cnv_endian_pass_thru_mode( data );
    data += sizeof(pass_thru_mode);

    cv_cnv_endian_tmin( data );
    data += sizeof(tmin);

    cv_cnv_endian_tmin_total( data );
    data += sizeof(tmin_total);

    cv_cnv_endian_psd_tol_value( data );
    data += sizeof(psd_tol_value);

    cv_cnv_endian_bd_index( data );
    data += sizeof(bd_index);

    cv_cnv_endian_use_ermes( data );
    data += sizeof(use_ermes);

    cv_cnv_endian_fieldstrength( data );
    data += sizeof(fieldstrength);

    cv_cnv_endian_asymmatrix( data );
    data += sizeof(asymmatrix);

    cv_cnv_endian_psddebugcode( data );
    data += sizeof(psddebugcode);

    cv_cnv_endian_psddebugcode2( data );
    data += sizeof(psddebugcode2);

    cv_cnv_endian_serviceMode( data );
    data += sizeof(serviceMode);

    cv_cnv_endian_upmxdisable( data );
    data += sizeof(upmxdisable);

    cv_cnv_endian_tsamp( data );
    data += sizeof(tsamp);

    cv_cnv_endian_seg_debug( data );
    data += sizeof(seg_debug);

    cv_cnv_endian_CompositeRMS_method( data );
    data += sizeof(CompositeRMS_method);

    cv_cnv_endian_gradDriverMethod( data );
    data += sizeof(gradDriverMethod);

    cv_cnv_endian_gradDCsafeMethod( data );
    data += sizeof(gradDCsafeMethod);

    cv_cnv_endian_stopwatchFlag( data );
    data += sizeof(stopwatchFlag);

    cv_cnv_endian_seqEntryIndex( data );
    data += sizeof(seqEntryIndex);

    cv_cnv_endian_dbdt_debug( data );
    data += sizeof(dbdt_debug);

    cv_cnv_endian_reilly_mode( data );
    data += sizeof(reilly_mode);

    cv_cnv_endian_dbdt_disable( data );
    data += sizeof(dbdt_disable);

    cv_cnv_endian_use_dbdt_opt( data );
    data += sizeof(use_dbdt_opt);

    cv_cnv_endian_srderate( data );
    data += sizeof(srderate);

    cv_cnv_endian_config_update_mode( data );
    data += sizeof(config_update_mode);

    cv_cnv_endian_phys_record_flag( data );
    data += sizeof(phys_record_flag);

    cv_cnv_endian_phys_rec_resolution( data );
    data += sizeof(phys_rec_resolution);

    cv_cnv_endian_phys_record_channelsel( data );
    data += sizeof(phys_record_channelsel);

    cv_cnv_endian_rotateflag( data );
    data += sizeof(rotateflag);

    cv_cnv_endian_rhpcspacial_dynamic( data );
    data += sizeof(rhpcspacial_dynamic);

    cv_cnv_endian_rhpc_rationalscale( data );
    data += sizeof(rhpc_rationalscale);

    cv_cnv_endian_rhpcmag( data );
    data += sizeof(rhpcmag);

    cv_cnv_endian_mild_note_support( data );
    data += sizeof(mild_note_support);

    cv_cnv_endian_save_grad_spec_flag( data );
    data += sizeof(save_grad_spec_flag);

    cv_cnv_endian_grad_spec_change_flag( data );
    data += sizeof(grad_spec_change_flag);

    cv_cnv_endian_value_system_flag( data );
    data += sizeof(value_system_flag);

    cv_cnv_endian_rectfov_npw_support( data );
    data += sizeof(rectfov_npw_support);

    cv_cnv_endian_pigeosrot( data );
    data += sizeof(pigeosrot);

    cv_cnv_endian_minseqrf_cal( data );
    data += sizeof(minseqrf_cal);

    cv_cnv_endian_min_rfampcpblty( data );
    data += sizeof(min_rfampcpblty);

    cv_cnv_endian_b1derate_flag( data );
    data += sizeof(b1derate_flag);

    cv_cnv_endian_oblmethod_dbdt_flag( data );
    data += sizeof(oblmethod_dbdt_flag);

    cv_cnv_endian_minseqcoil_esp( data );
    data += sizeof(minseqcoil_esp);

    cv_cnv_endian_aspir_flag( data );
    data += sizeof(aspir_flag);

    cv_cnv_endian_rhrawsizeview( data );
    data += sizeof(rhrawsizeview);

    cv_cnv_endian_chksum_scaninfo_view( data );
    data += sizeof(chksum_scaninfo_view);

    cv_cnv_endian_chksum_rhdacqctrl_view( data );
    data += sizeof(chksum_rhdacqctrl_view);

    cv_cnv_endian_fnecho_lim( data );
    data += sizeof(fnecho_lim);

    cv_cnv_endian_psdcrucial_debug( data );
    data += sizeof(psdcrucial_debug);

    cv_cnv_endian_b1max_scale( data );
    data += sizeof(b1max_scale);

    cv_cnv_endian_disable_exciter_unblank( data );
    data += sizeof(disable_exciter_unblank);

    cv_cnv_endian_TGlimit( data );
    data += sizeof(TGlimit);

    cv_cnv_endian_sat_TGlimit( data );
    data += sizeof(sat_TGlimit);

    cv_cnv_endian_autoparams_debug( data );
    data += sizeof(autoparams_debug);

    cv_cnv_endian_num_autotr_cveval_iter( data );
    data += sizeof(num_autotr_cveval_iter);

    cv_cnv_endian_apx_cveval_counter( data );
    data += sizeof(apx_cveval_counter);

    cv_cnv_endian_enforce_inrangetr( data );
    data += sizeof(enforce_inrangetr);

    cv_cnv_endian_passtime( data );
    data += sizeof(passtime);

    cv_cnv_endian_retropc_extra( data );
    data += sizeof(retropc_extra);

    cv_cnv_endian_esp( data );
    data += sizeof(esp);

    cv_cnv_endian_echoint( data );
    data += sizeof(echoint);

    cv_cnv_endian_arc_flag( data );
    data += sizeof(arc_flag);

    cv_cnv_endian_arc_ph_calwidth( data );
    data += sizeof(arc_ph_calwidth);

    cv_cnv_endian_arc_sl_calwidth( data );
    data += sizeof(arc_sl_calwidth);

    cv_cnv_endian_vrgfsamp( data );
    data += sizeof(vrgfsamp);

    cv_cnv_endian_srate_x( data );
    data += sizeof(srate_x);

    cv_cnv_endian_glimit_x( data );
    data += sizeof(glimit_x);

    cv_cnv_endian_srate_y( data );
    data += sizeof(srate_y);

    cv_cnv_endian_glimit_y( data );
    data += sizeof(glimit_y);

    cv_cnv_endian_srate_z( data );
    data += sizeof(srate_z);

    cv_cnv_endian_glimit_z( data );
    data += sizeof(glimit_z);

    cv_cnv_endian_act_srate_x( data );
    data += sizeof(act_srate_x);

    cv_cnv_endian_act_srate_y( data );
    data += sizeof(act_srate_y);

    cv_cnv_endian_act_srate_z( data );
    data += sizeof(act_srate_z);

    cv_cnv_endian_mkgspec_x_sr_flag( data );
    data += sizeof(mkgspec_x_sr_flag);

    cv_cnv_endian_mkgspec_x_gmax_flag( data );
    data += sizeof(mkgspec_x_gmax_flag);

    cv_cnv_endian_mkgspec_y_sr_flag( data );
    data += sizeof(mkgspec_y_sr_flag);

    cv_cnv_endian_mkgspec_y_gmax_flag( data );
    data += sizeof(mkgspec_y_gmax_flag);

    cv_cnv_endian_mkgspec_z_sr_flag( data );
    data += sizeof(mkgspec_z_sr_flag);

    cv_cnv_endian_mkgspec_z_gmax_flag( data );
    data += sizeof(mkgspec_z_gmax_flag);

    cv_cnv_endian_mkgspec_flag( data );
    data += sizeof(mkgspec_flag);

    cv_cnv_endian_mkgspec_epi2_flag( data );
    data += sizeof(mkgspec_epi2_flag);

    cv_cnv_endian_pfkz_total( data );
    data += sizeof(pfkz_total);

    cv_cnv_endian_fov_freq_scale( data );
    data += sizeof(fov_freq_scale);

    cv_cnv_endian_fov_phase_scale( data );
    data += sizeof(fov_phase_scale);

    cv_cnv_endian_slthick_scale( data );
    data += sizeof(slthick_scale);

    cv_cnv_endian_silent_mode( data );
    data += sizeof(silent_mode);

    cv_cnv_endian_silent_slew_rate( data );
    data += sizeof(silent_slew_rate);

    cv_cnv_endian_rhpropellerCtrl( data );
    data += sizeof(rhpropellerCtrl);

    cv_cnv_endian_prop_act_npwfactor( data );
    data += sizeof(prop_act_npwfactor);

    cv_cnv_endian_prop_act_oversamplingfactor( data );
    data += sizeof(prop_act_oversamplingfactor);

    cv_cnv_endian_navtrig_wait_before_imaging( data );
    data += sizeof(navtrig_wait_before_imaging);

    cv_cnv_endian_xtg_volRecCoil( data );
    data += sizeof(xtg_volRecCoil);

    cv_cnv_endian_minseqseg_max_full( data );
    data += sizeof(minseqseg_max_full);

    cv_cnv_endian_sphericalGradient( data );
    data += sizeof(sphericalGradient);

    cv_cnv_endian_minseqcoil_option( data );
    data += sizeof(minseqcoil_option);

    cv_cnv_endian_minseqgrad_option( data );
    data += sizeof(minseqgrad_option);

    cv_cnv_endian_rtp_bodyCoilCombine( data );
    data += sizeof(rtp_bodyCoilCombine);

    cv_cnv_endian_ntxchannels( data );
    data += sizeof(ntxchannels);

    cv_cnv_endian_napptxchannels( data );
    data += sizeof(napptxchannels);

    cv_cnv_endian_seqcfgdebug( data );
    data += sizeof(seqcfgdebug);

    cv_cnv_endian_enable_acoustic_model( data );
    data += sizeof(enable_acoustic_model);

    cv_cnv_endian_acoustic_seq_repeat_time( data );
    data += sizeof(acoustic_seq_repeat_time);

    cv_cnv_endian_avgSPL_non_weighted( data );
    data += sizeof(avgSPL_non_weighted);

    cv_cnv_endian_noisecal_in_scan_flag( data );
    data += sizeof(noisecal_in_scan_flag);

    cv_cnv_endian_cs_sat( data );
    data += sizeof(cs_sat);

    cv_cnv_endian_cs_satstart( data );
    data += sizeof(cs_satstart);

    cv_cnv_endian_cs_sattime( data );
    data += sizeof(cs_sattime);

    cv_cnv_endian_a_rfcssatcfh( data );
    data += sizeof(a_rfcssatcfh);

    cv_cnv_endian_flip_rfcssatcfh( data );
    data += sizeof(flip_rfcssatcfh);

    cv_cnv_endian_pw_rfcssatcfh( data );
    data += sizeof(pw_rfcssatcfh);

    cv_cnv_endian_ia_rfcssatcfh( data );
    data += sizeof(ia_rfcssatcfh);

    cv_cnv_endian_ChemSatPulse( data );
    data += sizeof(ChemSatPulse);

    cv_cnv_endian_area_gxkcs( data );
    data += sizeof(area_gxkcs);

    cv_cnv_endian_area_gykcs( data );
    data += sizeof(area_gykcs);

    cv_cnv_endian_area_gyakcs( data );
    data += sizeof(area_gyakcs);

    cv_cnv_endian_area_gzkcs( data );
    data += sizeof(area_gzkcs);

    cv_cnv_endian_csk_derate_factor( data );
    data += sizeof(csk_derate_factor);

    cv_cnv_endian_pw_rfcssat( data );
    data += sizeof(pw_rfcssat);

    cv_cnv_endian_pw_omega_hs_rfcssat( data );
    data += sizeof(pw_omega_hs_rfcssat);

    cv_cnv_endian_off_rfcssat( data );
    data += sizeof(off_rfcssat);

    cv_cnv_endian_ia_rfcssat( data );
    data += sizeof(ia_rfcssat);

    cv_cnv_endian_ia_omega_hs_rfcssat( data );
    data += sizeof(ia_omega_hs_rfcssat);

    cv_cnv_endian_cyc_rfcssat( data );
    data += sizeof(cyc_rfcssat);

    cv_cnv_endian_a_rfcssat( data );
    data += sizeof(a_rfcssat);

    cv_cnv_endian_a_omega_hs_rfcssat( data );
    data += sizeof(a_omega_hs_rfcssat);

    cv_cnv_endian_alpha_rfcssat( data );
    data += sizeof(alpha_rfcssat);

    cv_cnv_endian_gscale_rfcssat( data );
    data += sizeof(gscale_rfcssat);

    cv_cnv_endian_flip_rfcssat( data );
    data += sizeof(flip_rfcssat);

    cv_cnv_endian_a_gzrfcssat( data );
    data += sizeof(a_gzrfcssat);

    cv_cnv_endian_ia_gzrfcssat( data );
    data += sizeof(ia_gzrfcssat);

    cv_cnv_endian_pw_gzrfcssat( data );
    data += sizeof(pw_gzrfcssat);

    cv_cnv_endian_res_gzrfcssat( data );
    data += sizeof(res_gzrfcssat);

    cv_cnv_endian_a_gzrfcssat_wrf( data );
    data += sizeof(a_gzrfcssat_wrf);

    cv_cnv_endian_a_thetarfcssat( data );
    data += sizeof(a_thetarfcssat);

    cv_cnv_endian_ia_thetarfcssat( data );
    data += sizeof(ia_thetarfcssat);

    cv_cnv_endian_pw_thetarfcssat( data );
    data += sizeof(pw_thetarfcssat);

    cv_cnv_endian_res_thetarfcssat( data );
    data += sizeof(res_thetarfcssat);

    cv_cnv_endian_off_thetarfcssat( data );
    data += sizeof(off_thetarfcssat);

    cv_cnv_endian_bw_rfcssat( data );
    data += sizeof(bw_rfcssat);

    cv_cnv_endian_selectiveChemsat( data );
    data += sizeof(selectiveChemsat);

    cv_cnv_endian_selectiveChemsatBWscaler( data );
    data += sizeof(selectiveChemsatBWscaler);

    cv_cnv_endian_offset_rfchemsat( data );
    data += sizeof(offset_rfchemsat);

    cv_cnv_endian_num_gzrfcssat_lobe( data );
    data += sizeof(num_gzrfcssat_lobe);

    cv_cnv_endian_pw_gzrfcssat_lobe( data );
    data += sizeof(pw_gzrfcssat_lobe);

    cv_cnv_endian_pw_gzrfcssat_constant( data );
    data += sizeof(pw_gzrfcssat_constant);

    cv_cnv_endian_pw_gzrfcssat_rampz( data );
    data += sizeof(pw_gzrfcssat_rampz);

    cv_cnv_endian_num_gzrfcssat_lobe_norf( data );
    data += sizeof(num_gzrfcssat_lobe_norf);

    cv_cnv_endian_pw_gzrfcssat_lobe_norf( data );
    data += sizeof(pw_gzrfcssat_lobe_norf);

    cv_cnv_endian_pw_gzrfcssat_constant_norf( data );
    data += sizeof(pw_gzrfcssat_constant_norf);

    cv_cnv_endian_pw_gzrfcssat_rampz_norf( data );
    data += sizeof(pw_gzrfcssat_rampz_norf);

    cv_cnv_endian_ext_pw_rfcssat( data );
    data += sizeof(ext_pw_rfcssat);

    cv_cnv_endian_ext_res_rfcssat( data );
    data += sizeof(ext_res_rfcssat);

    cv_cnv_endian_ext_isodelay( data );
    data += sizeof(ext_isodelay);

    cv_cnv_endian_ext_water_freq_flag( data );
    data += sizeof(ext_water_freq_flag);

    cv_cnv_endian_ext_pw_grad_sub_lobe( data );
    data += sizeof(ext_pw_grad_sub_lobe);

    cv_cnv_endian_ext_pw_grad_sub_lobe_ramp( data );
    data += sizeof(ext_pw_grad_sub_lobe_ramp);

    cv_cnv_endian_ext_num_grad_sub_lobe( data );
    data += sizeof(ext_num_grad_sub_lobe);

    cv_cnv_endian_ext_pw_grad_sub_lobe_norf( data );
    data += sizeof(ext_pw_grad_sub_lobe_norf);

    cv_cnv_endian_ext_pw_grad_sub_lobe_ramp_norf( data );
    data += sizeof(ext_pw_grad_sub_lobe_ramp_norf);

    cv_cnv_endian_ext_num_grad_sub_lobe_norf( data );
    data += sizeof(ext_num_grad_sub_lobe_norf);

    cv_cnv_endian_ext_abswidth( data );
    data += sizeof(ext_abswidth);

    cv_cnv_endian_ext_effwidth( data );
    data += sizeof(ext_effwidth);

    cv_cnv_endian_ext_area( data );
    data += sizeof(ext_area);

    cv_cnv_endian_ext_dtycyc( data );
    data += sizeof(ext_dtycyc);

    cv_cnv_endian_ext_maxpw( data );
    data += sizeof(ext_maxpw);

    cv_cnv_endian_ext_max_b1( data );
    data += sizeof(ext_max_b1);

    cv_cnv_endian_ext_max_int_b1_sq( data );
    data += sizeof(ext_max_int_b1_sq);

    cv_cnv_endian_ext_max_rms_b1( data );
    data += sizeof(ext_max_rms_b1);

    cv_cnv_endian_ext_nom_fa( data );
    data += sizeof(ext_nom_fa);

    cv_cnv_endian_ext_nom_pw( data );
    data += sizeof(ext_nom_pw);

    cv_cnv_endian_ext_nom_bw( data );
    data += sizeof(ext_nom_bw);

    cv_cnv_endian_ext_gzrfcssat_scale_fac( data );
    data += sizeof(ext_gzrfcssat_scale_fac);

    cv_cnv_endian_ext_fatsat_min_slthick( data );
    data += sizeof(ext_fatsat_min_slthick);

    cv_cnv_endian_duo_cs_flag( data );
    data += sizeof(duo_cs_flag);

    cv_cnv_endian_w_debug_flag( data );
    data += sizeof(w_debug_flag);

    cv_cnv_endian_n_cspulses( data );
    data += sizeof(n_cspulses);

    cv_cnv_endian_flip_final_1( data );
    data += sizeof(flip_final_1);

    cv_cnv_endian_flip_final_2( data );
    data += sizeof(flip_final_2);

    cv_cnv_endian_killer_scale( data );
    data += sizeof(killer_scale);

    cv_cnv_endian_delay_time_bkp( data );
    data += sizeof(delay_time_bkp);

    cv_cnv_endian_tetime_bkp( data );
    data += sizeof(tetime_bkp);

    cv_cnv_endian_rc_time_bkp( data );
    data += sizeof(rc_time_bkp);

    cv_cnv_endian_slquant_bkp( data );
    data += sizeof(slquant_bkp);

    cv_cnv_endian_tr_time_bkp( data );
    data += sizeof(tr_time_bkp);

    cv_cnv_endian_sattime_bkp( data );
    data += sizeof(sattime_bkp);

    cv_cnv_endian_flip_final_1_bkp( data );
    data += sizeof(flip_final_1_bkp);

    cv_cnv_endian_flip_final_2_bkp( data );
    data += sizeof(flip_final_2_bkp);

    cv_cnv_endian_fatsat_factor_bkp( data );
    data += sizeof(fatsat_factor_bkp);

    cv_cnv_endian_phantom_test_flag( data );
    data += sizeof(phantom_test_flag);

    cv_cnv_endian_phantom_fat_T1( data );
    data += sizeof(phantom_fat_T1);

    cv_cnv_endian_DB_flag( data );
    data += sizeof(DB_flag);

    cv_cnv_endian_DB_shift_ratio( data );
    data += sizeof(DB_shift_ratio);

    cv_cnv_endian_DB_ChemShift( data );
    data += sizeof(DB_ChemShift);

    cv_cnv_endian_DBgrad_flag( data );
    data += sizeof(DBgrad_flag);

    cv_cnv_endian_DB_Buffer_X( data );
    data += sizeof(DB_Buffer_X);

    cv_cnv_endian_DB_Buffer_Y( data );
    data += sizeof(DB_Buffer_Y);

    cv_cnv_endian_DB_Chemical_Shift( data );
    data += sizeof(DB_Chemical_Shift);

    cv_cnv_endian_dbcenterlocx1( data );
    data += sizeof(dbcenterlocx1);

    cv_cnv_endian_dbcenterlocx2( data );
    data += sizeof(dbcenterlocx2);

    cv_cnv_endian_dbcenterlocy1( data );
    data += sizeof(dbcenterlocy1);

    cv_cnv_endian_dbcenterlocy2( data );
    data += sizeof(dbcenterlocy2);

    cv_cnv_endian_dbcenterlocz1( data );
    data += sizeof(dbcenterlocz1);

    cv_cnv_endian_dbcenterlocz2( data );
    data += sizeof(dbcenterlocz2);

    cv_cnv_endian_dbsatthickx( data );
    data += sizeof(dbsatthickx);

    cv_cnv_endian_dbsatthicky( data );
    data += sizeof(dbsatthicky);

    cv_cnv_endian_dbsatthickz( data );
    data += sizeof(dbsatthickz);

    cv_cnv_endian_dbbandlocx1( data );
    data += sizeof(dbbandlocx1);

    cv_cnv_endian_dbbandlocx2( data );
    data += sizeof(dbbandlocx2);

    cv_cnv_endian_dbbandlocy1( data );
    data += sizeof(dbbandlocy1);

    cv_cnv_endian_dbbandlocy2( data );
    data += sizeof(dbbandlocy2);

    cv_cnv_endian_dbbandlocz1( data );
    data += sizeof(dbbandlocz1);

    cv_cnv_endian_dbbandlocz2( data );
    data += sizeof(dbbandlocz2);

    cv_cnv_endian_off_rfcssat1( data );
    data += sizeof(off_rfcssat1);

    cv_cnv_endian_off_rfcssat2( data );
    data += sizeof(off_rfcssat2);

    cv_cnv_endian_bw_rfcssat_nom( data );
    data += sizeof(bw_rfcssat_nom);

    cv_cnv_endian_bw_rfcssat_ramp( data );
    data += sizeof(bw_rfcssat_ramp);

    cv_cnv_endian_bw_ramp( data );
    data += sizeof(bw_ramp);

    cv_cnv_endian_fatsat_factor( data );
    data += sizeof(fatsat_factor);

    cv_cnv_endian_csat_rfupa( data );
    data += sizeof(csat_rfupa);

    cv_cnv_endian_csat_sys_type( data );
    data += sizeof(csat_sys_type);

    cv_cnv_endian_aspir_delay( data );
    data += sizeof(aspir_delay);

    cv_cnv_endian_aspir_cfoffset( data );
    data += sizeof(aspir_cfoffset);

    cv_cnv_endian_aspir_minti( data );
    data += sizeof(aspir_minti);

    cv_cnv_endian_aspir_T1( data );
    data += sizeof(aspir_T1);

    cv_cnv_endian_aspir_TI( data );
    data += sizeof(aspir_TI);

    cv_cnv_endian_aspir_TI_null( data );
    data += sizeof(aspir_TI_null);

    cv_cnv_endian_aspir_TI_extra( data );
    data += sizeof(aspir_TI_extra);

    cv_cnv_endian_aspir_TI_min( data );
    data += sizeof(aspir_TI_min);

    cv_cnv_endian_aspir_eff( data );
    data += sizeof(aspir_eff);

    cv_cnv_endian_fatFlag( data );
    data += sizeof(fatFlag);

    cv_cnv_endian_cs_isodelay( data );
    data += sizeof(cs_isodelay);

    cv_cnv_endian_cs_delay( data );
    data += sizeof(cs_delay);

    cv_cnv_endian_recovery_time( data );
    data += sizeof(recovery_time);

    cv_cnv_endian_flip_sat( data );
    data += sizeof(flip_sat);

    cv_cnv_endian_flip_satcfh( data );
    data += sizeof(flip_satcfh);

    cv_cnv_endian_fStrength( data );
    data += sizeof(fStrength);

    cv_cnv_endian_use_spsp_fatsat( data );
    data += sizeof(use_spsp_fatsat);

    cv_cnv_endian_debug_spsp_fatsat( data );
    data += sizeof(debug_spsp_fatsat);

    cv_cnv_endian_spsp_fatsat_slthick( data );
    data += sizeof(spsp_fatsat_slthick);

    cv_cnv_endian_spsp_fatsat_pulse_extra_time( data );
    data += sizeof(spsp_fatsat_pulse_extra_time);

    cv_cnv_endian_spsp_fatsat_spatial_mode( data );
    data += sizeof(spsp_fatsat_spatial_mode);

    cv_cnv_endian_spsp_fatsat_spatial_offset( data );
    data += sizeof(spsp_fatsat_spatial_offset);

    cv_cnv_endian_spsp_fatsat_pulse_override( data );
    data += sizeof(spsp_fatsat_pulse_override);

    cv_cnv_endian_spsp_fatsat_omega_scale( data );
    data += sizeof(spsp_fatsat_omega_scale);

    cv_cnv_endian_max_aspir_fa( data );
    data += sizeof(max_aspir_fa);

    cv_cnv_endian_fa_scale_debug( data );
    data += sizeof(fa_scale_debug);

    cv_cnv_endian_cs_tr( data );
    data += sizeof(cs_tr);

    cv_cnv_endian_cs_slquant( data );
    data += sizeof(cs_slquant);

    cv_cnv_endian_cs_dda_per_trig_flag( data );
    data += sizeof(cs_dda_per_trig_flag);

    cv_cnv_endian_psd_chemsat_seq_flag( data );
    data += sizeof(psd_chemsat_seq_flag);

    cv_cnv_endian_cs_dda_flip( data );
    data += sizeof(cs_dda_flip);

    cv_cnv_endian_ccs_dead( data );
    data += sizeof(ccs_dead);

    cv_cnv_endian_ccs_relaxers( data );
    data += sizeof(ccs_relaxers);

    cv_cnv_endian_ccs_relaxtime( data );
    data += sizeof(ccs_relaxtime);

    cv_cnv_endian_ccs_relaxseqtime( data );
    data += sizeof(ccs_relaxseqtime);

    cv_cnv_endian_SatRelaxers( data );
    data += sizeof(SatRelaxers);

    cv_cnv_endian_gsat_scale( data );
    data += sizeof(gsat_scale);

    cv_cnv_endian_cyc_rfs( data );
    data += sizeof(cyc_rfs);

    cv_cnv_endian_pw_rfs( data );
    data += sizeof(pw_rfs);

    cv_cnv_endian_pw_satrampx( data );
    data += sizeof(pw_satrampx);

    cv_cnv_endian_pw_satrampy( data );
    data += sizeof(pw_satrampy);

    cv_cnv_endian_pw_satrampz( data );
    data += sizeof(pw_satrampz);

    cv_cnv_endian_sat_rot_ex_num( data );
    data += sizeof(sat_rot_ex_num);

    cv_cnv_endian_sat_rot_df_num( data );
    data += sizeof(sat_rot_df_num);

    cv_cnv_endian_sat_rot_index( data );
    data += sizeof(sat_rot_index);

    cv_cnv_endian_pw_isisat( data );
    data += sizeof(pw_isisat);

    cv_cnv_endian_pw_rotupdate( data );
    data += sizeof(pw_rotupdate);

    cv_cnv_endian_isi_satdelay( data );
    data += sizeof(isi_satdelay);

    cv_cnv_endian_rot_delay( data );
    data += sizeof(rot_delay);

    cv_cnv_endian_isi_extra( data );
    data += sizeof(isi_extra);

    cv_cnv_endian_sat_debug( data );
    data += sizeof(sat_debug);

    cv_cnv_endian_spsat_host_debug( data );
    data += sizeof(spsat_host_debug);

    cv_cnv_endian_sp_first_scan( data );
    data += sizeof(sp_first_scan);

    cv_cnv_endian_sat_obl_debug( data );
    data += sizeof(sat_obl_debug);

    cv_cnv_endian_sat_newgeo( data );
    data += sizeof(sat_newgeo);

    cv_cnv_endian_spsat_rfupa( data );
    data += sizeof(spsat_rfupa);

    cv_cnv_endian_spsat_sys_type( data );
    data += sizeof(spsat_sys_type);

    cv_cnv_endian_xkiller_set( data );
    data += sizeof(xkiller_set);

    cv_cnv_endian_maxkiller_time( data );
    data += sizeof(maxkiller_time);

    cv_cnv_endian_satgapxpos( data );
    data += sizeof(satgapxpos);

    cv_cnv_endian_satgapxneg( data );
    data += sizeof(satgapxneg);

    cv_cnv_endian_satgapypos( data );
    data += sizeof(satgapypos);

    cv_cnv_endian_satgapyneg( data );
    data += sizeof(satgapyneg);

    cv_cnv_endian_satgapzpos( data );
    data += sizeof(satgapzpos);

    cv_cnv_endian_satgapzneg( data );
    data += sizeof(satgapzneg);

    cv_cnv_endian_satspacex1( data );
    data += sizeof(satspacex1);

    cv_cnv_endian_satspacex2( data );
    data += sizeof(satspacex2);

    cv_cnv_endian_satspacey1( data );
    data += sizeof(satspacey1);

    cv_cnv_endian_satspacey2( data );
    data += sizeof(satspacey2);

    cv_cnv_endian_satspacez1( data );
    data += sizeof(satspacez1);

    cv_cnv_endian_satspacez2( data );
    data += sizeof(satspacez2);

    cv_cnv_endian_satspace1( data );
    data += sizeof(satspace1);

    cv_cnv_endian_satspace2( data );
    data += sizeof(satspace2);

    cv_cnv_endian_satspace3( data );
    data += sizeof(satspace3);

    cv_cnv_endian_satspace4( data );
    data += sizeof(satspace4);

    cv_cnv_endian_satspace5( data );
    data += sizeof(satspace5);

    cv_cnv_endian_satspace6( data );
    data += sizeof(satspace6);

    cv_cnv_endian_satthickx1( data );
    data += sizeof(satthickx1);

    cv_cnv_endian_satthickx2( data );
    data += sizeof(satthickx2);

    cv_cnv_endian_satthickdfx( data );
    data += sizeof(satthickdfx);

    cv_cnv_endian_satthicky1( data );
    data += sizeof(satthicky1);

    cv_cnv_endian_satthicky2( data );
    data += sizeof(satthicky2);

    cv_cnv_endian_satthickdfy( data );
    data += sizeof(satthickdfy);

    cv_cnv_endian_satthickz1( data );
    data += sizeof(satthickz1);

    cv_cnv_endian_satthickz2( data );
    data += sizeof(satthickz2);

    cv_cnv_endian_satthickdfz( data );
    data += sizeof(satthickdfz);

    cv_cnv_endian_exsatthick1( data );
    data += sizeof(exsatthick1);

    cv_cnv_endian_exsatthick2( data );
    data += sizeof(exsatthick2);

    cv_cnv_endian_exsatthick3( data );
    data += sizeof(exsatthick3);

    cv_cnv_endian_exsatthick4( data );
    data += sizeof(exsatthick4);

    cv_cnv_endian_exsatthick5( data );
    data += sizeof(exsatthick5);

    cv_cnv_endian_exsatthick6( data );
    data += sizeof(exsatthick6);

    cv_cnv_endian_satxlocpos( data );
    data += sizeof(satxlocpos);

    cv_cnv_endian_satxlocneg( data );
    data += sizeof(satxlocneg);

    cv_cnv_endian_satylocpos( data );
    data += sizeof(satylocpos);

    cv_cnv_endian_satylocneg( data );
    data += sizeof(satylocneg);

    cv_cnv_endian_satzlocpos( data );
    data += sizeof(satzlocpos);

    cv_cnv_endian_satzlocneg( data );
    data += sizeof(satzlocneg);

    cv_cnv_endian_satzloca( data );
    data += sizeof(satzloca);

    cv_cnv_endian_satzlocb( data );
    data += sizeof(satzlocb);

    cv_cnv_endian_satloce1( data );
    data += sizeof(satloce1);

    cv_cnv_endian_satloce2( data );
    data += sizeof(satloce2);

    cv_cnv_endian_satloce3( data );
    data += sizeof(satloce3);

    cv_cnv_endian_satloce4( data );
    data += sizeof(satloce4);

    cv_cnv_endian_satloce5( data );
    data += sizeof(satloce5);

    cv_cnv_endian_satloce6( data );
    data += sizeof(satloce6);

    cv_cnv_endian_area_rfsx1( data );
    data += sizeof(area_rfsx1);

    cv_cnv_endian_area_rfsx2( data );
    data += sizeof(area_rfsx2);

    cv_cnv_endian_area_rfsy1( data );
    data += sizeof(area_rfsy1);

    cv_cnv_endian_area_rfsy2( data );
    data += sizeof(area_rfsy2);

    cv_cnv_endian_area_rfsz1( data );
    data += sizeof(area_rfsz1);

    cv_cnv_endian_area_rfsz2( data );
    data += sizeof(area_rfsz2);

    cv_cnv_endian_area_rfse1( data );
    data += sizeof(area_rfse1);

    cv_cnv_endian_area_rfse2( data );
    data += sizeof(area_rfse2);

    cv_cnv_endian_area_rfse3( data );
    data += sizeof(area_rfse3);

    cv_cnv_endian_area_rfse4( data );
    data += sizeof(area_rfse4);

    cv_cnv_endian_area_rfse5( data );
    data += sizeof(area_rfse5);

    cv_cnv_endian_area_rfse6( data );
    data += sizeof(area_rfse6);

    cv_cnv_endian_area_gyksx1( data );
    data += sizeof(area_gyksx1);

    cv_cnv_endian_area_gyksx2( data );
    data += sizeof(area_gyksx2);

    cv_cnv_endian_area_gyksy1( data );
    data += sizeof(area_gyksy1);

    cv_cnv_endian_area_gyksy2( data );
    data += sizeof(area_gyksy2);

    cv_cnv_endian_area_gyksz1( data );
    data += sizeof(area_gyksz1);

    cv_cnv_endian_area_gyksz2( data );
    data += sizeof(area_gyksz2);

    cv_cnv_endian_area_gykse1( data );
    data += sizeof(area_gykse1);

    cv_cnv_endian_area_gykse2( data );
    data += sizeof(area_gykse2);

    cv_cnv_endian_area_gykse3( data );
    data += sizeof(area_gykse3);

    cv_cnv_endian_area_gykse4( data );
    data += sizeof(area_gykse4);

    cv_cnv_endian_area_gykse5( data );
    data += sizeof(area_gykse5);

    cv_cnv_endian_area_gykse6( data );
    data += sizeof(area_gykse6);

    cv_cnv_endian_area_gxksx1( data );
    data += sizeof(area_gxksx1);

    cv_cnv_endian_area_gxksx2( data );
    data += sizeof(area_gxksx2);

    cv_cnv_endian_area_gxksy1( data );
    data += sizeof(area_gxksy1);

    cv_cnv_endian_area_gxksy2( data );
    data += sizeof(area_gxksy2);

    cv_cnv_endian_area_gxksz1( data );
    data += sizeof(area_gxksz1);

    cv_cnv_endian_area_gxksz2( data );
    data += sizeof(area_gxksz2);

    cv_cnv_endian_area_gxkse1( data );
    data += sizeof(area_gxkse1);

    cv_cnv_endian_area_gxkse2( data );
    data += sizeof(area_gxkse2);

    cv_cnv_endian_area_gxkse3( data );
    data += sizeof(area_gxkse3);

    cv_cnv_endian_area_gxkse4( data );
    data += sizeof(area_gxkse4);

    cv_cnv_endian_area_gxkse5( data );
    data += sizeof(area_gxkse5);

    cv_cnv_endian_area_gxkse6( data );
    data += sizeof(area_gxkse6);

    cv_cnv_endian_sp_sattime( data );
    data += sizeof(sp_sattime);

    cv_cnv_endian_sp_satstart( data );
    data += sizeof(sp_satstart);

    cv_cnv_endian_vrgsat( data );
    data += sizeof(vrgsat);

    cv_cnv_endian_numsatramp( data );
    data += sizeof(numsatramp);

    cv_cnv_endian_had_sat( data );
    data += sizeof(had_sat);

    cv_cnv_endian_rtia3d_sat_flip( data );
    data += sizeof(rtia3d_sat_flip);

    cv_cnv_endian_rtia3d_sat_pos( data );
    data += sizeof(rtia3d_sat_pos);

    cv_cnv_endian_sat_pulse_type( data );
    data += sizeof(sat_pulse_type);

    cv_cnv_endian_satgap_opt_flag( data );
    data += sizeof(satgap_opt_flag);

    cv_cnv_endian_autolock( data );
    data += sizeof(autolock);

    cv_cnv_endian_blank( data );
    data += sizeof(blank);

    cv_cnv_endian_nograd( data );
    data += sizeof(nograd);

    cv_cnv_endian_nofermi( data );
    data += sizeof(nofermi);

    cv_cnv_endian_rawdata( data );
    data += sizeof(rawdata);

    cv_cnv_endian_saveinter( data );
    data += sizeof(saveinter);

    cv_cnv_endian_zchop( data );
    data += sizeof(zchop);

    cv_cnv_endian_eepf( data );
    data += sizeof(eepf);

    cv_cnv_endian_oepf( data );
    data += sizeof(oepf);

    cv_cnv_endian_eeff( data );
    data += sizeof(eeff);

    cv_cnv_endian_oeff( data );
    data += sizeof(oeff);

    cv_cnv_endian_cine_choplet( data );
    data += sizeof(cine_choplet);

    cv_cnv_endian_fermi_rc( data );
    data += sizeof(fermi_rc);

    cv_cnv_endian_fermi_wc( data );
    data += sizeof(fermi_wc);

    cv_cnv_endian_apodize_level_flag( data );
    data += sizeof(apodize_level_flag);

    cv_cnv_endian_fermi_r_factor( data );
    data += sizeof(fermi_r_factor);

    cv_cnv_endian_fermi_w_factor( data );
    data += sizeof(fermi_w_factor);

    cv_cnv_endian_pure_mix_tx_scale( data );
    data += sizeof(pure_mix_tx_scale);

    cv_cnv_endian_channel_compression( data );
    data += sizeof(channel_compression);

    cv_cnv_endian_optimal_channel_combine( data );
    data += sizeof(optimal_channel_combine);

    cv_cnv_endian_enforce_cal_for_channel_combine( data );
    data += sizeof(enforce_cal_for_channel_combine);

    cv_cnv_endian_override_opcalrequired( data );
    data += sizeof(override_opcalrequired);

    cv_cnv_endian_dump_channel_comp_optimal_recon( data );
    data += sizeof(dump_channel_comp_optimal_recon);

    cv_cnv_endian_dump_scenic_parameters( data );
    data += sizeof(dump_scenic_parameters);

    cv_cnv_endian_PSsr_derate_factor( data );
    data += sizeof(PSsr_derate_factor);

    cv_cnv_endian_PSamp_derate_factor( data );
    data += sizeof(PSamp_derate_factor);

    cv_cnv_endian_PSassr_derate_factor( data );
    data += sizeof(PSassr_derate_factor);

    cv_cnv_endian_PSasamp_derate_factor( data );
    data += sizeof(PSasamp_derate_factor);

    cv_cnv_endian_PSTR_PASS( data );
    data += sizeof(PSTR_PASS);

    cv_cnv_endian_mpsfov( data );
    data += sizeof(mpsfov);

    cv_cnv_endian_fastprescan( data );
    data += sizeof(fastprescan);

    cv_cnv_endian_pre_slice( data );
    data += sizeof(pre_slice);

    cv_cnv_endian_PSslice_num( data );
    data += sizeof(PSslice_num);

    cv_cnv_endian_xmtaddAPS1( data );
    data += sizeof(xmtaddAPS1);

    cv_cnv_endian_xmtaddCFL( data );
    data += sizeof(xmtaddCFL);

    cv_cnv_endian_xmtaddCFH( data );
    data += sizeof(xmtaddCFH);

    cv_cnv_endian_xmtaddFTG( data );
    data += sizeof(xmtaddFTG);

    cv_cnv_endian_xmtadd( data );
    data += sizeof(xmtadd);

    cv_cnv_endian_xmtaddRCVN( data );
    data += sizeof(xmtaddRCVN);

    cv_cnv_endian_ps1scale( data );
    data += sizeof(ps1scale);

    cv_cnv_endian_cflscale( data );
    data += sizeof(cflscale);

    cv_cnv_endian_cfhscale( data );
    data += sizeof(cfhscale);

    cv_cnv_endian_ftgscale( data );
    data += sizeof(ftgscale);

    cv_cnv_endian_extraScale( data );
    data += sizeof(extraScale);

    cv_cnv_endian_PSdebugstate( data );
    data += sizeof(PSdebugstate);

    cv_cnv_endian_PSfield_strength( data );
    data += sizeof(PSfield_strength);

    cv_cnv_endian_PScs_sat( data );
    data += sizeof(PScs_sat);

    cv_cnv_endian_PSir( data );
    data += sizeof(PSir);

    cv_cnv_endian_PSmt( data );
    data += sizeof(PSmt);

    cv_cnv_endian_ps1_rxcoil( data );
    data += sizeof(ps1_rxcoil);

    cv_cnv_endian_ps_seed( data );
    data += sizeof(ps_seed);

    cv_cnv_endian_tg_1_2_pw( data );
    data += sizeof(tg_1_2_pw);

    cv_cnv_endian_tg_axial( data );
    data += sizeof(tg_axial);

    cv_cnv_endian_coeff_pw_tg( data );
    data += sizeof(coeff_pw_tg);

    cv_cnv_endian_fov_lim_mps( data );
    data += sizeof(fov_lim_mps);

    cv_cnv_endian_TGspf( data );
    data += sizeof(TGspf);

    cv_cnv_endian_flip_rf2cfh( data );
    data += sizeof(flip_rf2cfh);

    cv_cnv_endian_flip_rf3cfh( data );
    data += sizeof(flip_rf3cfh);

    cv_cnv_endian_flip_rf4cfh( data );
    data += sizeof(flip_rf4cfh);

    cv_cnv_endian_ps1_tr( data );
    data += sizeof(ps1_tr);

    cv_cnv_endian_cfl_tr( data );
    data += sizeof(cfl_tr);

    cv_cnv_endian_cfh_tr( data );
    data += sizeof(cfh_tr);

    cv_cnv_endian_rcvn_tr( data );
    data += sizeof(rcvn_tr);

    cv_cnv_endian_cfh_ec_position( data );
    data += sizeof(cfh_ec_position);

    cv_cnv_endian_cfl_dda( data );
    data += sizeof(cfl_dda);

    cv_cnv_endian_cfl_nex( data );
    data += sizeof(cfl_nex);

    cv_cnv_endian_cfh_dda( data );
    data += sizeof(cfh_dda);

    cv_cnv_endian_cfh_nex( data );
    data += sizeof(cfh_nex);

    cv_cnv_endian_rcvn_dda( data );
    data += sizeof(rcvn_dda);

    cv_cnv_endian_rcvn_nex( data );
    data += sizeof(rcvn_nex);

    cv_cnv_endian_local_tg( data );
    data += sizeof(local_tg);

    cv_cnv_endian_fov_scaling( data );
    data += sizeof(fov_scaling);

    cv_cnv_endian_flip_rf1xtg( data );
    data += sizeof(flip_rf1xtg);

    cv_cnv_endian_gscale_rf1xtg( data );
    data += sizeof(gscale_rf1xtg);

    cv_cnv_endian_init_xtg_deadtime( data );
    data += sizeof(init_xtg_deadtime);

    cv_cnv_endian_flip_rf1mps1( data );
    data += sizeof(flip_rf1mps1);

    cv_cnv_endian_gscale_rf1mps1( data );
    data += sizeof(gscale_rf1mps1);

    cv_cnv_endian_presscfh_override( data );
    data += sizeof(presscfh_override);

    cv_cnv_endian_presscfh( data );
    data += sizeof(presscfh);

    cv_cnv_endian_presscfh_ctrl( data );
    data += sizeof(presscfh_ctrl);

    cv_cnv_endian_presscfh_outrange( data );
    data += sizeof(presscfh_outrange);

    cv_cnv_endian_presscfh_cgate( data );
    data += sizeof(presscfh_cgate);

    cv_cnv_endian_presscfh_debug( data );
    data += sizeof(presscfh_debug);

    cv_cnv_endian_presscfh_wait_rf12( data );
    data += sizeof(presscfh_wait_rf12);

    cv_cnv_endian_presscfh_wait_rf23( data );
    data += sizeof(presscfh_wait_rf23);

    cv_cnv_endian_presscfh_wait_rf34( data );
    data += sizeof(presscfh_wait_rf34);

    cv_cnv_endian_presscfh_minte( data );
    data += sizeof(presscfh_minte);

    cv_cnv_endian_presscfh_fov( data );
    data += sizeof(presscfh_fov);

    cv_cnv_endian_presscfh_fov_ratio( data );
    data += sizeof(presscfh_fov_ratio);

    cv_cnv_endian_presscfh_pfov_ratio( data );
    data += sizeof(presscfh_pfov_ratio);

    cv_cnv_endian_presscfh_slab_ratio( data );
    data += sizeof(presscfh_slab_ratio);

    cv_cnv_endian_presscfh_pfov( data );
    data += sizeof(presscfh_pfov);

    cv_cnv_endian_presscfh_slthick( data );
    data += sizeof(presscfh_slthick);

    cv_cnv_endian_presscfh_slice( data );
    data += sizeof(presscfh_slice);

    cv_cnv_endian_presscfh_ir_slthick( data );
    data += sizeof(presscfh_ir_slthick);

    cv_cnv_endian_presscfh_ir_noselect( data );
    data += sizeof(presscfh_ir_noselect);

    cv_cnv_endian_presscfh_minfov_ratio( data );
    data += sizeof(presscfh_minfov_ratio);

    cv_cnv_endian_cfh_steam_flag( data );
    data += sizeof(cfh_steam_flag);

    cv_cnv_endian_steam_pg_gap( data );
    data += sizeof(steam_pg_gap);

    cv_cnv_endian_area_gykcfl( data );
    data += sizeof(area_gykcfl);

    cv_cnv_endian_area_gykcfh( data );
    data += sizeof(area_gykcfh);

    cv_cnv_endian_area_xtgzkiller( data );
    data += sizeof(area_xtgzkiller);

    cv_cnv_endian_area_xtgykiller( data );
    data += sizeof(area_xtgykiller);

    cv_cnv_endian_PSoff90( data );
    data += sizeof(PSoff90);

    cv_cnv_endian_dummy_pw( data );
    data += sizeof(dummy_pw);

    cv_cnv_endian_min180te( data );
    data += sizeof(min180te);

    cv_cnv_endian_PStloc( data );
    data += sizeof(PStloc);

    cv_cnv_endian_PSrloc( data );
    data += sizeof(PSrloc);

    cv_cnv_endian_PSphasoff( data );
    data += sizeof(PSphasoff);

    cv_cnv_endian_PStrigger( data );
    data += sizeof(PStrigger);

    cv_cnv_endian_PStloc_mod( data );
    data += sizeof(PStloc_mod);

    cv_cnv_endian_PSrloc_mod( data );
    data += sizeof(PSrloc_mod);

    cv_cnv_endian_PSphasoff_mod( data );
    data += sizeof(PSphasoff_mod);

    cv_cnv_endian_thickPS_mod( data );
    data += sizeof(thickPS_mod);

    cv_cnv_endian_asx_killer_area( data );
    data += sizeof(asx_killer_area);

    cv_cnv_endian_asz_killer_area( data );
    data += sizeof(asz_killer_area);

    cv_cnv_endian_cfhir_killer_area( data );
    data += sizeof(cfhir_killer_area);

    cv_cnv_endian_ps_crusher_area( data );
    data += sizeof(ps_crusher_area);

    cv_cnv_endian_cfh_crusher_area( data );
    data += sizeof(cfh_crusher_area);

    cv_cnv_endian_target_cfh_crusher( data );
    data += sizeof(target_cfh_crusher);

    cv_cnv_endian_target_cfh_crusher2( data );
    data += sizeof(target_cfh_crusher2);

    cv_cnv_endian_cfh_newmode( data );
    data += sizeof(cfh_newmode);

    cv_cnv_endian_cfh_rf1freq( data );
    data += sizeof(cfh_rf1freq);

    cv_cnv_endian_cfh_rf2freq( data );
    data += sizeof(cfh_rf2freq);

    cv_cnv_endian_cfh_rf3freq( data );
    data += sizeof(cfh_rf3freq);

    cv_cnv_endian_cfh_rf4freq( data );
    data += sizeof(cfh_rf4freq);

    cv_cnv_endian_cfh_fov( data );
    data += sizeof(cfh_fov);

    cv_cnv_endian_cfh_ti( data );
    data += sizeof(cfh_ti);

    cv_cnv_endian_eff_cfh_te( data );
    data += sizeof(eff_cfh_te);

    cv_cnv_endian_PScfh_shimvol_debug( data );
    data += sizeof(PScfh_shimvol_debug);

    cv_cnv_endian_debug_shimvol_slice( data );
    data += sizeof(debug_shimvol_slice);

    cv_cnv_endian_wg_cfh_rf3( data );
    data += sizeof(wg_cfh_rf3);

    cv_cnv_endian_wg_cfh_rf4( data );
    data += sizeof(wg_cfh_rf4);

    cv_cnv_endian_FTGslthk( data );
    data += sizeof(FTGslthk);

    cv_cnv_endian_FTGopslthickz1( data );
    data += sizeof(FTGopslthickz1);

    cv_cnv_endian_FTGopslthickz2( data );
    data += sizeof(FTGopslthickz2);

    cv_cnv_endian_FTGopslthickz3( data );
    data += sizeof(FTGopslthickz3);

    cv_cnv_endian_ftgtr( data );
    data += sizeof(ftgtr);

    cv_cnv_endian_FTGfov( data );
    data += sizeof(FTGfov);

    cv_cnv_endian_FTGau( data );
    data += sizeof(FTGau);

    cv_cnv_endian_FTGtecho( data );
    data += sizeof(FTGtecho);

    cv_cnv_endian_FTGtau1( data );
    data += sizeof(FTGtau1);

    cv_cnv_endian_FTGtau2( data );
    data += sizeof(FTGtau2);

    cv_cnv_endian_FTGacq1( data );
    data += sizeof(FTGacq1);

    cv_cnv_endian_FTGacq2( data );
    data += sizeof(FTGacq2);

    cv_cnv_endian_epi_ir_on( data );
    data += sizeof(epi_ir_on);

    cv_cnv_endian_ssfse_ir_on( data );
    data += sizeof(ssfse_ir_on);

    cv_cnv_endian_ftg_dda( data );
    data += sizeof(ftg_dda);

    cv_cnv_endian_FTGecho1bw( data );
    data += sizeof(FTGecho1bw);

    cv_cnv_endian_FTGtestpulse( data );
    data += sizeof(FTGtestpulse);

    cv_cnv_endian_FTGxres( data );
    data += sizeof(FTGxres);

    cv_cnv_endian_FTGxmtadd( data );
    data += sizeof(FTGxmtadd);

    cv_cnv_endian_pw_gxw2ftgleft( data );
    data += sizeof(pw_gxw2ftgleft);

    cv_cnv_endian_xtgtr( data );
    data += sizeof(xtgtr);

    cv_cnv_endian_XTGtau1( data );
    data += sizeof(XTGtau1);

    cv_cnv_endian_XTGfov( data );
    data += sizeof(XTGfov);

    cv_cnv_endian_pw_bsrf( data );
    data += sizeof(pw_bsrf);

    cv_cnv_endian_xtg_offres_freq( data );
    data += sizeof(xtg_offres_freq);

    cv_cnv_endian_XTGecho1bw( data );
    data += sizeof(XTGecho1bw);

    cv_cnv_endian_XTGxres( data );
    data += sizeof(XTGxres);

    cv_cnv_endian_xmtaddXTG( data );
    data += sizeof(xmtaddXTG);

    cv_cnv_endian_xtgscale( data );
    data += sizeof(xtgscale);

    cv_cnv_endian_xtg_dda( data );
    data += sizeof(xtg_dda);

    cv_cnv_endian_XTGacq1( data );
    data += sizeof(XTGacq1);

    cv_cnv_endian_TGopslthick( data );
    data += sizeof(TGopslthick);

    cv_cnv_endian_TGopslthickx( data );
    data += sizeof(TGopslthickx);

    cv_cnv_endian_TGopslthicky( data );
    data += sizeof(TGopslthicky);

    cv_cnv_endian_XTG_minimizeYKillerGap( data );
    data += sizeof(XTG_minimizeYKillerGap);

    cv_cnv_endian_dynTG_etl( data );
    data += sizeof(dynTG_etl);

    cv_cnv_endian_dtg_iso_delay( data );
    data += sizeof(dtg_iso_delay);

    cv_cnv_endian_dtg_off90( data );
    data += sizeof(dtg_off90);

    cv_cnv_endian_dtg_dda( data );
    data += sizeof(dtg_dda);

    cv_cnv_endian_rf1dtg_type( data );
    data += sizeof(rf1dtg_type);

    cv_cnv_endian_echo1bwdtg( data );
    data += sizeof(echo1bwdtg);

    cv_cnv_endian_dtgt_exa( data );
    data += sizeof(dtgt_exa);

    cv_cnv_endian_dtgt_exb( data );
    data += sizeof(dtgt_exb);

    cv_cnv_endian_tleaddtg( data );
    data += sizeof(tleaddtg);

    cv_cnv_endian_td0dtg( data );
    data += sizeof(td0dtg);

    cv_cnv_endian_dtgphorder( data );
    data += sizeof(dtgphorder);

    cv_cnv_endian_dtgspgr_flag( data );
    data += sizeof(dtgspgr_flag);

    cv_cnv_endian_pw_rf1dtg( data );
    data += sizeof(pw_rf1dtg);

    cv_cnv_endian_a_rf1dtg( data );
    data += sizeof(a_rf1dtg);

    cv_cnv_endian_min_dtgte( data );
    data += sizeof(min_dtgte);

    cv_cnv_endian_dtg_esp( data );
    data += sizeof(dtg_esp);

    cv_cnv_endian_tr_dtg( data );
    data += sizeof(tr_dtg);

    cv_cnv_endian_time_ssidtg( data );
    data += sizeof(time_ssidtg);

    cv_cnv_endian_rsaxial_flag( data );
    data += sizeof(rsaxial_flag);

    cv_cnv_endian_rsspgr_flag( data );
    data += sizeof(rsspgr_flag);

    cv_cnv_endian_multi_channel( data );
    data += sizeof(multi_channel);

    cv_cnv_endian_minph_iso_delay( data );
    data += sizeof(minph_iso_delay);

    cv_cnv_endian_rs_off90( data );
    data += sizeof(rs_off90);

    cv_cnv_endian_rs_iso_delay( data );
    data += sizeof(rs_iso_delay);

    cv_cnv_endian_echo1bwrs( data );
    data += sizeof(echo1bwrs);

    cv_cnv_endian_rsphorder( data );
    data += sizeof(rsphorder);

    cv_cnv_endian_rs_dda( data );
    data += sizeof(rs_dda);

    cv_cnv_endian_rst_exa( data );
    data += sizeof(rst_exa);

    cv_cnv_endian_rst_exb( data );
    data += sizeof(rst_exb);

    cv_cnv_endian_tleadrs( data );
    data += sizeof(tleadrs);

    cv_cnv_endian_td0rs( data );
    data += sizeof(td0rs);

    cv_cnv_endian_pw_rf1rs( data );
    data += sizeof(pw_rf1rs);

    cv_cnv_endian_ia_rf1rs( data );
    data += sizeof(ia_rf1rs);

    cv_cnv_endian_a_rf1rs( data );
    data += sizeof(a_rf1rs);

    cv_cnv_endian_rf1rs_type( data );
    data += sizeof(rf1rs_type);

    cv_cnv_endian_gscale_rf1rs( data );
    data += sizeof(gscale_rf1rs);

    cv_cnv_endian_flip_rf1rs( data );
    data += sizeof(flip_rf1rs);

    cv_cnv_endian_flip_rfbrs( data );
    data += sizeof(flip_rfbrs);

    cv_cnv_endian_cyc_rf1rs( data );
    data += sizeof(cyc_rf1rs);

    cv_cnv_endian_flip_rf1dtg( data );
    data += sizeof(flip_rf1dtg);

    cv_cnv_endian_flip_rfbdtg( data );
    data += sizeof(flip_rfbdtg);

    cv_cnv_endian_cyc_rf1dtg( data );
    data += sizeof(cyc_rf1dtg);

    cv_cnv_endian_gscale_rf1dtg( data );
    data += sizeof(gscale_rf1dtg);

    cv_cnv_endian_ia_rf1dtg( data );
    data += sizeof(ia_rf1dtg);

    cv_cnv_endian_rf1rs_scale( data );
    data += sizeof(rf1rs_scale);

    cv_cnv_endian_rf1dtg_scale( data );
    data += sizeof(rf1dtg_scale);

    cv_cnv_endian_xmtaddrs( data );
    data += sizeof(xmtaddrs);

    cv_cnv_endian_xmtadddtg( data );
    data += sizeof(xmtadddtg);

    cv_cnv_endian_pw_acqrs1( data );
    data += sizeof(pw_acqrs1);

    cv_cnv_endian_pw_acqdtg1( data );
    data += sizeof(pw_acqdtg1);

    cv_cnv_endian_min_rste( data );
    data += sizeof(min_rste);

    cv_cnv_endian_rs_esp( data );
    data += sizeof(rs_esp);

    cv_cnv_endian_tr_rs( data );
    data += sizeof(tr_rs);

    cv_cnv_endian_tr_prep_rs( data );
    data += sizeof(tr_prep_rs);

    cv_cnv_endian_rd_ext_rs( data );
    data += sizeof(rd_ext_rs);

    cv_cnv_endian_rd_ext_dtg( data );
    data += sizeof(rd_ext_dtg);

    cv_cnv_endian_fast_xtr( data );
    data += sizeof(fast_xtr);

    cv_cnv_endian_attenlen( data );
    data += sizeof(attenlen);

    cv_cnv_endian_tns_len( data );
    data += sizeof(tns_len);

    cv_cnv_endian_e2_delay_rs( data );
    data += sizeof(e2_delay_rs);

    cv_cnv_endian_e2_delay_dtg( data );
    data += sizeof(e2_delay_dtg);

    cv_cnv_endian_time_ssirs( data );
    data += sizeof(time_ssirs);

    cv_cnv_endian_rfshim_etl( data );
    data += sizeof(rfshim_etl);

    cv_cnv_endian_B1Cal_mode( data );
    data += sizeof(B1Cal_mode);

    cv_cnv_endian_DD_delay( data );
    data += sizeof(DD_delay);

    cv_cnv_endian_DD_channels( data );
    data += sizeof(DD_channels);

    cv_cnv_endian_DD_nCh( data );
    data += sizeof(DD_nCh);

    cv_cnv_endian_DD_debug( data );
    data += sizeof(DD_debug);

    cv_cnv_endian_endview_iamprs( data );
    data += sizeof(endview_iamprs);

    cv_cnv_endian_endview_iampdtg( data );
    data += sizeof(endview_iampdtg);

    cv_cnv_endian_endview_scalers( data );
    data += sizeof(endview_scalers);

    cv_cnv_endian_endview_scaledtg( data );
    data += sizeof(endview_scaledtg);

    cv_cnv_endian_echo1bwcal( data );
    data += sizeof(echo1bwcal);

    cv_cnv_endian_cal_dda( data );
    data += sizeof(cal_dda);

    cv_cnv_endian_cal_delay( data );
    data += sizeof(cal_delay);

    cv_cnv_endian_cal_delay_dda( data );
    data += sizeof(cal_delay_dda);

    cv_cnv_endian_calspgr_flag( data );
    data += sizeof(calspgr_flag);

    cv_cnv_endian_cal_tr_interleave( data );
    data += sizeof(cal_tr_interleave);

    cv_cnv_endian_cal_nex_interleave( data );
    data += sizeof(cal_nex_interleave);

    cv_cnv_endian_cal_xfov( data );
    data += sizeof(cal_xfov);

    cv_cnv_endian_cal_yfov( data );
    data += sizeof(cal_yfov);

    cv_cnv_endian_cal_vthick( data );
    data += sizeof(cal_vthick);

    cv_cnv_endian_cal_btw_rf_rba_ssp( data );
    data += sizeof(cal_btw_rf_rba_ssp);

    cv_cnv_endian_cal_grd_rf_delays( data );
    data += sizeof(cal_grd_rf_delays);

    cv_cnv_endian_tleadcal( data );
    data += sizeof(tleadcal);

    cv_cnv_endian_td0cal( data );
    data += sizeof(td0cal);

    cv_cnv_endian_calt_exa( data );
    data += sizeof(calt_exa);

    cv_cnv_endian_calt_exb( data );
    data += sizeof(calt_exb);

    cv_cnv_endian_tacq_cal( data );
    data += sizeof(tacq_cal);

    cv_cnv_endian_te_cal( data );
    data += sizeof(te_cal);

    cv_cnv_endian_tr_cal( data );
    data += sizeof(tr_cal);

    cv_cnv_endian_flip_rf1cal( data );
    data += sizeof(flip_rf1cal);

    cv_cnv_endian_cal_iso_delay( data );
    data += sizeof(cal_iso_delay);

    cv_cnv_endian_endview_iampcal( data );
    data += sizeof(endview_iampcal);

    cv_cnv_endian_endviewz_iampcal( data );
    data += sizeof(endviewz_iampcal);

    cv_cnv_endian_endview_scalecal( data );
    data += sizeof(endview_scalecal);

    cv_cnv_endian_endviewz_scalecal( data );
    data += sizeof(endviewz_scalecal);

    cv_cnv_endian_a_combcal( data );
    data += sizeof(a_combcal);

    cv_cnv_endian_a_endcal( data );
    data += sizeof(a_endcal);

    cv_cnv_endian_a_combcal2( data );
    data += sizeof(a_combcal2);

    cv_cnv_endian_a_endcal2( data );
    data += sizeof(a_endcal2);

    cv_cnv_endian_time_ssical( data );
    data += sizeof(time_ssical);

    cv_cnv_endian_xmtaddcal( data );
    data += sizeof(xmtaddcal);

    cv_cnv_endian_cal_amplimit( data );
    data += sizeof(cal_amplimit);

    cv_cnv_endian_cal_slewrate( data );
    data += sizeof(cal_slewrate);

    cv_cnv_endian_cal_freq_scale( data );
    data += sizeof(cal_freq_scale);

    cv_cnv_endian_cal_phase_scale( data );
    data += sizeof(cal_phase_scale);

    cv_cnv_endian_area_gzkcal( data );
    data += sizeof(area_gzkcal);

    cv_cnv_endian_cal_ampscale( data );
    data += sizeof(cal_ampscale);

    cv_cnv_endian_cal_pfkr_flag( data );
    data += sizeof(cal_pfkr_flag);

    cv_cnv_endian_cal_pfkr_fraction( data );
    data += sizeof(cal_pfkr_fraction);

    cv_cnv_endian_cal_sampledPts( data );
    data += sizeof(cal_sampledPts);

    cv_cnv_endian_echo1bwcoil( data );
    data += sizeof(echo1bwcoil);

    cv_cnv_endian_coil_dda( data );
    data += sizeof(coil_dda);

    cv_cnv_endian_coilspgr_flag( data );
    data += sizeof(coilspgr_flag);

    cv_cnv_endian_coil_nex_interleave( data );
    data += sizeof(coil_nex_interleave);

    cv_cnv_endian_coil_xfov( data );
    data += sizeof(coil_xfov);

    cv_cnv_endian_coil_yfov( data );
    data += sizeof(coil_yfov);

    cv_cnv_endian_coil_vthick( data );
    data += sizeof(coil_vthick);

    cv_cnv_endian_tleadcoil( data );
    data += sizeof(tleadcoil);

    cv_cnv_endian_td0coil( data );
    data += sizeof(td0coil);

    cv_cnv_endian_coilt_exa( data );
    data += sizeof(coilt_exa);

    cv_cnv_endian_coilt_exb( data );
    data += sizeof(coilt_exb);

    cv_cnv_endian_tacq_coil( data );
    data += sizeof(tacq_coil);

    cv_cnv_endian_te_coil( data );
    data += sizeof(te_coil);

    cv_cnv_endian_tr_coil( data );
    data += sizeof(tr_coil);

    cv_cnv_endian_flip_rf1coil( data );
    data += sizeof(flip_rf1coil);

    cv_cnv_endian_coil_iso_delay( data );
    data += sizeof(coil_iso_delay);

    cv_cnv_endian_endview_iampcoil( data );
    data += sizeof(endview_iampcoil);

    cv_cnv_endian_endviewz_iampcoil( data );
    data += sizeof(endviewz_iampcoil);

    cv_cnv_endian_endview_scalecoil( data );
    data += sizeof(endview_scalecoil);

    cv_cnv_endian_endviewz_scalecoil( data );
    data += sizeof(endviewz_scalecoil);

    cv_cnv_endian_a_combcoil( data );
    data += sizeof(a_combcoil);

    cv_cnv_endian_a_endcoil( data );
    data += sizeof(a_endcoil);

    cv_cnv_endian_a_combcoil2( data );
    data += sizeof(a_combcoil2);

    cv_cnv_endian_a_endcoil2( data );
    data += sizeof(a_endcoil2);

    cv_cnv_endian_time_ssicoil( data );
    data += sizeof(time_ssicoil);

    cv_cnv_endian_xmtaddcoil( data );
    data += sizeof(xmtaddcoil);

    cv_cnv_endian_coil_amplimit( data );
    data += sizeof(coil_amplimit);

    cv_cnv_endian_coil_slewrate( data );
    data += sizeof(coil_slewrate);

    cv_cnv_endian_coil_freq_scale( data );
    data += sizeof(coil_freq_scale);

    cv_cnv_endian_coil_phase_scale( data );
    data += sizeof(coil_phase_scale);

    cv_cnv_endian_coil_pfkr_flag( data );
    data += sizeof(coil_pfkr_flag);

    cv_cnv_endian_coil_pfkr_fraction( data );
    data += sizeof(coil_pfkr_fraction);

    cv_cnv_endian_coil_sampledPts( data );
    data += sizeof(coil_sampledPts);

    cv_cnv_endian_CFLxres( data );
    data += sizeof(CFLxres);

    cv_cnv_endian_CFHxres( data );
    data += sizeof(CFHxres);

    cv_cnv_endian_echo1bwcfl( data );
    data += sizeof(echo1bwcfl);

    cv_cnv_endian_echo1bwcfh( data );
    data += sizeof(echo1bwcfh);

    cv_cnv_endian_echo1bwrcvn( data );
    data += sizeof(echo1bwrcvn);

    cv_cnv_endian_rcvn_xres( data );
    data += sizeof(rcvn_xres);

    cv_cnv_endian_rcvn_loops( data );
    data += sizeof(rcvn_loops);

    cv_cnv_endian_pw_grdtrig( data );
    data += sizeof(pw_grdtrig);

    cv_cnv_endian_wait_time_before_cfh( data );
    data += sizeof(wait_time_before_cfh);

    cv_cnv_endian_echo1bwas( data );
    data += sizeof(echo1bwas);

    cv_cnv_endian_off90as( data );
    data += sizeof(off90as);

    cv_cnv_endian_td0as( data );
    data += sizeof(td0as);

    cv_cnv_endian_t_exaas( data );
    data += sizeof(t_exaas);

    cv_cnv_endian_time_ssias( data );
    data += sizeof(time_ssias);

    cv_cnv_endian_tleadas( data );
    data += sizeof(tleadas);

    cv_cnv_endian_te_as( data );
    data += sizeof(te_as);

    cv_cnv_endian_tr_as( data );
    data += sizeof(tr_as);

    cv_cnv_endian_as_dda( data );
    data += sizeof(as_dda);

    cv_cnv_endian_pw_isislice( data );
    data += sizeof(pw_isislice);

    cv_cnv_endian_pw_rotslice( data );
    data += sizeof(pw_rotslice);

    cv_cnv_endian_isi_sliceextra( data );
    data += sizeof(isi_sliceextra);

    cv_cnv_endian_rgfeature_enable( data );
    data += sizeof(rgfeature_enable);

    cv_cnv_endian_enableMapTg( data );
    data += sizeof(enableMapTg);

    cv_cnv_endian_aslenap( data );
    data += sizeof(aslenap);

    cv_cnv_endian_aslenrl( data );
    data += sizeof(aslenrl);

    cv_cnv_endian_aslensi( data );
    data += sizeof(aslensi);

    cv_cnv_endian_aslocap( data );
    data += sizeof(aslocap);

    cv_cnv_endian_aslocrl( data );
    data += sizeof(aslocrl);

    cv_cnv_endian_aslocsi( data );
    data += sizeof(aslocsi);

    cv_cnv_endian_area_gxwas( data );
    data += sizeof(area_gxwas);

    cv_cnv_endian_area_gz1as( data );
    data += sizeof(area_gz1as);

    cv_cnv_endian_area_readrampas( data );
    data += sizeof(area_readrampas);

    cv_cnv_endian_avail_pwgx1as( data );
    data += sizeof(avail_pwgx1as);

    cv_cnv_endian_avail_pwgz1as( data );
    data += sizeof(avail_pwgz1as);

    cv_cnv_endian_bw_rf1as( data );
    data += sizeof(bw_rf1as);

    cv_cnv_endian_flip_pctas( data );
    data += sizeof(flip_pctas);

    cv_cnv_endian_dix_timeas( data );
    data += sizeof(dix_timeas);

    cv_cnv_endian_xmtaddas( data );
    data += sizeof(xmtaddas);

    cv_cnv_endian_xmtlogas( data );
    data += sizeof(xmtlogas);

    cv_cnv_endian_ps1obl_debug( data );
    data += sizeof(ps1obl_debug);

    cv_cnv_endian_asobl_debug( data );
    data += sizeof(asobl_debug);

    cv_cnv_endian_ps1_newgeo( data );
    data += sizeof(ps1_newgeo);

    cv_cnv_endian_as_newgeo( data );
    data += sizeof(as_newgeo);

    cv_cnv_endian_pw_gy1as_tot( data );
    data += sizeof(pw_gy1as_tot);

    cv_cnv_endian_endview_iampas( data );
    data += sizeof(endview_iampas);

    cv_cnv_endian_endview_scaleas( data );
    data += sizeof(endview_scaleas);

    cv_cnv_endian_cfh_newgeo( data );
    data += sizeof(cfh_newgeo);

    cv_cnv_endian_cfhobl_debug( data );
    data += sizeof(cfhobl_debug);

    cv_cnv_endian_deltf( data );
    data += sizeof(deltf);

    cv_cnv_endian_IRinCFH( data );
    data += sizeof(IRinCFH);

    cv_cnv_endian_cfh_each( data );
    data += sizeof(cfh_each);

    cv_cnv_endian_cfh_slquant( data );
    data += sizeof(cfh_slquant);

    cv_cnv_endian_noswitch_slab_psc( data );
    data += sizeof(noswitch_slab_psc);

    cv_cnv_endian_noswitch_coil_psc( data );
    data += sizeof(noswitch_coil_psc);

    cv_cnv_endian_PStest_slab( data );
    data += sizeof(PStest_slab);

    cv_cnv_endian_pimrsapsflg( data );
    data += sizeof(pimrsapsflg);

    cv_cnv_endian_pimrsaps1( data );
    data += sizeof(pimrsaps1);

    cv_cnv_endian_pimrsaps2( data );
    data += sizeof(pimrsaps2);

    cv_cnv_endian_pimrsaps3( data );
    data += sizeof(pimrsaps3);

    cv_cnv_endian_pimrsaps4( data );
    data += sizeof(pimrsaps4);

    cv_cnv_endian_pimrsaps5( data );
    data += sizeof(pimrsaps5);

    cv_cnv_endian_pimrsaps6( data );
    data += sizeof(pimrsaps6);

    cv_cnv_endian_pimrsaps7( data );
    data += sizeof(pimrsaps7);

    cv_cnv_endian_pimrsaps8( data );
    data += sizeof(pimrsaps8);

    cv_cnv_endian_pimrsaps9( data );
    data += sizeof(pimrsaps9);

    cv_cnv_endian_pimrsaps10( data );
    data += sizeof(pimrsaps10);

    cv_cnv_endian_pimrsaps11( data );
    data += sizeof(pimrsaps11);

    cv_cnv_endian_pimrsaps12( data );
    data += sizeof(pimrsaps12);

    cv_cnv_endian_pimrsaps13( data );
    data += sizeof(pimrsaps13);

    cv_cnv_endian_pimrsaps14( data );
    data += sizeof(pimrsaps14);

    cv_cnv_endian_pimrsaps15( data );
    data += sizeof(pimrsaps15);

    cv_cnv_endian_pw_contrfhubsel( data );
    data += sizeof(pw_contrfhubsel);

    cv_cnv_endian_delay_rfhubsel( data );
    data += sizeof(delay_rfhubsel);

    cv_cnv_endian_pw_contrfsel( data );
    data += sizeof(pw_contrfsel);

    cv_cnv_endian_csw_tr( data );
    data += sizeof(csw_tr);

    cv_cnv_endian_csw_wait_sethubindeximm( data );
    data += sizeof(csw_wait_sethubindeximm);

    cv_cnv_endian_csw_wait_setrcvportimm( data );
    data += sizeof(csw_wait_setrcvportimm);

    cv_cnv_endian_csw_wait_before( data );
    data += sizeof(csw_wait_before);

    cv_cnv_endian_csw_time_ssi( data );
    data += sizeof(csw_time_ssi);

    cv_cnv_endian_area_gxkrcvn( data );
    data += sizeof(area_gxkrcvn);

    cv_cnv_endian_area_gykrcvn( data );
    data += sizeof(area_gykrcvn);

    cv_cnv_endian_area_gzkrcvn( data );
    data += sizeof(area_gzkrcvn);

    cv_cnv_endian_pre_rcvn_tr( data );
    data += sizeof(pre_rcvn_tr);

    cv_cnv_endian_rcvn_flag( data );
    data += sizeof(rcvn_flag);

    cv_cnv_endian_psd_startta_override( data );
    data += sizeof(psd_startta_override);

    cv_cnv_endian_psd_psctg( data );
    data += sizeof(psd_psctg);

    cv_cnv_endian_psd_pscshim( data );
    data += sizeof(psd_pscshim);

    cv_cnv_endian_psd_pscall( data );
    data += sizeof(psd_pscall);

    cv_cnv_endian_bw_rf1cal( data );
    data += sizeof(bw_rf1cal);

    cv_cnv_endian_bw_rf1coil( data );
    data += sizeof(bw_rf1coil);

    cv_cnv_endian_yk0_killer_area( data );
    data += sizeof(yk0_killer_area);

    cv_cnv_endian_ir_on( data );
    data += sizeof(ir_on);

    cv_cnv_endian_ir_start( data );
    data += sizeof(ir_start);

    cv_cnv_endian_irk_start( data );
    data += sizeof(irk_start);

    cv_cnv_endian_ir_grad_time( data );
    data += sizeof(ir_grad_time);

    cv_cnv_endian_ir_time( data );
    data += sizeof(ir_time);

    cv_cnv_endian_ir_time_total( data );
    data += sizeof(ir_time_total);

    cv_cnv_endian_ext_ir_pulse( data );
    data += sizeof(ext_ir_pulse);

    cv_cnv_endian_rf0_phase( data );
    data += sizeof(rf0_phase);

    cv_cnv_endian_irslquant( data );
    data += sizeof(irslquant);

    cv_cnv_endian_pos_ir_start( data );
    data += sizeof(pos_ir_start);

    cv_cnv_endian_bw_rf0( data );
    data += sizeof(bw_rf0);

    cv_cnv_endian_hrf0( data );
    data += sizeof(hrf0);

    cv_cnv_endian_ir_index( data );
    data += sizeof(ir_index);

    cv_cnv_endian_csf_fact( data );
    data += sizeof(csf_fact);

    cv_cnv_endian_ir_fa_scaling_flag( data );
    data += sizeof(ir_fa_scaling_flag);

    cv_cnv_endian_inner_spacing( data );
    data += sizeof(inner_spacing);

    cv_cnv_endian_post_spacing( data );
    data += sizeof(post_spacing);

    cv_cnv_endian_invseqlen( data );
    data += sizeof(invseqlen);

    cv_cnv_endian_ir_rfupa( data );
    data += sizeof(ir_rfupa);

    cv_cnv_endian_ir_sys_type( data );
    data += sizeof(ir_sys_type);

    cv_cnv_endian_invThickOpt( data );
    data += sizeof(invThickOpt);

    cv_cnv_endian_invThickOpt_seqtime( data );
    data += sizeof(invThickOpt_seqtime);

    cv_cnv_endian_t2flair_extra_ir_flag( data );
    data += sizeof(t2flair_extra_ir_flag);

    cv_cnv_endian_packs( data );
    data += sizeof(packs);

    cv_cnv_endian_ir_fa_scale_debug( data );
    data += sizeof(ir_fa_scale_debug);

    cv_cnv_endian_ss_rf1( data );
    data += sizeof(ss_rf1);

    cv_cnv_endian_fat_flag( data );
    data += sizeof(fat_flag);

    cv_cnv_endian_fat_delta( data );
    data += sizeof(fat_delta);

    cv_cnv_endian_fat_offset( data );
    data += sizeof(fat_offset);

    cv_cnv_endian_sszchop( data );
    data += sizeof(sszchop);

    cv_cnv_endian_pw_gzrf1lobe( data );
    data += sizeof(pw_gzrf1lobe);

    cv_cnv_endian_pw_constant( data );
    data += sizeof(pw_constant);

    cv_cnv_endian_num_rf1lobe( data );
    data += sizeof(num_rf1lobe);

    cv_cnv_endian_gradient_mode( data );
    data += sizeof(gradient_mode);

    cv_cnv_endian_ss_rf_wait( data );
    data += sizeof(ss_rf_wait);

    cv_cnv_endian_pw_ss_rampz( data );
    data += sizeof(pw_ss_rampz);

    cv_cnv_endian_ss_override( data );
    data += sizeof(ss_override);

    cv_cnv_endian_whichss( data );
    data += sizeof(whichss);

    cv_cnv_endian_nbw_ssrf( data );
    data += sizeof(nbw_ssrf);

    cv_cnv_endian_ss_min_slthk( data );
    data += sizeof(ss_min_slthk);

    cv_cnv_endian_ss_maxoff( data );
    data += sizeof(ss_maxoff);

    cv_cnv_endian_ss_minslthk1( data );
    data += sizeof(ss_minslthk1);

    cv_cnv_endian_ss_convolution_flag( data );
    data += sizeof(ss_convolution_flag);

    cv_cnv_endian_breast_spsp_flag( data );
    data += sizeof(breast_spsp_flag);

    cv_cnv_endian_ss_fa_scaling_flag( data );
    data += sizeof(ss_fa_scaling_flag);

    cv_cnv_endian_ss_fa_scale_debug( data );
    data += sizeof(ss_fa_scale_debug);

    cv_cnv_endian_max_ss_fa( data );
    data += sizeof(max_ss_fa);

    cv_cnv_endian_ss_maxoffex( data );
    data += sizeof(ss_maxoffex);

    cv_cnv_endian_off90minor( data );
    data += sizeof(off90minor);

    cv_cnv_endian_omega_amp( data );
    data += sizeof(omega_amp);

    cv_cnv_endian_gz1_zero_moment( data );
    data += sizeof(gz1_zero_moment);

    cv_cnv_endian_gz1_first_moment( data );
    data += sizeof(gz1_first_moment);

    cv_cnv_endian_a_gzrf1_ss_max( data );
    data += sizeof(a_gzrf1_ss_max);

    cv_cnv_endian_freqSign( data );
    data += sizeof(freqSign);

    cv_cnv_endian_cv_rfupa( data );
    data += sizeof(cv_rfupa);

    cv_cnv_endian_system_type( data );
    data += sizeof(system_type);

    cv_cnv_endian_cvlock( data );
    data += sizeof(cvlock);

    cv_cnv_endian_psd_taps( data );
    data += sizeof(psd_taps);

    cv_cnv_endian_fix_fermi( data );
    data += sizeof(fix_fermi);

    cv_cnv_endian_grad_spec_ctrl( data );
    data += sizeof(grad_spec_ctrl);

    cv_cnv_endian_srate( data );
    data += sizeof(srate);

    cv_cnv_endian_glimit( data );
    data += sizeof(glimit);

    cv_cnv_endian_save_gmax( data );
    data += sizeof(save_gmax);

    cv_cnv_endian_save_srate( data );
    data += sizeof(save_srate);

    cv_cnv_endian_save_cfxfull( data );
    data += sizeof(save_cfxfull);

    cv_cnv_endian_save_cfyfull( data );
    data += sizeof(save_cfyfull);

    cv_cnv_endian_save_cfzfull( data );
    data += sizeof(save_cfzfull);

    cv_cnv_endian_save_cfxipeak( data );
    data += sizeof(save_cfxipeak);

    cv_cnv_endian_save_cfyipeak( data );
    data += sizeof(save_cfyipeak);

    cv_cnv_endian_save_cfzipeak( data );
    data += sizeof(save_cfzipeak);

    cv_cnv_endian_save_ramptime( data );
    data += sizeof(save_ramptime);

    cv_cnv_endian_debug_grad_spec( data );
    data += sizeof(debug_grad_spec);

    cv_cnv_endian_act_srate( data );
    data += sizeof(act_srate);

    cv_cnv_endian_val15_lock( data );
    data += sizeof(val15_lock);

    cv_cnv_endian_avecrushpepowscale_for_SBM_XFD( data );
    data += sizeof(avecrushpepowscale_for_SBM_XFD);

    cv_cnv_endian_dbdt_model( data );
    data += sizeof(dbdt_model);

    cv_cnv_endian_dbdtper_new( data );
    data += sizeof(dbdtper_new);

    cv_cnv_endian_esprange_check( data );
    data += sizeof(esprange_check);

    cv_cnv_endian_espamp_check( data );
    data += sizeof(espamp_check);

    cv_cnv_endian_espopt( data );
    data += sizeof(espopt);

    cv_cnv_endian_espincway( data );
    data += sizeof(espincway);

    cv_cnv_endian_epigradopt_debug( data );
    data += sizeof(epigradopt_debug);

    cv_cnv_endian_epigradopt_output( data );
    data += sizeof(epigradopt_output);

    cv_cnv_endian_disable_crc_check_for_esp( data );
    data += sizeof(disable_crc_check_for_esp);

    cv_cnv_endian_dbdtperx( data );
    data += sizeof(dbdtperx);

    cv_cnv_endian_dbdtpery( data );
    data += sizeof(dbdtpery);

    cv_cnv_endian_dbdtperz( data );
    data += sizeof(dbdtperz);

    cv_cnv_endian_max_dbdtper_hb_zblips( data );
    data += sizeof(max_dbdtper_hb_zblips);

    cv_cnv_endian_scale_ramp( data );
    data += sizeof(scale_ramp);

    cv_cnv_endian_debugTensor( data );
    data += sizeof(debugTensor);

    cv_cnv_endian_tensor_flag( data );
    data += sizeof(tensor_flag);

    cv_cnv_endian_num_tensor( data );
    data += sizeof(num_tensor);

    cv_cnv_endian_validTensorFile( data );
    data += sizeof(validTensorFile);

    cv_cnv_endian_validTensorFileAndEntry( data );
    data += sizeof(validTensorFileAndEntry);

    cv_cnv_endian_num_B0( data );
    data += sizeof(num_B0);

    cv_cnv_endian_sep_time( data );
    data += sizeof(sep_time);

    cv_cnv_endian_min180_echo_tim( data );
    data += sizeof(min180_echo_tim);

    cv_cnv_endian_min180_echo_tim2( data );
    data += sizeof(min180_echo_tim2);

    cv_cnv_endian_calc_bmatrix_flag( data );
    data += sizeof(calc_bmatrix_flag);

    cv_cnv_endian_bmax_fixed( data );
    data += sizeof(bmax_fixed);

    cv_cnv_endian_pgen_calc_bval_flag( data );
    data += sizeof(pgen_calc_bval_flag);

    cv_cnv_endian_tensor_host_sort_flag( data );
    data += sizeof(tensor_host_sort_flag);

    cv_cnv_endian_tensor_host_sort_debug( data );
    data += sizeof(tensor_host_sort_debug);

    cv_cnv_endian_sse_manualte_derating( data );
    data += sizeof(sse_manualte_derating);

    cv_cnv_endian_sse_manualte_derating_debug( data );
    data += sizeof(sse_manualte_derating_debug);

    cv_cnv_endian_spherical_derating_limit( data );
    data += sizeof(spherical_derating_limit);

    cv_cnv_endian_collect_six_sigma( data );
    data += sizeof(collect_six_sigma);

    cv_cnv_endian_per_err_orig_x( data );
    data += sizeof(per_err_orig_x);

    cv_cnv_endian_per_err_orig_y( data );
    data += sizeof(per_err_orig_y);

    cv_cnv_endian_per_err_orig_z( data );
    data += sizeof(per_err_orig_z);

    cv_cnv_endian_per_err_corr_x( data );
    data += sizeof(per_err_corr_x);

    cv_cnv_endian_per_err_corr_y( data );
    data += sizeof(per_err_corr_y);

    cv_cnv_endian_per_err_corr_z( data );
    data += sizeof(per_err_corr_z);

    cv_cnv_endian_sse_enh( data );
    data += sizeof(sse_enh);

    cv_cnv_endian_optimizedTEFlag( data );
    data += sizeof(optimizedTEFlag);

    cv_cnv_endian_act_numdir_clinical( data );
    data += sizeof(act_numdir_clinical);

    cv_cnv_endian_maxwell_flag( data );
    data += sizeof(maxwell_flag);

    cv_cnv_endian_maxwell_blip( data );
    data += sizeof(maxwell_blip);

    cv_cnv_endian_B0_field( data );
    data += sizeof(B0_field);

    cv_cnv_endian_pw_gxw_MAX_l( data );
    data += sizeof(pw_gxw_MAX_l);

    cv_cnv_endian_pw_gxw_MAX_r( data );
    data += sizeof(pw_gxw_MAX_r);

    cv_cnv_endian_pw_gyb_MAX_l( data );
    data += sizeof(pw_gyb_MAX_l);

    cv_cnv_endian_pw_gyb_MAX_r( data );
    data += sizeof(pw_gyb_MAX_r);

    cv_cnv_endian_max_debug( data );
    data += sizeof(max_debug);

    cv_cnv_endian_nodelay( data );
    data += sizeof(nodelay);

    cv_cnv_endian_nodelayesp( data );
    data += sizeof(nodelayesp);

    cv_cnv_endian_b0dither_new( data );
    data += sizeof(b0dither_new);

    cv_cnv_endian_nob0dither( data );
    data += sizeof(nob0dither);

    cv_cnv_endian_nob0dither_interpo( data );
    data += sizeof(nob0dither_interpo);

    cv_cnv_endian_nobcfile( data );
    data += sizeof(nobcfile);

    cv_cnv_endian_number_of_bc_files( data );
    data += sizeof(number_of_bc_files);

    cv_cnv_endian_activeReceivers( data );
    data += sizeof(activeReceivers);

    cv_cnv_endian_flagWarning( data );
    data += sizeof(flagWarning);

    cv_cnv_endian_rfov_flag( data );
    data += sizeof(rfov_flag);

    cv_cnv_endian_rfov_type( data );
    data += sizeof(rfov_type);

    cv_cnv_endian_rfov_override( data );
    data += sizeof(rfov_override);

    cv_cnv_endian_rfov_cmplx_avg_flag( data );
    data += sizeof(rfov_cmplx_avg_flag);

    cv_cnv_endian_debug_rfov( data );
    data += sizeof(debug_rfov);

    cv_cnv_endian_psminfov( data );
    data += sizeof(psminfov);

    cv_cnv_endian_psminslthick( data );
    data += sizeof(psminslthick);

    cv_cnv_endian_temp_slthick( data );
    data += sizeof(temp_slthick);

    cv_cnv_endian_rfov_maxnslices( data );
    data += sizeof(rfov_maxnslices);

    cv_cnv_endian_rfov_fa_scaling_flag( data );
    data += sizeof(rfov_fa_scaling_flag);

    cv_cnv_endian_max_rfov_fa( data );
    data += sizeof(max_rfov_fa);

    cv_cnv_endian_rfov_dbdtper( data );
    data += sizeof(rfov_dbdtper);

    cv_cnv_endian_rfov_dbdt_debug( data );
    data += sizeof(rfov_dbdt_debug);

    cv_cnv_endian_start_rf1( data );
    data += sizeof(start_rf1);

    cv_cnv_endian_thky_rf1( data );
    data += sizeof(thky_rf1);

    cv_cnv_endian_a_gyrf1( data );
    data += sizeof(a_gyrf1);

    cv_cnv_endian_ia_gyrf1( data );
    data += sizeof(ia_gyrf1);

    cv_cnv_endian_pw_gyrf1( data );
    data += sizeof(pw_gyrf1);

    cv_cnv_endian_pw_gyrf1a( data );
    data += sizeof(pw_gyrf1a);

    cv_cnv_endian_pw_gyrf1d( data );
    data += sizeof(pw_gyrf1d);

    cv_cnv_endian_res_gyrf1( data );
    data += sizeof(res_gyrf1);

    cv_cnv_endian_ia_thrf1( data );
    data += sizeof(ia_thrf1);

    cv_cnv_endian_addrfdel( data );
    data += sizeof(addrfdel);

    cv_cnv_endian_area_gyex1( data );
    data += sizeof(area_gyex1);

    cv_cnv_endian_pw_gyex1_tot( data );
    data += sizeof(pw_gyex1_tot);

    cv_cnv_endian_ex_res( data );
    data += sizeof(ex_res);

    cv_cnv_endian_ex_pw( data );
    data += sizeof(ex_pw);

    cv_cnv_endian_ex_ttipdown( data );
    data += sizeof(ex_ttipdown);

    cv_cnv_endian_ex_nom_flip( data );
    data += sizeof(ex_nom_flip);

    cv_cnv_endian_ex_abswidth( data );
    data += sizeof(ex_abswidth);

    cv_cnv_endian_ex_effwidth( data );
    data += sizeof(ex_effwidth);

    cv_cnv_endian_ex_area( data );
    data += sizeof(ex_area);

    cv_cnv_endian_ex_dtycyc( data );
    data += sizeof(ex_dtycyc);

    cv_cnv_endian_ex_maxpw( data );
    data += sizeof(ex_maxpw);

    cv_cnv_endian_ex_max_b1( data );
    data += sizeof(ex_max_b1);

    cv_cnv_endian_ex_max_int_b1_sqr( data );
    data += sizeof(ex_max_int_b1_sqr);

    cv_cnv_endian_ex_max_rms_b1( data );
    data += sizeof(ex_max_rms_b1);

    cv_cnv_endian_ex_a_gzs( data );
    data += sizeof(ex_a_gzs);

    cv_cnv_endian_ex_nom_thkz( data );
    data += sizeof(ex_nom_thkz);

    cv_cnv_endian_ex_a_gys( data );
    data += sizeof(ex_a_gys);

    cv_cnv_endian_ex_nom_thky( data );
    data += sizeof(ex_nom_thky);

    cv_cnv_endian_ex_maxnslices( data );
    data += sizeof(ex_maxnslices);

    cv_cnv_endian_ex_num_gylobe( data );
    data += sizeof(ex_num_gylobe);

    cv_cnv_endian_ex_num_gzlobe( data );
    data += sizeof(ex_num_gzlobe);

    cv_cnv_endian_ex_pw_gyrf1lobe( data );
    data += sizeof(ex_pw_gyrf1lobe);

    cv_cnv_endian_ex_pw_rampy( data );
    data += sizeof(ex_pw_rampy);

    cv_cnv_endian_ex_pw_rampz( data );
    data += sizeof(ex_pw_rampz);

    cv_cnv_endian_ex_pw_constanty( data );
    data += sizeof(ex_pw_constanty);

    cv_cnv_endian_ex_pw_constantz( data );
    data += sizeof(ex_pw_constantz);

    cv_cnv_endian_ex_refocus_ratioy( data );
    data += sizeof(ex_refocus_ratioy);

    cv_cnv_endian_ex_refocus_ratioz( data );
    data += sizeof(ex_refocus_ratioz);

    cv_cnv_endian_ex_tbwy( data );
    data += sizeof(ex_tbwy);

    cv_cnv_endian_ex_tbwz( data );
    data += sizeof(ex_tbwz);

    cv_cnv_endian_freqSign_ex( data );
    data += sizeof(freqSign_ex);

    cv_cnv_endian_shift_to_freq( data );
    data += sizeof(shift_to_freq);

    cv_cnv_endian_y_shift( data );
    data += sizeof(y_shift);

    cv_cnv_endian_y_to_freq( data );
    data += sizeof(y_to_freq);

    cv_cnv_endian_z_shift( data );
    data += sizeof(z_shift);

    cv_cnv_endian_z_to_freq( data );
    data += sizeof(z_to_freq);

    cv_cnv_endian_type1_support( data );
    data += sizeof(type1_support);

    cv_cnv_endian_type1_flag( data );
    data += sizeof(type1_flag);

    cv_cnv_endian_homogeneity_flag( data );
    data += sizeof(homogeneity_flag);

    cv_cnv_endian_ex_a_gys_pos( data );
    data += sizeof(ex_a_gys_pos);

    cv_cnv_endian_a_gys_pos( data );
    data += sizeof(a_gys_pos);

    cv_cnv_endian_ia_gys_pos( data );
    data += sizeof(ia_gys_pos);

    cv_cnv_endian_ex_pw_rampy_pos( data );
    data += sizeof(ex_pw_rampy_pos);

    cv_cnv_endian_ex_pw_constanty_pos( data );
    data += sizeof(ex_pw_constanty_pos);

    cv_cnv_endian_excite_ratio( data );
    data += sizeof(excite_ratio);

    cv_cnv_endian_walk_sat_flag( data );
    data += sizeof(walk_sat_flag);

    cv_cnv_endian_pw_wksat_tot( data );
    data += sizeof(pw_wksat_tot);

    cv_cnv_endian_a_gyrfwk( data );
    data += sizeof(a_gyrfwk);

    cv_cnv_endian_ia_gyrfwk( data );
    data += sizeof(ia_gyrfwk);

    cv_cnv_endian_pw_gyrfwk( data );
    data += sizeof(pw_gyrfwk);

    cv_cnv_endian_pw_gyrfwka( data );
    data += sizeof(pw_gyrfwka);

    cv_cnv_endian_pw_gyrfwkd( data );
    data += sizeof(pw_gyrfwkd);

    cv_cnv_endian_pw_gwksp( data );
    data += sizeof(pw_gwksp);

    cv_cnv_endian_pw_gwkspa( data );
    data += sizeof(pw_gwkspa);

    cv_cnv_endian_pw_gwkspd( data );
    data += sizeof(pw_gwkspd);

    cv_cnv_endian_a_gwksp( data );
    data += sizeof(a_gwksp);

    cv_cnv_endian_pos_sp_wk( data );
    data += sizeof(pos_sp_wk);

    cv_cnv_endian_walk_sat_cycle( data );
    data += sizeof(walk_sat_cycle);

    cv_cnv_endian_wg_rfwk( data );
    data += sizeof(wg_rfwk);

    cv_cnv_endian_res_rfwk_orig( data );
    data += sizeof(res_rfwk_orig);

    cv_cnv_endian_res_rfwk( data );
    data += sizeof(res_rfwk);

    cv_cnv_endian_pw_rfwk( data );
    data += sizeof(pw_rfwk);

    cv_cnv_endian_hrfwka( data );
    data += sizeof(hrfwka);

    cv_cnv_endian_hrfwkb( data );
    data += sizeof(hrfwkb);

    cv_cnv_endian_flip_rfwk( data );
    data += sizeof(flip_rfwk);

    cv_cnv_endian_bw_rfwk( data );
    data += sizeof(bw_rfwk);

    cv_cnv_endian_cyc_rfwk( data );
    data += sizeof(cyc_rfwk);

    cv_cnv_endian_a_rfwk( data );
    data += sizeof(a_rfwk);

    cv_cnv_endian_ia_rfwk( data );
    data += sizeof(ia_rfwk);

    cv_cnv_endian_ia_thrfwk( data );
    data += sizeof(ia_thrfwk);

    cv_cnv_endian_pos_rfwk( data );
    data += sizeof(pos_rfwk);

    cv_cnv_endian_off_rfwk( data );
    data += sizeof(off_rfwk);

    cv_cnv_endian_off_thrfwk( data );
    data += sizeof(off_thrfwk);

    cv_cnv_endian_loc_satcen_cm( data );
    data += sizeof(loc_satcen_cm);

    cv_cnv_endian_loc_satcen_Hz( data );
    data += sizeof(loc_satcen_Hz);

    cv_cnv_endian_sat_thk_factor( data );
    data += sizeof(sat_thk_factor);

    cv_cnv_endian_sep_sat_ratio( data );
    data += sizeof(sep_sat_ratio);

    cv_cnv_endian_rfov_max_freq_shift( data );
    data += sizeof(rfov_max_freq_shift);

    cv_cnv_endian_mux_flag( data );
    data += sizeof(mux_flag);

    cv_cnv_endian_mux_phase_step( data );
    data += sizeof(mux_phase_step);

    cv_cnv_endian_thetarf2_flag( data );
    data += sizeof(thetarf2_flag);

    cv_cnv_endian_use_omegatheta( data );
    data += sizeof(use_omegatheta);

    cv_cnv_endian_omegatheta_pol( data );
    data += sizeof(omegatheta_pol);

    cv_cnv_endian_rf2_isodelay( data );
    data += sizeof(rf2_isodelay);

    cv_cnv_endian_mux_slquant( data );
    data += sizeof(mux_slquant);

    cv_cnv_endian_res_thetarf2( data );
    data += sizeof(res_thetarf2);

    cv_cnv_endian_res_gzrf2( data );
    data += sizeof(res_gzrf2);

    cv_cnv_endian_pw_thetarf2( data );
    data += sizeof(pw_thetarf2);

    cv_cnv_endian_ia_thetarf2( data );
    data += sizeof(ia_thetarf2);

    cv_cnv_endian_ia_thetarf2left( data );
    data += sizeof(ia_thetarf2left);

    cv_cnv_endian_ia_thetarf2right( data );
    data += sizeof(ia_thetarf2right);

    cv_cnv_endian_pw_thetarf2a( data );
    data += sizeof(pw_thetarf2a);

    cv_cnv_endian_pw_thetarf2d( data );
    data += sizeof(pw_thetarf2d);

    cv_cnv_endian_pw_thetarf2left( data );
    data += sizeof(pw_thetarf2left);

    cv_cnv_endian_pw_thetarf2lefta( data );
    data += sizeof(pw_thetarf2lefta);

    cv_cnv_endian_pw_thetarf2leftd( data );
    data += sizeof(pw_thetarf2leftd);

    cv_cnv_endian_pw_thetarf2right( data );
    data += sizeof(pw_thetarf2right);

    cv_cnv_endian_pw_thetarf2righta( data );
    data += sizeof(pw_thetarf2righta);

    cv_cnv_endian_pw_thetarf2rightd( data );
    data += sizeof(pw_thetarf2rightd);

    cv_cnv_endian_verse_rf2( data );
    data += sizeof(verse_rf2);

    cv_cnv_endian_sltune_rf2( data );
    data += sizeof(sltune_rf2);

    cv_cnv_endian_mux_slices_rf2( data );
    data += sizeof(mux_slices_rf2);

    cv_cnv_endian_phase_cycle_rf2( data );
    data += sizeof(phase_cycle_rf2);

    cv_cnv_endian_mux_band_gap_warning_flag( data );
    data += sizeof(mux_band_gap_warning_flag);

    cv_cnv_endian_tbwp_rf1( data );
    data += sizeof(tbwp_rf1);

    cv_cnv_endian_window_type_rf1( data );
    data += sizeof(window_type_rf1);

    cv_cnv_endian_gauss_width_rf1( data );
    data += sizeof(gauss_width_rf1);

    cv_cnv_endian_mux_slices_rf1( data );
    data += sizeof(mux_slices_rf1);

    cv_cnv_endian_mux_slice_shift_mm_rf1( data );
    data += sizeof(mux_slice_shift_mm_rf1);

    cv_cnv_endian_save_res_rf1( data );
    data += sizeof(save_res_rf1);

    cv_cnv_endian_save_tbwp_rf1( data );
    data += sizeof(save_tbwp_rf1);

    cv_cnv_endian_save_window_type_rf1( data );
    data += sizeof(save_window_type_rf1);

    cv_cnv_endian_save_gauss_width_rf1( data );
    data += sizeof(save_gauss_width_rf1);

    cv_cnv_endian_save_mux_slices_rf1( data );
    data += sizeof(save_mux_slices_rf1);

    cv_cnv_endian_save_mux_slice_shift_mm_rf1( data );
    data += sizeof(save_mux_slice_shift_mm_rf1);

    cv_cnv_endian_save_thk_rf1( data );
    data += sizeof(save_thk_rf1);

    cv_cnv_endian_save_mux_mode_rf1( data );
    data += sizeof(save_mux_mode_rf1);

    cv_cnv_endian_dwell_rf_rf1( data );
    data += sizeof(dwell_rf_rf1);

    cv_cnv_endian_debug_mux_rf( data );
    data += sizeof(debug_mux_rf);

    cv_cnv_endian_multiband_fa_scaling_flag( data );
    data += sizeof(multiband_fa_scaling_flag);

    cv_cnv_endian_max_multiband_rf1_fa( data );
    data += sizeof(max_multiband_rf1_fa);

    cv_cnv_endian_max_multiband_rf2_fa( data );
    data += sizeof(max_multiband_rf2_fa);

    cv_cnv_endian_mux_rf1_scale( data );
    data += sizeof(mux_rf1_scale);

    cv_cnv_endian_mux_rf2_scale( data );
    data += sizeof(mux_rf2_scale);

    cv_cnv_endian_slice_fov_shift( data );
    data += sizeof(slice_fov_shift);

    cv_cnv_endian_use_slice_fov_shift_blips( data );
    data += sizeof(use_slice_fov_shift_blips);

    cv_cnv_endian_slice_fov_shift_area( data );
    data += sizeof(slice_fov_shift_area);

    cv_cnv_endian_slice_fov_shift_cycles( data );
    data += sizeof(slice_fov_shift_cycles);

    cv_cnv_endian_slice_fov_shift_blip_start( data );
    data += sizeof(slice_fov_shift_blip_start);

    cv_cnv_endian_slice_fov_shift_blip_inc( data );
    data += sizeof(slice_fov_shift_blip_inc);

    cv_cnv_endian_factor_gz1( data );
    data += sizeof(factor_gz1);

    cv_cnv_endian_gzb_amp( data );
    data += sizeof(gzb_amp);

    cv_cnv_endian_slice_fov_shift_extra_gap( data );
    data += sizeof(slice_fov_shift_extra_gap);

    cv_cnv_endian_slice_fov_shift_calc_new_esp( data );
    data += sizeof(slice_fov_shift_calc_new_esp);

    cv_cnv_endian_slice_fov_shift_extra_gap_flag( data );
    data += sizeof(slice_fov_shift_extra_gap_flag);

    cv_cnv_endian_mux_min_verserf2_slthk( data );
    data += sizeof(mux_min_verserf2_slthk);

    cv_cnv_endian_seqtime_t1flair( data );
    data += sizeof(seqtime_t1flair);

    cv_cnv_endian_act_ti( data );
    data += sizeof(act_ti);

    cv_cnv_endian_dda_t1flair( data );
    data += sizeof(dda_t1flair);

    cv_cnv_endian_dummyslices( data );
    data += sizeof(dummyslices);

    cv_cnv_endian_autoti_model( data );
    data += sizeof(autoti_model);

    cv_cnv_endian_t1flair_autotr_flag( data );
    data += sizeof(t1flair_autotr_flag);

    cv_cnv_endian_t2flair_autotr_flag( data );
    data += sizeof(t2flair_autotr_flag);

    cv_cnv_endian_t1flair_seqtime_method( data );
    data += sizeof(t1flair_seqtime_method);

    cv_cnv_endian_tmin_total_acq_seq( data );
    data += sizeof(tmin_total_acq_seq);

    cv_cnv_endian_tmin_total_ir( data );
    data += sizeof(tmin_total_ir);

    cv_cnv_endian_dtr1_tolerance( data );
    data += sizeof(dtr1_tolerance);

    cv_cnv_endian_dtr2_tolerance( data );
    data += sizeof(dtr2_tolerance);

    cv_cnv_endian_max_slice_num_reduction( data );
    data += sizeof(max_slice_num_reduction);

    cv_cnv_endian_t1flair_mint1( data );
    data += sizeof(t1flair_mint1);

    cv_cnv_endian_t1flair_mint2( data );
    data += sizeof(t1flair_mint2);

    cv_cnv_endian_avminti_t1flair( data );
    data += sizeof(avminti_t1flair);

    cv_cnv_endian_avmaxti_t1flair( data );
    data += sizeof(avmaxti_t1flair);

    cv_cnv_endian_debug_t1flairenh( data );
    data += sizeof(debug_t1flairenh);

    cv_cnv_endian_t1flair_chop_flag( data );
    data += sizeof(t1flair_chop_flag);

    cv_cnv_endian_req_edge_slice_enh_flag( data );
    data += sizeof(req_edge_slice_enh_flag);

    cv_cnv_endian_act_edge_slice_enh_flag( data );
    data += sizeof(act_edge_slice_enh_flag);

    cv_cnv_endian_t1flair_slice_uniformity_flag( data );
    data += sizeof(t1flair_slice_uniformity_flag);

    cv_cnv_endian_force_odd_even_slquant( data );
    data += sizeof(force_odd_even_slquant);

    cv_cnv_endian_enht2flairacqs( data );
    data += sizeof(enht2flairacqs);

    cv_cnv_endian_enht2flair_highsort( data );
    data += sizeof(enht2flair_highsort);

    cv_cnv_endian_avmintr_autotr_t1flair( data );
    data += sizeof(avmintr_autotr_t1flair);

    cv_cnv_endian_incinv( data );
    data += sizeof(incinv);

    cv_cnv_endian_slquant_in_ti( data );
    data += sizeof(slquant_in_ti);

    cv_cnv_endian_act_esp( data );
    data += sizeof(act_esp);

    cv_cnv_endian_autotr_flair_debug( data );
    data += sizeof(autotr_flair_debug);

    cv_cnv_endian_T1FLAIR_MIN_TI( data );
    data += sizeof(T1FLAIR_MIN_TI);

    cv_cnv_endian_T1FLAIR_MAX_TI( data );
    data += sizeof(T1FLAIR_MAX_TI);

    cv_cnv_endian_ir_prep_manual_tr_mode( data );
    data += sizeof(ir_prep_manual_tr_mode);

    cv_cnv_endian_asset_factor( data );
    data += sizeof(asset_factor);

    cv_cnv_endian_assetsl_factor( data );
    data += sizeof(assetsl_factor);

    cv_cnv_endian_assetph_flag( data );
    data += sizeof(assetph_flag);

    cv_cnv_endian_assetsl_flag( data );
    data += sizeof(assetsl_flag);

    cv_cnv_endian_asset_supported_direction( data );
    data += sizeof(asset_supported_direction);

    cv_cnv_endian_fov_advisory_ignore_mslices( data );
    data += sizeof(fov_advisory_ignore_mslices);

    cv_cnv_endian_arc_research_flag( data );
    data += sizeof(arc_research_flag);

    cv_cnv_endian_arc_split_method( data );
    data += sizeof(arc_split_method);

    cv_cnv_endian_arc_fullbam_flag( data );
    data += sizeof(arc_fullbam_flag);

    cv_cnv_endian_arc_extCal( data );
    data += sizeof(arc_extCal);

    cv_cnv_endian_arc_ph_flag( data );
    data += sizeof(arc_ph_flag);

    cv_cnv_endian_arc_ph_factor( data );
    data += sizeof(arc_ph_factor);

    cv_cnv_endian_arc_ph_maxstride( data );
    data += sizeof(arc_ph_maxstride);

    cv_cnv_endian_arc_ph_recstride( data );
    data += sizeof(arc_ph_recstride);

    cv_cnv_endian_arc_ph_userstride( data );
    data += sizeof(arc_ph_userstride);

    cv_cnv_endian_arc_ph_stride( data );
    data += sizeof(arc_ph_stride);

    cv_cnv_endian_arc_ph_maxnetaccel( data );
    data += sizeof(arc_ph_maxnetaccel);

    cv_cnv_endian_arc_ph_recnetaccel( data );
    data += sizeof(arc_ph_recnetaccel);

    cv_cnv_endian_arc_ph_acs( data );
    data += sizeof(arc_ph_acs);

    cv_cnv_endian_arc_ph_acs_min( data );
    data += sizeof(arc_ph_acs_min);

    cv_cnv_endian_arc_ph_fullencode( data );
    data += sizeof(arc_ph_fullencode);

    cv_cnv_endian_arc_ph_spanned( data );
    data += sizeof(arc_ph_spanned);

    cv_cnv_endian_arc_ph_acquired( data );
    data += sizeof(arc_ph_acquired);

    cv_cnv_endian_arc_ph_intaccel( data );
    data += sizeof(arc_ph_intaccel);

    cv_cnv_endian_arc_ph_halfnex( data );
    data += sizeof(arc_ph_halfnex);

    cv_cnv_endian_arc_ph_hnover( data );
    data += sizeof(arc_ph_hnover);

    cv_cnv_endian_arc_ph_minover( data );
    data += sizeof(arc_ph_minover);

    cv_cnv_endian_arc_sl_flag( data );
    data += sizeof(arc_sl_flag);

    cv_cnv_endian_arc_sl_factor( data );
    data += sizeof(arc_sl_factor);

    cv_cnv_endian_arc_sl_maxstride( data );
    data += sizeof(arc_sl_maxstride);

    cv_cnv_endian_arc_sl_recstride( data );
    data += sizeof(arc_sl_recstride);

    cv_cnv_endian_arc_sl_userstride( data );
    data += sizeof(arc_sl_userstride);

    cv_cnv_endian_arc_sl_stride( data );
    data += sizeof(arc_sl_stride);

    cv_cnv_endian_arc_sl_maxnetaccel( data );
    data += sizeof(arc_sl_maxnetaccel);

    cv_cnv_endian_arc_sl_recnetaccel( data );
    data += sizeof(arc_sl_recnetaccel);

    cv_cnv_endian_arc_sl_acs( data );
    data += sizeof(arc_sl_acs);

    cv_cnv_endian_arc_sl_acs_min( data );
    data += sizeof(arc_sl_acs_min);

    cv_cnv_endian_arc_sl_fullencode( data );
    data += sizeof(arc_sl_fullencode);

    cv_cnv_endian_arc_sl_spanned( data );
    data += sizeof(arc_sl_spanned);

    cv_cnv_endian_arc_sl_acquired( data );
    data += sizeof(arc_sl_acquired);

    cv_cnv_endian_arc_sl_intaccel( data );
    data += sizeof(arc_sl_intaccel);

    cv_cnv_endian_arc_sl_halfnex( data );
    data += sizeof(arc_sl_halfnex);

    cv_cnv_endian_arc_sl_hnover( data );
    data += sizeof(arc_sl_hnover);

    cv_cnv_endian_arc_sl_minover( data );
    data += sizeof(arc_sl_minover);

    cv_cnv_endian_arc_sl_fn( data );
    data += sizeof(arc_sl_fn);

    cv_cnv_endian_arc_kx_peak_pos( data );
    data += sizeof(arc_kx_peak_pos);

    cv_cnv_endian_arc_ky_peak_pos( data );
    data += sizeof(arc_ky_peak_pos);

    cv_cnv_endian_arc_syn_pts( data );
    data += sizeof(arc_syn_pts);

    cv_cnv_endian_ARCKey( data );
    data += sizeof(ARCKey);

    cv_cnv_endian_readmonloc( data );
    data += sizeof(readmonloc);

    cv_cnv_endian_loopdelay( data );
    data += sizeof(loopdelay);

    cv_cnv_endian_loopdelay2( data );
    data += sizeof(loopdelay2);

    cv_cnv_endian_navgs( data );
    data += sizeof(navgs);

    cv_cnv_endian_sigma1( data );
    data += sizeof(sigma1);

    cv_cnv_endian_sigma2( data );
    data += sizeof(sigma2);

    cv_cnv_endian_savedata( data );
    data += sizeof(savedata);

    cv_cnv_endian_max_avg_time( data );
    data += sizeof(max_avg_time);

    cv_cnv_endian_monloc_shift( data );
    data += sizeof(monloc_shift);

    cv_cnv_endian_tracker_quant( data );
    data += sizeof(tracker_quant);

    cv_cnv_endian_acq_data_only( data );
    data += sizeof(acq_data_only);

    cv_cnv_endian_mon_tr( data );
    data += sizeof(mon_tr);

    cv_cnv_endian_smartprep_flag( data );
    data += sizeof(smartprep_flag);

    cv_cnv_endian_min_delay_time( data );
    data += sizeof(min_delay_time);

    cv_cnv_endian_num_audibles( data );
    data += sizeof(num_audibles);

    cv_cnv_endian_audible_loop( data );
    data += sizeof(audible_loop);

    cv_cnv_endian_data_type( data );
    data += sizeof(data_type);

    cv_cnv_endian_save_fft( data );
    data += sizeof(save_fft);

    cv_cnv_endian_swap_monplane( data );
    data += sizeof(swap_monplane);

    cv_cnv_endian_swap_mon_zy( data );
    data += sizeof(swap_mon_zy);

    cv_cnv_endian_detector_mode( data );
    data += sizeof(detector_mode);

    cv_cnv_endian_fov_factor( data );
    data += sizeof(fov_factor);

    cv_cnv_endian_nav_angle_adj( data );
    data += sizeof(nav_angle_adj);

    cv_cnv_endian_mon_angle( data );
    data += sizeof(mon_angle);

    cv_cnv_endian_nav_tipup_ratio( data );
    data += sizeof(nav_tipup_ratio);

    cv_cnv_endian_cylr_rf_type( data );
    data += sizeof(cylr_rf_type);

    cv_cnv_endian_pw_rfcylr( data );
    data += sizeof(pw_rfcylr);

    cv_cnv_endian_ia_rfcylr( data );
    data += sizeof(ia_rfcylr);

    cv_cnv_endian_a_rfcylr( data );
    data += sizeof(a_rfcylr);

    cv_cnv_endian_pw_thcylr( data );
    data += sizeof(pw_thcylr);

    cv_cnv_endian_ia_thcylr( data );
    data += sizeof(ia_thcylr);

    cv_cnv_endian_a_thcylr( data );
    data += sizeof(a_thcylr);

    cv_cnv_endian_pw_gycylr( data );
    data += sizeof(pw_gycylr);

    cv_cnv_endian_ia_gycylr( data );
    data += sizeof(ia_gycylr);

    cv_cnv_endian_a_gycylr( data );
    data += sizeof(a_gycylr);

    cv_cnv_endian_pw_gzcylr( data );
    data += sizeof(pw_gzcylr);

    cv_cnv_endian_ia_gzcylr( data );
    data += sizeof(ia_gzcylr);

    cv_cnv_endian_a_gzcylr( data );
    data += sizeof(a_gzcylr);

    cv_cnv_endian_pw_rfcylrtipup( data );
    data += sizeof(pw_rfcylrtipup);

    cv_cnv_endian_ia_rfcylrtipup( data );
    data += sizeof(ia_rfcylrtipup);

    cv_cnv_endian_a_rfcylrtipup( data );
    data += sizeof(a_rfcylrtipup);

    cv_cnv_endian_pw_thcylrtipup( data );
    data += sizeof(pw_thcylrtipup);

    cv_cnv_endian_ia_thcylrtipup( data );
    data += sizeof(ia_thcylrtipup);

    cv_cnv_endian_a_thcylrtipup( data );
    data += sizeof(a_thcylrtipup);

    cv_cnv_endian_pw_gycylrtipup( data );
    data += sizeof(pw_gycylrtipup);

    cv_cnv_endian_ia_gycylrtipup( data );
    data += sizeof(ia_gycylrtipup);

    cv_cnv_endian_a_gycylrtipup( data );
    data += sizeof(a_gycylrtipup);

    cv_cnv_endian_pw_gzcylrtipup( data );
    data += sizeof(pw_gzcylrtipup);

    cv_cnv_endian_ia_gzcylrtipup( data );
    data += sizeof(ia_gzcylrtipup);

    cv_cnv_endian_a_gzcylrtipup( data );
    data += sizeof(a_gzcylrtipup);

    cv_cnv_endian_min_delay_sec( data );
    data += sizeof(min_delay_sec);

    cv_cnv_endian_delay_dda( data );
    data += sizeof(delay_dda);

    cv_cnv_endian_delay_quiet_dda( data );
    data += sizeof(delay_quiet_dda);

    cv_cnv_endian_total_quiet_dda( data );
    data += sizeof(total_quiet_dda);

    cv_cnv_endian_rtpend_quiet_dda( data );
    data += sizeof(rtpend_quiet_dda);

    cv_cnv_endian_delay_quiet_time( data );
    data += sizeof(delay_quiet_time);

    cv_cnv_endian_debug_monrot( data );
    data += sizeof(debug_monrot);

    cv_cnv_endian_debug_monrotphi( data );
    data += sizeof(debug_monrotphi);

    cv_cnv_endian_debug_monloc( data );
    data += sizeof(debug_monloc);

    cv_cnv_endian_transpose_monloc( data );
    data += sizeof(transpose_monloc);

    cv_cnv_endian_write_spinfo( data );
    data += sizeof(write_spinfo);

    cv_cnv_endian_oblique_monplane( data );
    data += sizeof(oblique_monplane);

    cv_cnv_endian_monitor_axis( data );
    data += sizeof(monitor_axis);

    cv_cnv_endian_theta( data );
    data += sizeof(theta);

    cv_cnv_endian_ta_180sp( data );
    data += sizeof(ta_180sp);

    cv_cnv_endian_tb_180sp( data );
    data += sizeof(tb_180sp);

    cv_cnv_endian_te_180sp( data );
    data += sizeof(te_180sp);

    cv_cnv_endian_min_montr( data );
    data += sizeof(min_montr);

    cv_cnv_endian_tlead_monitor( data );
    data += sizeof(tlead_monitor);

    cv_cnv_endian_tlead_montipup( data );
    data += sizeof(tlead_montipup);

    cv_cnv_endian_mon_ssi_time( data );
    data += sizeof(mon_ssi_time);

    cv_cnv_endian_non_tetime_mon( data );
    data += sizeof(non_tetime_mon);

    cv_cnv_endian_tmin_mon( data );
    data += sizeof(tmin_mon);

    cv_cnv_endian_tmin_montipup( data );
    data += sizeof(tmin_montipup);

    cv_cnv_endian_rda_mon( data );
    data += sizeof(rda_mon);

    cv_cnv_endian_minseqcoilmon_t( data );
    data += sizeof(minseqcoilmon_t);

    cv_cnv_endian_minseqgrddrvmon_t( data );
    data += sizeof(minseqgrddrvmon_t);

    cv_cnv_endian_minseqgrddrvxmon_t( data );
    data += sizeof(minseqgrddrvxmon_t);

    cv_cnv_endian_minseqgrddrvymon_t( data );
    data += sizeof(minseqgrddrvymon_t);

    cv_cnv_endian_minseqgrddrvzmon_t( data );
    data += sizeof(minseqgrddrvzmon_t);

    cv_cnv_endian_minseqcablemon_t( data );
    data += sizeof(minseqcablemon_t);

    cv_cnv_endian_minseqbusbarmon_t( data );
    data += sizeof(minseqbusbarmon_t);

    cv_cnv_endian_max_seqsarmon( data );
    data += sizeof(max_seqsarmon);

    cv_cnv_endian_min_seqrfampmon( data );
    data += sizeof(min_seqrfampmon);

    cv_cnv_endian_monnewgeo( data );
    data += sizeof(monnewgeo);

    cv_cnv_endian_monobl_debug( data );
    data += sizeof(monobl_debug);

    cv_cnv_endian_monobl_method( data );
    data += sizeof(monobl_method);

    cv_cnv_endian_monitor_page( data );
    data += sizeof(monitor_page);

    cv_cnv_endian_monave_sar( data );
    data += sizeof(monave_sar);

    cv_cnv_endian_monpeak_sar( data );
    data += sizeof(monpeak_sar);

    cv_cnv_endian_moncave_sar( data );
    data += sizeof(moncave_sar);

    cv_cnv_endian_mon_xres( data );
    data += sizeof(mon_xres);

    cv_cnv_endian_rf1mon_shift( data );
    data += sizeof(rf1mon_shift);

    cv_cnv_endian_rf2mon_shift( data );
    data += sizeof(rf2mon_shift);

    cv_cnv_endian_bw_rf1mon( data );
    data += sizeof(bw_rf1mon);

    cv_cnv_endian_bw_rf2mon( data );
    data += sizeof(bw_rf2mon);

    cv_cnv_endian_bw_rfmontipup( data );
    data += sizeof(bw_rfmontipup);

    cv_cnv_endian_mon_fov( data );
    data += sizeof(mon_fov);

    cv_cnv_endian_mon_acqfov( data );
    data += sizeof(mon_acqfov);

    cv_cnv_endian_echo1monbw( data );
    data += sizeof(echo1monbw);

    cv_cnv_endian_mon_vthickz( data );
    data += sizeof(mon_vthickz);

    cv_cnv_endian_mon_vthicky( data );
    data += sizeof(mon_vthicky);

    cv_cnv_endian_mon_vthick( data );
    data += sizeof(mon_vthick);

    cv_cnv_endian_area_gzkmon( data );
    data += sizeof(area_gzkmon);

    cv_cnv_endian_area_gzkmontipup( data );
    data += sizeof(area_gzkmontipup);

    cv_cnv_endian_mon_fcomp( data );
    data += sizeof(mon_fcomp);

    cv_cnv_endian_fnecho_frac( data );
    data += sizeof(fnecho_frac);

    cv_cnv_endian_monitor_test( data );
    data += sizeof(monitor_test);

    cv_cnv_endian_get_fullecho( data );
    data += sizeof(get_fullecho);

    cv_cnv_endian_numpts2pass( data );
    data += sizeof(numpts2pass);

    cv_cnv_endian_reverse_views( data );
    data += sizeof(reverse_views);

    cv_cnv_endian_mon_trigger_delay( data );
    data += sizeof(mon_trigger_delay);

    cv_cnv_endian_smartprep_was_on( data );
    data += sizeof(smartprep_was_on);

    cv_cnv_endian_scanclocktime( data );
    data += sizeof(scanclocktime);

    cv_cnv_endian_mon_dabdelay( data );
    data += sizeof(mon_dabdelay);

    cv_cnv_endian_xres2use( data );
    data += sizeof(xres2use);

    cv_cnv_endian_num_avg_bline( data );
    data += sizeof(num_avg_bline);

    cv_cnv_endian_num_throwaways( data );
    data += sizeof(num_throwaways);

    cv_cnv_endian_num_baseline_pts( data );
    data += sizeof(num_baseline_pts);

    cv_cnv_endian_tmpbw1( data );
    data += sizeof(tmpbw1);

    cv_cnv_endian_debug_sp_rtp( data );
    data += sizeof(debug_sp_rtp);

    cv_cnv_endian_debug_sp_agp( data );
    data += sizeof(debug_sp_agp);

    cv_cnv_endian_cerdtype( data );
    data += sizeof(cerdtype);

    cv_cnv_endian_mon_run_setrcvportimm( data );
    data += sizeof(mon_run_setrcvportimm);

    cv_cnv_endian_sprep_save_raw_data( data );
    data += sizeof(sprep_save_raw_data);

    cv_cnv_endian_sprep_debug_flag( data );
    data += sizeof(sprep_debug_flag);

    cv_cnv_endian_sprep_timing_flag( data );
    data += sizeof(sprep_timing_flag);

    cv_cnv_endian_rtpresultwait( data );
    data += sizeof(rtpresultwait);

    cv_cnv_endian_navend_time( data );
    data += sizeof(navend_time);

    cv_cnv_endian_nav_dual_mode( data );
    data += sizeof(nav_dual_mode);

    cv_cnv_endian_nav_irprep_flag( data );
    data += sizeof(nav_irprep_flag);

    cv_cnv_endian_nav_tseq_irprep( data );
    data += sizeof(nav_tseq_irprep);

    cv_cnv_endian_nav_min_tseq_irprep( data );
    data += sizeof(nav_min_tseq_irprep);

    cv_cnv_endian_pw_nomcyl( data );
    data += sizeof(pw_nomcyl);

    cv_cnv_endian_a_nomcyl( data );
    data += sizeof(a_nomcyl);

    cv_cnv_endian_smartPrepEdrFlag( data );
    data += sizeof(smartPrepEdrFlag);

    cv_cnv_endian_slabtracking_flag( data );
    data += sizeof(slabtracking_flag);

    cv_cnv_endian_corr_mode( data );
    data += sizeof(corr_mode);

    cv_cnv_endian_corr_factor_z( data );
    data += sizeof(corr_factor_z);

    cv_cnv_endian_corr_factor_y( data );
    data += sizeof(corr_factor_y);

    cv_cnv_endian_corr_factor_x( data );
    data += sizeof(corr_factor_x);

    cv_cnv_endian_corr_x( data );
    data += sizeof(corr_x);

    cv_cnv_endian_corr_y( data );
    data += sizeof(corr_y);

    cv_cnv_endian_corr_z( data );
    data += sizeof(corr_z);

    cv_cnv_endian_fixed_acqs_debug( data );
    data += sizeof(fixed_acqs_debug);

    cv_cnv_endian_sl_acq( data );
    data += sizeof(sl_acq);

    cv_cnv_endian_sl_acq_val2( data );
    data += sizeof(sl_acq_val2);

    cv_cnv_endian_sl_acq_val3( data );
    data += sizeof(sl_acq_val3);

    cv_cnv_endian_sl_acq_val4( data );
    data += sizeof(sl_acq_val4);

    cv_cnv_endian_tr_acq( data );
    data += sizeof(tr_acq);

    cv_cnv_endian_tr_acq_val2( data );
    data += sizeof(tr_acq_val2);

    cv_cnv_endian_tr_acq_val3( data );
    data += sizeof(tr_acq_val3);

    cv_cnv_endian_tr_acq_val4( data );
    data += sizeof(tr_acq_val4);

    cv_cnv_endian_tr_limit( data );
    data += sizeof(tr_limit);

    cv_cnv_endian_temp_trval( data );
    data += sizeof(temp_trval);

    cv_cnv_endian_temp_tmin_total( data );
    data += sizeof(temp_tmin_total);

    cv_cnv_endian_keep_opti( data );
    data += sizeof(keep_opti);

    cv_cnv_endian_rtb0_flag( data );
    data += sizeof(rtb0_flag);

    cv_cnv_endian_rtb0_enable( data );
    data += sizeof(rtb0_enable);

    cv_cnv_endian_rtb0_support( data );
    data += sizeof(rtb0_support);

    cv_cnv_endian_rtb0_first_skip( data );
    data += sizeof(rtb0_first_skip);

    cv_cnv_endian_rtb0_last_skip( data );
    data += sizeof(rtb0_last_skip);

    cv_cnv_endian_rtb0_movAvg( data );
    data += sizeof(rtb0_movAvg);

    cv_cnv_endian_rtb0_min_points( data );
    data += sizeof(rtb0_min_points);

    cv_cnv_endian_rtb0DebugFlag( data );
    data += sizeof(rtb0DebugFlag);

    cv_cnv_endian_rtb0SaveRaw( data );
    data += sizeof(rtb0SaveRaw);

    cv_cnv_endian_rtb0_phase_method( data );
    data += sizeof(rtb0_phase_method);

    cv_cnv_endian_rtb0_coil_combine( data );
    data += sizeof(rtb0_coil_combine);

    cv_cnv_endian_rtb0_timing_flag( data );
    data += sizeof(rtb0_timing_flag);

    cv_cnv_endian_rtb0dummy_time( data );
    data += sizeof(rtb0dummy_time);

    cv_cnv_endian_rtb0fittingwaittime( data );
    data += sizeof(rtb0fittingwaittime);

    cv_cnv_endian_rtb0resultwaittime( data );
    data += sizeof(rtb0resultwaittime);

    cv_cnv_endian_rtb0fittingwaittimeLoop( data );
    data += sizeof(rtb0fittingwaittimeLoop);

    cv_cnv_endian_rtb0dummyseq( data );
    data += sizeof(rtb0dummyseq);

    cv_cnv_endian_rtb0_comp_flag( data );
    data += sizeof(rtb0_comp_flag);

    cv_cnv_endian_rtb0_acq_delay( data );
    data += sizeof(rtb0_acq_delay);

    cv_cnv_endian_rtb0_minintervalb4acq( data );
    data += sizeof(rtb0_minintervalb4acq);

    cv_cnv_endian_rtb0_r1_delta( data );
    data += sizeof(rtb0_r1_delta);

    cv_cnv_endian_pw_dynr1( data );
    data += sizeof(pw_dynr1);

    cv_cnv_endian_rtb0_filter_cf_flag( data );
    data += sizeof(rtb0_filter_cf_flag);

    cv_cnv_endian_rtb0_recvphase_comp_flag( data );
    data += sizeof(rtb0_recvphase_comp_flag);

    cv_cnv_endian_rtb0_comp_debug_flag( data );
    data += sizeof(rtb0_comp_debug_flag);

    cv_cnv_endian_rtb0_cfoffset_debug( data );
    data += sizeof(rtb0_cfoffset_debug);

    cv_cnv_endian_rtb0_slice_shift( data );
    data += sizeof(rtb0_slice_shift);

    cv_cnv_endian_cf_interpolation( data );
    data += sizeof(cf_interpolation);

    cv_cnv_endian_rtb0_max_range( data );
    data += sizeof(rtb0_max_range);

    cv_cnv_endian_rtb0_rejectnoise( data );
    data += sizeof(rtb0_rejectnoise);

    cv_cnv_endian_rtb0_smooth_kernel_size( data );
    data += sizeof(rtb0_smooth_kernel_size);

    cv_cnv_endian_rtb0_smooth_cf_flag( data );
    data += sizeof(rtb0_smooth_cf_flag);

    cv_cnv_endian_rtb0_median_kernel_size( data );
    data += sizeof(rtb0_median_kernel_size);

    cv_cnv_endian_rtb0_min_kernel_keep_edge( data );
    data += sizeof(rtb0_min_kernel_keep_edge);

    cv_cnv_endian_rtb0_max_kernel_percent( data );
    data += sizeof(rtb0_max_kernel_percent);

    cv_cnv_endian_rtb0_max_kernel_keep_edge( data );
    data += sizeof(rtb0_max_kernel_keep_edge);

    cv_cnv_endian_rtb0_confidence_method( data );
    data += sizeof(rtb0_confidence_method);

    cv_cnv_endian_rtb0_cfstddev_threshold( data );
    data += sizeof(rtb0_cfstddev_threshold);

    cv_cnv_endian_rtb0_cfresidual_threshold( data );
    data += sizeof(rtb0_cfresidual_threshold);

    cv_cnv_endian_rtb0_confidence_thresh_val( data );
    data += sizeof(rtb0_confidence_thresh_val);

    cv_cnv_endian_rtb0_gzrf0_off( data );
    data += sizeof(rtb0_gzrf0_off);

    cv_cnv_endian_rtb0_spsp_flag( data );
    data += sizeof(rtb0_spsp_flag);

    cv_cnv_endian_rtb0_dda( data );
    data += sizeof(rtb0_dda);

    cv_cnv_endian_rtb0_debug( data );
    data += sizeof(rtb0_debug);

    cv_cnv_endian_rtb0_midsliceindex( data );
    data += sizeof(rtb0_midsliceindex);

    cv_cnv_endian_rtb0_outlier_threshold( data );
    data += sizeof(rtb0_outlier_threshold);

    cv_cnv_endian_rtb0_outlier_duration( data );
    data += sizeof(rtb0_outlier_duration);

    cv_cnv_endian_rtb0_outlier_nTRs( data );
    data += sizeof(rtb0_outlier_nTRs);

    cv_cnv_endian_focus_eval_oscil( data );
    data += sizeof(focus_eval_oscil);

    cv_cnv_endian_focus_eval_oscil_hist( data );
    data += sizeof(focus_eval_oscil_hist);

    cv_cnv_endian_isPredownload( data );
    data += sizeof(isPredownload);

    cv_cnv_endian_keep_focus_eval_oscil( data );
    data += sizeof(keep_focus_eval_oscil);

    cv_cnv_endian_reset_oscil_in_eval( data );
    data += sizeof(reset_oscil_in_eval);

    cv_cnv_endian_force_acqs( data );
    data += sizeof(force_acqs);

    cv_cnv_endian_force_avmaxslquant( data );
    data += sizeof(force_avmaxslquant);

    cv_cnv_endian_oscil_eval_count( data );
    data += sizeof(oscil_eval_count);

    cv_cnv_endian_optr_save( data );
    data += sizeof(optr_save);

    cv_cnv_endian_opslquant_save( data );
    data += sizeof(opslquant_save);

    cv_cnv_endian_save_avmintr( data );
    data += sizeof(save_avmintr);

    cv_cnv_endian_save_pitracqval4( data );
    data += sizeof(save_pitracqval4);

    cv_cnv_endian_res_gd1( data );
    data += sizeof(res_gd1);

    cv_cnv_endian_res_gd2( data );
    data += sizeof(res_gd2);

    cv_cnv_endian_pw_gd1( data );
    data += sizeof(pw_gd1);

    cv_cnv_endian_pw_gd2( data );
    data += sizeof(pw_gd2);

    cv_cnv_endian_a_gxdl( data );
    data += sizeof(a_gxdl);

    cv_cnv_endian_a_gxdr( data );
    data += sizeof(a_gxdr);

    cv_cnv_endian_ia_gxdl( data );
    data += sizeof(ia_gxdl);

    cv_cnv_endian_ia_gxdr( data );
    data += sizeof(ia_gxdr);

    cv_cnv_endian_res_gxdl( data );
    data += sizeof(res_gxdl);

    cv_cnv_endian_res_gxdr( data );
    data += sizeof(res_gxdr);

    cv_cnv_endian_pw_gxdr( data );
    data += sizeof(pw_gxdr);

    cv_cnv_endian_pw_gxdl( data );
    data += sizeof(pw_gxdl);

    cv_cnv_endian_wg_gxdr( data );
    data += sizeof(wg_gxdr);

    cv_cnv_endian_wg_gxdl( data );
    data += sizeof(wg_gxdl);

    cv_cnv_endian_a_gydl( data );
    data += sizeof(a_gydl);

    cv_cnv_endian_a_gydr( data );
    data += sizeof(a_gydr);

    cv_cnv_endian_ia_gydl( data );
    data += sizeof(ia_gydl);

    cv_cnv_endian_ia_gydr( data );
    data += sizeof(ia_gydr);

    cv_cnv_endian_res_gydl( data );
    data += sizeof(res_gydl);

    cv_cnv_endian_res_gydr( data );
    data += sizeof(res_gydr);

    cv_cnv_endian_pw_gydr( data );
    data += sizeof(pw_gydr);

    cv_cnv_endian_pw_gydl( data );
    data += sizeof(pw_gydl);

    cv_cnv_endian_wg_gydr( data );
    data += sizeof(wg_gydr);

    cv_cnv_endian_wg_gydl( data );
    data += sizeof(wg_gydl);

    cv_cnv_endian_a_gzdl( data );
    data += sizeof(a_gzdl);

    cv_cnv_endian_a_gzdr( data );
    data += sizeof(a_gzdr);

    cv_cnv_endian_ia_gzdl( data );
    data += sizeof(ia_gzdl);

    cv_cnv_endian_ia_gzdr( data );
    data += sizeof(ia_gzdr);

    cv_cnv_endian_res_gzdl( data );
    data += sizeof(res_gzdl);

    cv_cnv_endian_res_gzdr( data );
    data += sizeof(res_gzdr);

    cv_cnv_endian_pw_gzdr( data );
    data += sizeof(pw_gzdr);

    cv_cnv_endian_pw_gzdl( data );
    data += sizeof(pw_gzdl);

    cv_cnv_endian_wg_gzdr( data );
    data += sizeof(wg_gzdr);

    cv_cnv_endian_wg_gzdl( data );
    data += sizeof(wg_gzdl);

    cv_cnv_endian_a_gxdla( data );
    data += sizeof(a_gxdla);

    cv_cnv_endian_a_gxdld( data );
    data += sizeof(a_gxdld);

    cv_cnv_endian_a_gxdra( data );
    data += sizeof(a_gxdra);

    cv_cnv_endian_a_gxdrd( data );
    data += sizeof(a_gxdrd);

    cv_cnv_endian_ia_gxdla( data );
    data += sizeof(ia_gxdla);

    cv_cnv_endian_ia_gxdld( data );
    data += sizeof(ia_gxdld);

    cv_cnv_endian_ia_gxdra( data );
    data += sizeof(ia_gxdra);

    cv_cnv_endian_ia_gxdrd( data );
    data += sizeof(ia_gxdrd);

    cv_cnv_endian_pw_gxdla( data );
    data += sizeof(pw_gxdla);

    cv_cnv_endian_pw_gxdld( data );
    data += sizeof(pw_gxdld);

    cv_cnv_endian_pw_gxdra( data );
    data += sizeof(pw_gxdra);

    cv_cnv_endian_pw_gxdrd( data );
    data += sizeof(pw_gxdrd);

    cv_cnv_endian_a_gydla( data );
    data += sizeof(a_gydla);

    cv_cnv_endian_a_gydld( data );
    data += sizeof(a_gydld);

    cv_cnv_endian_a_gydra( data );
    data += sizeof(a_gydra);

    cv_cnv_endian_a_gydrd( data );
    data += sizeof(a_gydrd);

    cv_cnv_endian_ia_gydla( data );
    data += sizeof(ia_gydla);

    cv_cnv_endian_ia_gydld( data );
    data += sizeof(ia_gydld);

    cv_cnv_endian_ia_gydra( data );
    data += sizeof(ia_gydra);

    cv_cnv_endian_ia_gydrd( data );
    data += sizeof(ia_gydrd);

    cv_cnv_endian_pw_gydla( data );
    data += sizeof(pw_gydla);

    cv_cnv_endian_pw_gydld( data );
    data += sizeof(pw_gydld);

    cv_cnv_endian_pw_gydra( data );
    data += sizeof(pw_gydra);

    cv_cnv_endian_pw_gydrd( data );
    data += sizeof(pw_gydrd);

    cv_cnv_endian_a_gzdla( data );
    data += sizeof(a_gzdla);

    cv_cnv_endian_a_gzdld( data );
    data += sizeof(a_gzdld);

    cv_cnv_endian_a_gzdra( data );
    data += sizeof(a_gzdra);

    cv_cnv_endian_a_gzdrd( data );
    data += sizeof(a_gzdrd);

    cv_cnv_endian_ia_gzdla( data );
    data += sizeof(ia_gzdla);

    cv_cnv_endian_ia_gzdld( data );
    data += sizeof(ia_gzdld);

    cv_cnv_endian_ia_gzdra( data );
    data += sizeof(ia_gzdra);

    cv_cnv_endian_ia_gzdrd( data );
    data += sizeof(ia_gzdrd);

    cv_cnv_endian_pw_gzdla( data );
    data += sizeof(pw_gzdla);

    cv_cnv_endian_pw_gzdld( data );
    data += sizeof(pw_gzdld);

    cv_cnv_endian_pw_gzdra( data );
    data += sizeof(pw_gzdra);

    cv_cnv_endian_pw_gzdrd( data );
    data += sizeof(pw_gzdrd);

    cv_cnv_endian_num_passdelay( data );
    data += sizeof(num_passdelay);

    cv_cnv_endian_use_maxloggrad( data );
    data += sizeof(use_maxloggrad);

    cv_cnv_endian_max_grad( data );
    data += sizeof(max_grad);

    cv_cnv_endian_scale_dif( data );
    data += sizeof(scale_dif);

    cv_cnv_endian_debug_core( data );
    data += sizeof(debug_core);

    cv_cnv_endian_debug_unitTest( data );
    data += sizeof(debug_unitTest);

    cv_cnv_endian_taratio( data );
    data += sizeof(taratio);

    cv_cnv_endian_rampopt( data );
    data += sizeof(rampopt);

    cv_cnv_endian_totarea( data );
    data += sizeof(totarea);

    cv_cnv_endian_actratio( data );
    data += sizeof(actratio);

    cv_cnv_endian_dpc_flag( data );
    data += sizeof(dpc_flag);

    cv_cnv_endian_sndpc_flag( data );
    data += sizeof(sndpc_flag);

    cv_cnv_endian_iref_etl( data );
    data += sizeof(iref_etl);

    cv_cnv_endian_iref_frames( data );
    data += sizeof(iref_frames);

    cv_cnv_endian_tot_etl( data );
    data += sizeof(tot_etl);

    cv_cnv_endian_pw_gxiref1_tot( data );
    data += sizeof(pw_gxiref1_tot);

    cv_cnv_endian_pw_gxiref_tot( data );
    data += sizeof(pw_gxiref_tot);

    cv_cnv_endian_pw_gxirefr_tot( data );
    data += sizeof(pw_gxirefr_tot);

    cv_cnv_endian_MinFram2FramTime( data );
    data += sizeof(MinFram2FramTime);

    cv_cnv_endian_maxslice_per_ti( data );
    data += sizeof(maxslice_per_ti);

    cv_cnv_endian_invseqtime( data );
    data += sizeof(invseqtime);

    cv_cnv_endian_false_acqs( data );
    data += sizeof(false_acqs);

    cv_cnv_endian_false_slquant1( data );
    data += sizeof(false_slquant1);

    cv_cnv_endian_max_slice_ti( data );
    data += sizeof(max_slice_ti);

    cv_cnv_endian_flair_min_tr( data );
    data += sizeof(flair_min_tr);

    cv_cnv_endian_dda_packb( data );
    data += sizeof(dda_packb);

    cv_cnv_endian_dda_pack( data );
    data += sizeof(dda_pack);

    cv_cnv_endian_dda_packe( data );
    data += sizeof(dda_packe);

    cv_cnv_endian_dda_passb( data );
    data += sizeof(dda_passb);

    cv_cnv_endian_dda_pass( data );
    data += sizeof(dda_pass);

    cv_cnv_endian_deadlast( data );
    data += sizeof(deadlast);

    cv_cnv_endian_tmp_deadlast( data );
    data += sizeof(tmp_deadlast);

    cv_cnv_endian_phase_dither( data );
    data += sizeof(phase_dither);

    cv_cnv_endian_spgr_flag( data );
    data += sizeof(spgr_flag);

    cv_cnv_endian_rhhnover_max( data );
    data += sizeof(rhhnover_max);

    cv_cnv_endian_rhhnover_min( data );
    data += sizeof(rhhnover_min);

    cv_cnv_endian_rhhnover_min_per_ilv( data );
    data += sizeof(rhhnover_min_per_ilv);

    cv_cnv_endian_newyres( data );
    data += sizeof(newyres);

    cv_cnv_endian_num_overscan( data );
    data += sizeof(num_overscan);

    cv_cnv_endian_smart_numoverscan( data );
    data += sizeof(smart_numoverscan);

    cv_cnv_endian_avmintefull( data );
    data += sizeof(avmintefull);

    cv_cnv_endian_cvrefindex1( data );
    data += sizeof(cvrefindex1);

    cv_cnv_endian_gx1_area( data );
    data += sizeof(gx1_area);

    cv_cnv_endian_avmintetemp( data );
    data += sizeof(avmintetemp);

    cv_cnv_endian_fast_rec( data );
    data += sizeof(fast_rec);

    cv_cnv_endian_bl_acq_tr1( data );
    data += sizeof(bl_acq_tr1);

    cv_cnv_endian_bl_acq_tr2( data );
    data += sizeof(bl_acq_tr2);

    cv_cnv_endian_fecho_factor( data );
    data += sizeof(fecho_factor);

    cv_cnv_endian_tsp( data );
    data += sizeof(tsp);

    cv_cnv_endian_intleaves( data );
    data += sizeof(intleaves);

    cv_cnv_endian_ky_dir( data );
    data += sizeof(ky_dir);

    cv_cnv_endian_kx_dir( data );
    data += sizeof(kx_dir);

    cv_cnv_endian_dc_chop( data );
    data += sizeof(dc_chop);

    cv_cnv_endian_etot( data );
    data += sizeof(etot);

    cv_cnv_endian_emid( data );
    data += sizeof(emid);

    cv_cnv_endian_e1st( data );
    data += sizeof(e1st);

    cv_cnv_endian_seq_data( data );
    data += sizeof(seq_data);

    cv_cnv_endian_msamp( data );
    data += sizeof(msamp);

    cv_cnv_endian_dsamp( data );
    data += sizeof(dsamp);

    cv_cnv_endian_delpw( data );
    data += sizeof(delpw);

    cv_cnv_endian_num_dif( data );
    data += sizeof(num_dif);

    cv_cnv_endian_incr( data );
    data += sizeof(incr);

    cv_cnv_endian_df_encode( data );
    data += sizeof(df_encode);

    cv_cnv_endian_i_bval( data );
    data += sizeof(i_bval);

    cv_cnv_endian_df_refscn( data );
    data += sizeof(df_refscn);

    cv_cnv_endian_dwi_fphases( data );
    data += sizeof(dwi_fphases);

    cv_cnv_endian_max_slice_dfaxall( data );
    data += sizeof(max_slice_dfaxall);

    cv_cnv_endian_dualspinecho_flag( data );
    data += sizeof(dualspinecho_flag);

    cv_cnv_endian_derate_amp( data );
    data += sizeof(derate_amp);

    cv_cnv_endian_scale_difx( data );
    data += sizeof(scale_difx);

    cv_cnv_endian_scale_dify( data );
    data += sizeof(scale_dify);

    cv_cnv_endian_scale_difz( data );
    data += sizeof(scale_difz);

    cv_cnv_endian_unbalanceCrusher( data );
    data += sizeof(unbalanceCrusher);

    cv_cnv_endian_crusherFactorLeft( data );
    data += sizeof(crusherFactorLeft);

    cv_cnv_endian_crusherFactorRight( data );
    data += sizeof(crusherFactorRight);

    cv_cnv_endian_invertSliceSelectZ( data );
    data += sizeof(invertSliceSelectZ);

    cv_cnv_endian_invertSliceSelectZ2( data );
    data += sizeof(invertSliceSelectZ2);

    cv_cnv_endian_xygradRightCrusherFlag( data );
    data += sizeof(xygradRightCrusherFlag);

    cv_cnv_endian_xygradLeftCrusherFlag( data );
    data += sizeof(xygradLeftCrusherFlag);

    cv_cnv_endian_xygradCrusherFlag( data );
    data += sizeof(xygradCrusherFlag);

    cv_cnv_endian_invertCrusherXY( data );
    data += sizeof(invertCrusherXY);

    cv_cnv_endian_ssgr_mux( data );
    data += sizeof(ssgr_mux);

    cv_cnv_endian_ssgr_flag( data );
    data += sizeof(ssgr_flag);

    cv_cnv_endian_ssgr_bw_update( data );
    data += sizeof(ssgr_bw_update);

    cv_cnv_endian_freqSign_rf2right( data );
    data += sizeof(freqSign_rf2right);

    cv_cnv_endian_freqSign_rf2left( data );
    data += sizeof(freqSign_rf2left);

    cv_cnv_endian_freqSign_rf2( data );
    data += sizeof(freqSign_rf2);

    cv_cnv_endian_fat_cs( data );
    data += sizeof(fat_cs);

    cv_cnv_endian_rf1_bw_ratio( data );
    data += sizeof(rf1_bw_ratio);

    cv_cnv_endian_rf2_bw_ratio( data );
    data += sizeof(rf2_bw_ratio);

    cv_cnv_endian_b0_offset( data );
    data += sizeof(b0_offset);

    cv_cnv_endian_RightCrusherLSlop( data );
    data += sizeof(RightCrusherLSlop);

    cv_cnv_endian_RightCrusherRSlop( data );
    data += sizeof(RightCrusherRSlop);

    cv_cnv_endian_LeftCrusherLSlop( data );
    data += sizeof(LeftCrusherLSlop);

    cv_cnv_endian_LeftCrusherRSlop( data );
    data += sizeof(LeftCrusherRSlop);

    cv_cnv_endian_CrusherRSlop( data );
    data += sizeof(CrusherRSlop);

    cv_cnv_endian_CrusherLSlop( data );
    data += sizeof(CrusherLSlop);

    cv_cnv_endian_epi2spec_mode( data );
    data += sizeof(epi2spec_mode);

    cv_cnv_endian_weighted_avg_grad( data );
    data += sizeof(weighted_avg_grad);

    cv_cnv_endian_weighted_avg_debug( data );
    data += sizeof(weighted_avg_debug);

    cv_cnv_endian_DELTAx( data );
    data += sizeof(DELTAx);

    cv_cnv_endian_DELTAy( data );
    data += sizeof(DELTAy);

    cv_cnv_endian_DELTAz( data );
    data += sizeof(DELTAz);

    cv_cnv_endian_deltax( data );
    data += sizeof(deltax);

    cv_cnv_endian_deltay( data );
    data += sizeof(deltay);

    cv_cnv_endian_deltaz( data );
    data += sizeof(deltaz);

    cv_cnv_endian_a_gx_dwi( data );
    data += sizeof(a_gx_dwi);

    cv_cnv_endian_a_gy_dwi( data );
    data += sizeof(a_gy_dwi);

    cv_cnv_endian_a_gz_dwi( data );
    data += sizeof(a_gz_dwi);

    cv_cnv_endian_freq_dwi( data );
    data += sizeof(freq_dwi);

    cv_cnv_endian_phase_dwi( data );
    data += sizeof(phase_dwi);

    cv_cnv_endian_ia_gx_dwi( data );
    data += sizeof(ia_gx_dwi);

    cv_cnv_endian_ia_gy_dwi( data );
    data += sizeof(ia_gy_dwi);

    cv_cnv_endian_ia_gz_dwi( data );
    data += sizeof(ia_gz_dwi);

    cv_cnv_endian_dwicntrl( data );
    data += sizeof(dwicntrl);

    cv_cnv_endian_dwidebug( data );
    data += sizeof(dwidebug);

    cv_cnv_endian_tmp_ileave( data );
    data += sizeof(tmp_ileave);

    cv_cnv_endian_tmp_ygrad_sw( data );
    data += sizeof(tmp_ygrad_sw);

    cv_cnv_endian_t4_tmp( data );
    data += sizeof(t4_tmp);

    cv_cnv_endian_incdifx( data );
    data += sizeof(incdifx);

    cv_cnv_endian_incdify( data );
    data += sizeof(incdify);

    cv_cnv_endian_incdifz( data );
    data += sizeof(incdifz);

    cv_cnv_endian_ia_incdifx( data );
    data += sizeof(ia_incdifx);

    cv_cnv_endian_ia_incdify( data );
    data += sizeof(ia_incdify);

    cv_cnv_endian_ia_incdifz( data );
    data += sizeof(ia_incdifz);

    cv_cnv_endian_waveform_type( data );
    data += sizeof(waveform_type);

    cv_cnv_endian_ide_max_bval( data );
    data += sizeof(ide_max_bval);

    cv_cnv_endian_sde_max_bval( data );
    data += sizeof(sde_max_bval);

    cv_cnv_endian_bincr( data );
    data += sizeof(bincr);

    cv_cnv_endian_invthick( data );
    data += sizeof(invthick);

    cv_cnv_endian_xerror( data );
    data += sizeof(xerror);

    cv_cnv_endian_yerror( data );
    data += sizeof(yerror);

    cv_cnv_endian_zerror( data );
    data += sizeof(zerror);

    cv_cnv_endian_obl_3in1_opt_debug( data );
    data += sizeof(obl_3in1_opt_debug);

    cv_cnv_endian_obl_3in1_opt( data );
    data += sizeof(obl_3in1_opt);

    cv_cnv_endian_norot_incdifx( data );
    data += sizeof(norot_incdifx);

    cv_cnv_endian_norot_incdify( data );
    data += sizeof(norot_incdify);

    cv_cnv_endian_norot_incdifz( data );
    data += sizeof(norot_incdifz);

    cv_cnv_endian_target_mpg_inv( data );
    data += sizeof(target_mpg_inv);

    cv_cnv_endian_target_mpg( data );
    data += sizeof(target_mpg);

    cv_cnv_endian_amp_difx_bverify( data );
    data += sizeof(amp_difx_bverify);

    cv_cnv_endian_amp_dify_bverify( data );
    data += sizeof(amp_dify_bverify);

    cv_cnv_endian_amp_difz_bverify( data );
    data += sizeof(amp_difz_bverify);

    cv_cnv_endian_different_mpg_amp_flag( data );
    data += sizeof(different_mpg_amp_flag);

    cv_cnv_endian_act_acqs( data );
    data += sizeof(act_acqs);

    cv_cnv_endian_min_acqs( data );
    data += sizeof(min_acqs);

    cv_cnv_endian_maxslq_titime( data );
    data += sizeof(maxslq_titime);

    cv_cnv_endian_maxslq_ilir( data );
    data += sizeof(maxslq_ilir);

    cv_cnv_endian_epi_flair( data );
    data += sizeof(epi_flair);

    cv_cnv_endian_flair_flag( data );
    data += sizeof(flair_flag);

    cv_cnv_endian_dda_fact( data );
    data += sizeof(dda_fact);

    cv_cnv_endian_reps( data );
    data += sizeof(reps);

    cv_cnv_endian_pass_reps( data );
    data += sizeof(pass_reps);

    cv_cnv_endian_max_dsht( data );
    data += sizeof(max_dsht);

    cv_cnv_endian_avg_at_loc( data );
    data += sizeof(avg_at_loc);

    cv_cnv_endian_filtfix( data );
    data += sizeof(filtfix);

    cv_cnv_endian_rf_chop( data );
    data += sizeof(rf_chop);

    cv_cnv_endian_rftype( data );
    data += sizeof(rftype);

    cv_cnv_endian_thetatype( data );
    data += sizeof(thetatype);

    cv_cnv_endian_gztype( data );
    data += sizeof(gztype);

    cv_cnv_endian_hsdab( data );
    data += sizeof(hsdab);

    cv_cnv_endian_slice_num( data );
    data += sizeof(slice_num);

    cv_cnv_endian_rep_num( data );
    data += sizeof(rep_num);

    cv_cnv_endian_endview_iamp( data );
    data += sizeof(endview_iamp);

    cv_cnv_endian_endview_scale( data );
    data += sizeof(endview_scale);

    cv_cnv_endian_gx1pos( data );
    data += sizeof(gx1pos);

    cv_cnv_endian_gy1pos( data );
    data += sizeof(gy1pos);

    cv_cnv_endian_eosxkiller( data );
    data += sizeof(eosxkiller);

    cv_cnv_endian_eosykiller( data );
    data += sizeof(eosykiller);

    cv_cnv_endian_eoszkiller( data );
    data += sizeof(eoszkiller);

    cv_cnv_endian_eoskillers( data );
    data += sizeof(eoskillers);

    cv_cnv_endian_eosrhokiller( data );
    data += sizeof(eosrhokiller);

    cv_cnv_endian_gyctrl( data );
    data += sizeof(gyctrl);

    cv_cnv_endian_gxctrl( data );
    data += sizeof(gxctrl);

    cv_cnv_endian_gzctrl( data );
    data += sizeof(gzctrl);

    cv_cnv_endian_ygmn_type( data );
    data += sizeof(ygmn_type);

    cv_cnv_endian_zgmn_type( data );
    data += sizeof(zgmn_type);

    cv_cnv_endian_rampsamp( data );
    data += sizeof(rampsamp);

    cv_cnv_endian_final_xres( data );
    data += sizeof(final_xres);

    cv_cnv_endian_autovrgf( data );
    data += sizeof(autovrgf);

    cv_cnv_endian_vrgf_targ( data );
    data += sizeof(vrgf_targ);

    cv_cnv_endian_vrgf_reorder( data );
    data += sizeof(vrgf_reorder);

    cv_cnv_endian_fbhw( data );
    data += sizeof(fbhw);

    cv_cnv_endian_osamp( data );
    data += sizeof(osamp);

    cv_cnv_endian_etl( data );
    data += sizeof(etl);

    cv_cnv_endian_eesp( data );
    data += sizeof(eesp);

    cv_cnv_endian_nblips( data );
    data += sizeof(nblips);

    cv_cnv_endian_blips2cent( data );
    data += sizeof(blips2cent);

    cv_cnv_endian_ep_alt( data );
    data += sizeof(ep_alt);

    cv_cnv_endian_tia_gx1( data );
    data += sizeof(tia_gx1);

    cv_cnv_endian_tia_gxw( data );
    data += sizeof(tia_gxw);

    cv_cnv_endian_tia_gxk( data );
    data += sizeof(tia_gxk);

    cv_cnv_endian_tia_gxiref1( data );
    data += sizeof(tia_gxiref1);

    cv_cnv_endian_tia_gxirefr( data );
    data += sizeof(tia_gxirefr);

    cv_cnv_endian_ta_gxwn( data );
    data += sizeof(ta_gxwn);

    cv_cnv_endian_rbw( data );
    data += sizeof(rbw);

    cv_cnv_endian_avminxa( data );
    data += sizeof(avminxa);

    cv_cnv_endian_avminxb( data );
    data += sizeof(avminxb);

    cv_cnv_endian_avminx( data );
    data += sizeof(avminx);

    cv_cnv_endian_avminya( data );
    data += sizeof(avminya);

    cv_cnv_endian_avminyb( data );
    data += sizeof(avminyb);

    cv_cnv_endian_avminy( data );
    data += sizeof(avminy);

    cv_cnv_endian_avminza( data );
    data += sizeof(avminza);

    cv_cnv_endian_avminzb( data );
    data += sizeof(avminzb);

    cv_cnv_endian_avminz( data );
    data += sizeof(avminz);

    cv_cnv_endian_avminssp( data );
    data += sizeof(avminssp);

    cv_cnv_endian_avminfovx( data );
    data += sizeof(avminfovx);

    cv_cnv_endian_avminfovy( data );
    data += sizeof(avminfovy);

    cv_cnv_endian_hrdwr_period( data );
    data += sizeof(hrdwr_period);

    cv_cnv_endian_samp_period( data );
    data += sizeof(samp_period);

    cv_cnv_endian_pwmin_gap( data );
    data += sizeof(pwmin_gap);

    cv_cnv_endian_frqx( data );
    data += sizeof(frqx);

    cv_cnv_endian_frqy( data );
    data += sizeof(frqy);

    cv_cnv_endian_dacq_offset( data );
    data += sizeof(dacq_offset);

    cv_cnv_endian_pepolar( data );
    data += sizeof(pepolar);

    cv_cnv_endian_rpg_flag( data );
    data += sizeof(rpg_flag);

    cv_cnv_endian_rpg_in_scan_flag( data );
    data += sizeof(rpg_in_scan_flag);

    cv_cnv_endian_rpg_in_scan_num( data );
    data += sizeof(rpg_in_scan_num);

    cv_cnv_endian_tdaqhxa( data );
    data += sizeof(tdaqhxa);

    cv_cnv_endian_tdaqhxb( data );
    data += sizeof(tdaqhxb);

    cv_cnv_endian_xdiff_time1( data );
    data += sizeof(xdiff_time1);

    cv_cnv_endian_xdiff_time2( data );
    data += sizeof(xdiff_time2);

    cv_cnv_endian_ydiff_time1( data );
    data += sizeof(ydiff_time1);

    cv_cnv_endian_ydiff_time2( data );
    data += sizeof(ydiff_time2);

    cv_cnv_endian_zdiff_time1( data );
    data += sizeof(zdiff_time1);

    cv_cnv_endian_zdiff_time2( data );
    data += sizeof(zdiff_time2);

    cv_cnv_endian_delt( data );
    data += sizeof(delt);

    cv_cnv_endian_T1eff( data );
    data += sizeof(T1eff);

    cv_cnv_endian_bcoeff( data );
    data += sizeof(bcoeff);

    cv_cnv_endian_aspir_auto_ti_model( data );
    data += sizeof(aspir_auto_ti_model);

    cv_cnv_endian_tfon( data );
    data += sizeof(tfon);

    cv_cnv_endian_fract_ky( data );
    data += sizeof(fract_ky);

    cv_cnv_endian_ky_offset( data );
    data += sizeof(ky_offset);

    cv_cnv_endian_gy1_offset( data );
    data += sizeof(gy1_offset);

    cv_cnv_endian_satdelay( data );
    data += sizeof(satdelay);

    cv_cnv_endian_sp_sattype( data );
    data += sizeof(sp_sattype);

    cv_cnv_endian_td0( data );
    data += sizeof(td0);

    cv_cnv_endian_t_exa( data );
    data += sizeof(t_exa);

    cv_cnv_endian_te_time( data );
    data += sizeof(te_time);

    cv_cnv_endian_pos_start( data );
    data += sizeof(pos_start);

    cv_cnv_endian_pos_start_init( data );
    data += sizeof(pos_start_init);

    cv_cnv_endian_post_echo_time( data );
    data += sizeof(post_echo_time);

    cv_cnv_endian_psd_tseq( data );
    data += sizeof(psd_tseq);

    cv_cnv_endian_time_ssi( data );
    data += sizeof(time_ssi);

    cv_cnv_endian_dacq_adjust( data );
    data += sizeof(dacq_adjust);

    cv_cnv_endian_watchdogcount( data );
    data += sizeof(watchdogcount);

    cv_cnv_endian_dabdelay( data );
    data += sizeof(dabdelay);

    cv_cnv_endian_tlead( data );
    data += sizeof(tlead);

    cv_cnv_endian_act_tr( data );
    data += sizeof(act_tr);

    cv_cnv_endian_rfconf( data );
    data += sizeof(rfconf);

    cv_cnv_endian_ctlend( data );
    data += sizeof(ctlend);

    cv_cnv_endian_dda( data );
    data += sizeof(dda);

    cv_cnv_endian_debug( data );
    data += sizeof(debug);

    cv_cnv_endian_debug_dbdt( data );
    data += sizeof(debug_dbdt);

    cv_cnv_endian_debugipg( data );
    data += sizeof(debugipg);

    cv_cnv_endian_debugepc( data );
    data += sizeof(debugepc);

    cv_cnv_endian_debugdither( data );
    data += sizeof(debugdither);

    cv_cnv_endian_debugdelay( data );
    data += sizeof(debugdelay);

    cv_cnv_endian_dex( data );
    data += sizeof(dex);

    cv_cnv_endian_gating( data );
    data += sizeof(gating);

    cv_cnv_endian_ipg_trigtest( data );
    data += sizeof(ipg_trigtest);

    cv_cnv_endian_gxktime( data );
    data += sizeof(gxktime);

    cv_cnv_endian_gyktime( data );
    data += sizeof(gyktime);

    cv_cnv_endian_gzktime( data );
    data += sizeof(gzktime);

    cv_cnv_endian_gktime( data );
    data += sizeof(gktime);

    cv_cnv_endian_gkdelay( data );
    data += sizeof(gkdelay);

    cv_cnv_endian_scanbw( data );
    data += sizeof(scanbw);

    cv_cnv_endian_scanslot( data );
    data += sizeof(scanslot);

    cv_cnv_endian_a_lcrush_cfh( data );
    data += sizeof(a_lcrush_cfh);

    cv_cnv_endian_area_gxw( data );
    data += sizeof(area_gxw);

    cv_cnv_endian_area_gx1( data );
    data += sizeof(area_gx1);

    cv_cnv_endian_area_readramp( data );
    data += sizeof(area_readramp);

    cv_cnv_endian_area_r1( data );
    data += sizeof(area_r1);

    cv_cnv_endian_area_gz1( data );
    data += sizeof(area_gz1);

    cv_cnv_endian_area_gzrf2l1( data );
    data += sizeof(area_gzrf2l1);

    cv_cnv_endian_area_r1_cfh( data );
    data += sizeof(area_r1_cfh);

    cv_cnv_endian_area_std( data );
    data += sizeof(area_std);

    cv_cnv_endian_area_stde( data );
    data += sizeof(area_stde);

    cv_cnv_endian_avail_pwgz1( data );
    data += sizeof(avail_pwgz1);

    cv_cnv_endian_prescan1_tr( data );
    data += sizeof(prescan1_tr);

    cv_cnv_endian_ps2_dda( data );
    data += sizeof(ps2_dda);

    cv_cnv_endian_avail_pwgx1( data );
    data += sizeof(avail_pwgx1);

    cv_cnv_endian_avail_image_time( data );
    data += sizeof(avail_image_time);

    cv_cnv_endian_beg_nontetime( data );
    data += sizeof(beg_nontetime);

    cv_cnv_endian_pos_start_rf0( data );
    data += sizeof(pos_start_rf0);

    cv_cnv_endian_beg_nontitime( data );
    data += sizeof(beg_nontitime);

    cv_cnv_endian_avail_se_time( data );
    data += sizeof(avail_se_time);

    cv_cnv_endian_avail_tdaqhxa( data );
    data += sizeof(avail_tdaqhxa);

    cv_cnv_endian_full_irtime( data );
    data += sizeof(full_irtime);

    cv_cnv_endian_avail_yflow_time( data );
    data += sizeof(avail_yflow_time);

    cv_cnv_endian_avail_zflow_time( data );
    data += sizeof(avail_zflow_time);

    cv_cnv_endian_nviews( data );
    data += sizeof(nviews);

    cv_cnv_endian_test_getecg( data );
    data += sizeof(test_getecg);

    cv_cnv_endian_premid_rf90( data );
    data += sizeof(premid_rf90);

    cv_cnv_endian_c1_scale( data );
    data += sizeof(c1_scale);

    cv_cnv_endian_c2_scale( data );
    data += sizeof(c2_scale);

    cv_cnv_endian_crusher_cycles( data );
    data += sizeof(crusher_cycles);

    cv_cnv_endian_max_seqtime( data );
    data += sizeof(max_seqtime);

    cv_cnv_endian_max_slicesar( data );
    data += sizeof(max_slicesar);

    cv_cnv_endian_max_seqsar( data );
    data += sizeof(max_seqsar);

    cv_cnv_endian_myrloc( data );
    data += sizeof(myrloc);

    cv_cnv_endian_other_slice_limit( data );
    data += sizeof(other_slice_limit);

    cv_cnv_endian_target_area( data );
    data += sizeof(target_area);

    cv_cnv_endian_start_amp( data );
    data += sizeof(start_amp);

    cv_cnv_endian_end_amp( data );
    data += sizeof(end_amp);

    cv_cnv_endian_pre_pass( data );
    data += sizeof(pre_pass);

    cv_cnv_endian_nreps( data );
    data += sizeof(nreps);

    cv_cnv_endian_xmtaddScan( data );
    data += sizeof(xmtaddScan);

    cv_cnv_endian_rfscale( data );
    data += sizeof(rfscale);

    cv_cnv_endian_rfExIso( data );
    data += sizeof(rfExIso);

    cv_cnv_endian_frq2sync_dly( data );
    data += sizeof(frq2sync_dly);

    cv_cnv_endian_rf1_phase( data );
    data += sizeof(rf1_phase);

    cv_cnv_endian_rf2_phase( data );
    data += sizeof(rf2_phase);

    cv_cnv_endian_hrf1a( data );
    data += sizeof(hrf1a);

    cv_cnv_endian_hrf1b( data );
    data += sizeof(hrf1b);

    cv_cnv_endian_hrf2a( data );
    data += sizeof(hrf2a);

    cv_cnv_endian_hrf2b( data );
    data += sizeof(hrf2b);

    cv_cnv_endian_innerVol( data );
    data += sizeof(innerVol);

    cv_cnv_endian_ivslthick( data );
    data += sizeof(ivslthick);

    cv_cnv_endian_psd_mantrig( data );
    data += sizeof(psd_mantrig);

    cv_cnv_endian_trig_mps2( data );
    data += sizeof(trig_mps2);

    cv_cnv_endian_trig_aps2( data );
    data += sizeof(trig_aps2);

    cv_cnv_endian_trig_scan( data );
    data += sizeof(trig_scan);

    cv_cnv_endian_trig_prescan( data );
    data += sizeof(trig_prescan);

    cv_cnv_endian_read_truncate( data );
    data += sizeof(read_truncate);

    cv_cnv_endian_tmin_flair( data );
    data += sizeof(tmin_flair);

    cv_cnv_endian_trigger_time( data );
    data += sizeof(trigger_time);

    cv_cnv_endian_use_myscan( data );
    data += sizeof(use_myscan);

    cv_cnv_endian_t_postreadout( data );
    data += sizeof(t_postreadout);

    cv_cnv_endian_initnewgeo( data );
    data += sizeof(initnewgeo);

    cv_cnv_endian_obl_debug( data );
    data += sizeof(obl_debug);

    cv_cnv_endian_obl_method( data );
    data += sizeof(obl_method);

    cv_cnv_endian_debug_order( data );
    data += sizeof(debug_order);

    cv_cnv_endian_debug_tdel( data );
    data += sizeof(debug_tdel);

    cv_cnv_endian_debug_scan( data );
    data += sizeof(debug_scan);

    cv_cnv_endian_postsat( data );
    data += sizeof(postsat);

    cv_cnv_endian_order_routine( data );
    data += sizeof(order_routine);

    cv_cnv_endian_scan_offset( data );
    data += sizeof(scan_offset);

    cv_cnv_endian_dither_control( data );
    data += sizeof(dither_control);

    cv_cnv_endian_dither_value( data );
    data += sizeof(dither_value);

    cv_cnv_endian_slquant_per_trig( data );
    data += sizeof(slquant_per_trig);

    cv_cnv_endian_non_tetime( data );
    data += sizeof(non_tetime);

    cv_cnv_endian_slice_size( data );
    data += sizeof(slice_size);

    cv_cnv_endian_max_bamslice( data );
    data += sizeof(max_bamslice);

    cv_cnv_endian_rf2PulseType( data );
    data += sizeof(rf2PulseType);

    cv_cnv_endian_bw_rf1( data );
    data += sizeof(bw_rf1);

    cv_cnv_endian_bw_rf2( data );
    data += sizeof(bw_rf2);

    cv_cnv_endian_a_gx1( data );
    data += sizeof(a_gx1);

    cv_cnv_endian_ia_gx1( data );
    data += sizeof(ia_gx1);

    cv_cnv_endian_pw_gx1a( data );
    data += sizeof(pw_gx1a);

    cv_cnv_endian_pw_gx1d( data );
    data += sizeof(pw_gx1d);

    cv_cnv_endian_pw_gx1( data );
    data += sizeof(pw_gx1);

    cv_cnv_endian_single_ramp_gx1d( data );
    data += sizeof(single_ramp_gx1d);

    cv_cnv_endian_area_gy1( data );
    data += sizeof(area_gy1);

    cv_cnv_endian_area_gyb( data );
    data += sizeof(area_gyb);

    cv_cnv_endian_a_omega( data );
    data += sizeof(a_omega);

    cv_cnv_endian_ia_omega( data );
    data += sizeof(ia_omega);

    cv_cnv_endian_bline_time( data );
    data += sizeof(bline_time);

    cv_cnv_endian_scan_time( data );
    data += sizeof(scan_time);

    cv_cnv_endian_t1flair_disdaq_time( data );
    data += sizeof(t1flair_disdaq_time);

    cv_cnv_endian_pw_gx1_tot( data );
    data += sizeof(pw_gx1_tot);

    cv_cnv_endian_pw_gy1_tot( data );
    data += sizeof(pw_gy1_tot);

    cv_cnv_endian_pw_gymn1_tot( data );
    data += sizeof(pw_gymn1_tot);

    cv_cnv_endian_pw_gymn2_tot( data );
    data += sizeof(pw_gymn2_tot);

    cv_cnv_endian_gyb_tot_0thmoment( data );
    data += sizeof(gyb_tot_0thmoment);

    cv_cnv_endian_gyb_tot_1stmoment( data );
    data += sizeof(gyb_tot_1stmoment);

    cv_cnv_endian_pw_gz1_tot( data );
    data += sizeof(pw_gz1_tot);

    cv_cnv_endian_pw_gzrf2l1_tot( data );
    data += sizeof(pw_gzrf2l1_tot);

    cv_cnv_endian_pw_gzrf2r1_tot( data );
    data += sizeof(pw_gzrf2r1_tot);

    cv_cnv_endian_pw_gzrf2l1_tot_bval( data );
    data += sizeof(pw_gzrf2l1_tot_bval);

    cv_cnv_endian_pw_gzrf2l2_tot_bval( data );
    data += sizeof(pw_gzrf2l2_tot_bval);

    cv_cnv_endian_pw_gzrf2r1_tot_bval( data );
    data += sizeof(pw_gzrf2r1_tot_bval);

    cv_cnv_endian_pw_gzrf2r2_tot_bval( data );
    data += sizeof(pw_gzrf2r2_tot_bval);

    cv_cnv_endian_dab_offset( data );
    data += sizeof(dab_offset);

    cv_cnv_endian_xtr_offset( data );
    data += sizeof(xtr_offset);

    cv_cnv_endian_rcvr_ub_off( data );
    data += sizeof(rcvr_ub_off);

    cv_cnv_endian_temprhfrsize( data );
    data += sizeof(temprhfrsize);

    cv_cnv_endian_pw_wgxdl( data );
    data += sizeof(pw_wgxdl);

    cv_cnv_endian_pw_wgxdr( data );
    data += sizeof(pw_wgxdr);

    cv_cnv_endian_pw_wgydl( data );
    data += sizeof(pw_wgydl);

    cv_cnv_endian_pw_wgydr( data );
    data += sizeof(pw_wgydr);

    cv_cnv_endian_pw_wgzdl( data );
    data += sizeof(pw_wgzdl);

    cv_cnv_endian_pw_wgzdr( data );
    data += sizeof(pw_wgzdr);

    cv_cnv_endian_pw_wgxdl1( data );
    data += sizeof(pw_wgxdl1);

    cv_cnv_endian_pw_wgxdr1( data );
    data += sizeof(pw_wgxdr1);

    cv_cnv_endian_pw_wgydl1( data );
    data += sizeof(pw_wgydl1);

    cv_cnv_endian_pw_wgydr1( data );
    data += sizeof(pw_wgydr1);

    cv_cnv_endian_pw_wgzdl1( data );
    data += sizeof(pw_wgzdl1);

    cv_cnv_endian_pw_wgzdr1( data );
    data += sizeof(pw_wgzdr1);

    cv_cnv_endian_pw_wgxdl2( data );
    data += sizeof(pw_wgxdl2);

    cv_cnv_endian_pw_wgxdr2( data );
    data += sizeof(pw_wgxdr2);

    cv_cnv_endian_pw_wgydl2( data );
    data += sizeof(pw_wgydl2);

    cv_cnv_endian_pw_wgydr2( data );
    data += sizeof(pw_wgydr2);

    cv_cnv_endian_pw_wgzdl2( data );
    data += sizeof(pw_wgzdl2);

    cv_cnv_endian_pw_wgzdr2( data );
    data += sizeof(pw_wgzdr2);

    cv_cnv_endian_zeromoment( data );
    data += sizeof(zeromoment);

    cv_cnv_endian_firstmoment( data );
    data += sizeof(firstmoment);

    cv_cnv_endian_zeromomentsum( data );
    data += sizeof(zeromomentsum);

    cv_cnv_endian_firstmomentsum( data );
    data += sizeof(firstmomentsum);

    cv_cnv_endian_pulsepos( data );
    data += sizeof(pulsepos);

    cv_cnv_endian_invertphase( data );
    data += sizeof(invertphase);

    cv_cnv_endian_xtarg( data );
    data += sizeof(xtarg);

    cv_cnv_endian_ytarg( data );
    data += sizeof(ytarg);

    cv_cnv_endian_ztarg( data );
    data += sizeof(ztarg);

    cv_cnv_endian_ditheron( data );
    data += sizeof(ditheron);

    cv_cnv_endian_dx( data );
    data += sizeof(dx);

    cv_cnv_endian_dy( data );
    data += sizeof(dy);

    cv_cnv_endian_dz( data );
    data += sizeof(dz);

    cv_cnv_endian_b0calmode( data );
    data += sizeof(b0calmode);

    cv_cnv_endian_slice_reset( data );
    data += sizeof(slice_reset);

    cv_cnv_endian_slice_loc( data );
    data += sizeof(slice_loc);

    cv_cnv_endian_delayon( data );
    data += sizeof(delayon);

    cv_cnv_endian_gxdelay( data );
    data += sizeof(gxdelay);

    cv_cnv_endian_gydelay( data );
    data += sizeof(gydelay);

    cv_cnv_endian_gldelayx( data );
    data += sizeof(gldelayx);

    cv_cnv_endian_gldelayy( data );
    data += sizeof(gldelayy);

    cv_cnv_endian_gldelayz( data );
    data += sizeof(gldelayz);

    cv_cnv_endian_pckeeppct( data );
    data += sizeof(pckeeppct);

    cv_cnv_endian_pkt_delay( data );
    data += sizeof(pkt_delay);

    cv_cnv_endian_mph_flag( data );
    data += sizeof(mph_flag);

    cv_cnv_endian_acqmode( data );
    data += sizeof(acqmode);

    cv_cnv_endian_max_phases( data );
    data += sizeof(max_phases);

    cv_cnv_endian_opslquant_old( data );
    data += sizeof(opslquant_old);

    cv_cnv_endian_piphases( data );
    data += sizeof(piphases);

    cv_cnv_endian_reqesp( data );
    data += sizeof(reqesp);

    cv_cnv_endian_autogap( data );
    data += sizeof(autogap);

    cv_cnv_endian_minesp( data );
    data += sizeof(minesp);

    cv_cnv_endian_fft_xsize( data );
    data += sizeof(fft_xsize);

    cv_cnv_endian_fft_ysize( data );
    data += sizeof(fft_ysize);

    cv_cnv_endian_image_size( data );
    data += sizeof(image_size);

    cv_cnv_endian_xtr_rba_time( data );
    data += sizeof(xtr_rba_time);

    cv_cnv_endian_frtime( data );
    data += sizeof(frtime);

    cv_cnv_endian_readpolar( data );
    data += sizeof(readpolar);

    cv_cnv_endian_blippolar( data );
    data += sizeof(blippolar);

    cv_cnv_endian_ref_mode( data );
    data += sizeof(ref_mode);

    cv_cnv_endian_refnframes( data );
    data += sizeof(refnframes);

    cv_cnv_endian_ref_with_xoffset( data );
    data += sizeof(ref_with_xoffset);

    cv_cnv_endian_noRefPrePhase( data );
    data += sizeof(noRefPrePhase);

    cv_cnv_endian_setDataAcqDelays( data );
    data += sizeof(setDataAcqDelays);

    cv_cnv_endian_refSliceNum( data );
    data += sizeof(refSliceNum);

    cv_cnv_endian_core_shots( data );
    data += sizeof(core_shots);

    cv_cnv_endian_disdaq_shots( data );
    data += sizeof(disdaq_shots);

    cv_cnv_endian_pass_shots( data );
    data += sizeof(pass_shots);

    cv_cnv_endian_passr_shots( data );
    data += sizeof(passr_shots);

    cv_cnv_endian_pass_time( data );
    data += sizeof(pass_time);

    cv_cnv_endian_scan_deadtime( data );
    data += sizeof(scan_deadtime);

    cv_cnv_endian_pw_gxwl1( data );
    data += sizeof(pw_gxwl1);

    cv_cnv_endian_pw_gxwl2( data );
    data += sizeof(pw_gxwl2);

    cv_cnv_endian_pw_gxwr1( data );
    data += sizeof(pw_gxwr1);

    cv_cnv_endian_pw_gxwr2( data );
    data += sizeof(pw_gxwr2);

    cv_cnv_endian_pw_gxw_total( data );
    data += sizeof(pw_gxw_total);

    cv_cnv_endian_pass_delay( data );
    data += sizeof(pass_delay);

    cv_cnv_endian_nshots_locks( data );
    data += sizeof(nshots_locks);

    cv_cnv_endian_min_nshots( data );
    data += sizeof(min_nshots);

    cv_cnv_endian_max_nshots( data );
    data += sizeof(max_nshots);

    cv_cnv_endian_da_gyboc( data );
    data += sizeof(da_gyboc);

    cv_cnv_endian_oc_fact( data );
    data += sizeof(oc_fact);

    cv_cnv_endian_oblcorr_on( data );
    data += sizeof(oblcorr_on);

    cv_cnv_endian_oblcorr_perslice( data );
    data += sizeof(oblcorr_perslice);

    cv_cnv_endian_debug_oblcorr( data );
    data += sizeof(debug_oblcorr);

    cv_cnv_endian_bc_delx( data );
    data += sizeof(bc_delx);

    cv_cnv_endian_bc_dely( data );
    data += sizeof(bc_dely);

    cv_cnv_endian_bc_delz( data );
    data += sizeof(bc_delz);

    cv_cnv_endian_cvxfull( data );
    data += sizeof(cvxfull);

    cv_cnv_endian_cvyfull( data );
    data += sizeof(cvyfull);

    cv_cnv_endian_cvzfull( data );
    data += sizeof(cvzfull);

    cv_cnv_endian_bw_flattop( data );
    data += sizeof(bw_flattop);

    cv_cnv_endian_area_usedramp( data );
    data += sizeof(area_usedramp);

    cv_cnv_endian_pw_usedramp( data );
    data += sizeof(pw_usedramp);

    cv_cnv_endian_area_usedtotal( data );
    data += sizeof(area_usedtotal);

    cv_cnv_endian_EZflag( data );
    data += sizeof(EZflag);

    cv_cnv_endian_omega_scale( data );
    data += sizeof(omega_scale);

    cv_cnv_endian_rba_act_start( data );
    data += sizeof(rba_act_start);

    cv_cnv_endian_aps2_rspslq( data );
    data += sizeof(aps2_rspslq);

    cv_cnv_endian_aps2_rspslqb( data );
    data += sizeof(aps2_rspslqb);

    cv_cnv_endian_ghost_check( data );
    data += sizeof(ghost_check);

    cv_cnv_endian_gck_offset_fov( data );
    data += sizeof(gck_offset_fov);

    cv_cnv_endian_irprep_flag( data );
    data += sizeof(irprep_flag);

    cv_cnv_endian_irprep_support( data );
    data += sizeof(irprep_support);

    cv_cnv_endian_enhanced_fat_suppression( data );
    data += sizeof(enhanced_fat_suppression);

    cv_cnv_endian_global_shim_method( data );
    data += sizeof(global_shim_method);

    cv_cnv_endian_d_cf( data );
    data += sizeof(d_cf);

    cv_cnv_endian_rt_opphases( data );
    data += sizeof(rt_opphases);

    cv_cnv_endian_debugileave( data );
    data += sizeof(debugileave);

    cv_cnv_endian_rup_factor( data );
    data += sizeof(rup_factor);

    cv_cnv_endian_min_phasefov( data );
    data += sizeof(min_phasefov);

    cv_cnv_endian_core_time( data );
    data += sizeof(core_time);

    cv_cnv_endian_override_fatsat_high_weight( data );
    data += sizeof(override_fatsat_high_weight);

    cv_cnv_endian_scale_all( data );
    data += sizeof(scale_all);

    cv_cnv_endian_default_bvalue( data );
    data += sizeof(default_bvalue);

    cv_cnv_endian_default_difnex( data );
    data += sizeof(default_difnex);

    cv_cnv_endian_use_phygrad( data );
    data += sizeof(use_phygrad);

    cv_cnv_endian_total_difnex( data );
    data += sizeof(total_difnex);

    cv_cnv_endian_max_difnex( data );
    data += sizeof(max_difnex);

    cv_cnv_endian_max_nex( data );
    data += sizeof(max_nex);

    cv_cnv_endian_max_bval( data );
    data += sizeof(max_bval);

    cv_cnv_endian_gradopt_diffall( data );
    data += sizeof(gradopt_diffall);

    cv_cnv_endian_ADC_warning_flag( data );
    data += sizeof(ADC_warning_flag);

    cv_cnv_endian_edwi_extra_time( data );
    data += sizeof(edwi_extra_time);

    cv_cnv_endian_bigpat_warning_flag( data );
    data += sizeof(bigpat_warning_flag);

    cv_cnv_endian_avg_bval( data );
    data += sizeof(avg_bval);

    cv_cnv_endian_max_difnex_limit( data );
    data += sizeof(max_difnex_limit);

    cv_cnv_endian_syndwi_flag( data );
    data += sizeof(syndwi_flag);

    cv_cnv_endian_prescribed_max_bval( data );
    data += sizeof(prescribed_max_bval);

    cv_cnv_endian_prescribed_min_bval( data );
    data += sizeof(prescribed_min_bval);

    cv_cnv_endian_prescribed_bval_range( data );
    data += sizeof(prescribed_bval_range);

    cv_cnv_endian_fullk_nframes( data );
    data += sizeof(fullk_nframes);

    cv_cnv_endian_xfd_power_limit( data );
    data += sizeof(xfd_power_limit);

    cv_cnv_endian_xfd_temp_limit( data );
    data += sizeof(xfd_temp_limit);

    cv_cnv_endian_TGenh( data );
    data += sizeof(TGenh);

    cv_cnv_endian_vrgf_bwctrl( data );
    data += sizeof(vrgf_bwctrl);

    cv_cnv_endian_ref_in_scan_flag( data );
    data += sizeof(ref_in_scan_flag);

    cv_cnv_endian_refless_option( data );
    data += sizeof(refless_option);

    cv_cnv_endian_ref_dda( data );
    data += sizeof(ref_dda);

    cv_cnv_endian_scan_dda( data );
    data += sizeof(scan_dda);

    cv_cnv_endian_pc_enh( data );
    data += sizeof(pc_enh);

    cv_cnv_endian_ref_volrecvcoil_flag( data );
    data += sizeof(ref_volrecvcoil_flag);

    cv_cnv_endian_hopc_flag( data );
    data += sizeof(hopc_flag);

    cv_cnv_endian_diff_order_flag( data );
    data += sizeof(diff_order_flag);

    cv_cnv_endian_diff_order_debug( data );
    data += sizeof(diff_order_debug);

    cv_cnv_endian_diff_order_verify( data );
    data += sizeof(diff_order_verify);

    cv_cnv_endian_diff_order_nslices( data );
    data += sizeof(diff_order_nslices);

    cv_cnv_endian_diff_order_size( data );
    data += sizeof(diff_order_size);

    cv_cnv_endian_diff_pass_counter( data );
    data += sizeof(diff_pass_counter);

    cv_cnv_endian_diff_pass_counter_save( data );
    data += sizeof(diff_pass_counter_save);

    cv_cnv_endian_skip_ir( data );
    data += sizeof(skip_ir);

    cv_cnv_endian_num_iters( data );
    data += sizeof(num_iters);

    cv_cnv_endian_dti_dse_ecoon_scaling_factor( data );
    data += sizeof(dti_dse_ecoon_scaling_factor);

    cv_cnv_endian_dti_sse_ecoon_scaling_factor( data );
    data += sizeof(dti_sse_ecoon_scaling_factor);

    cv_cnv_endian_dti_sse_ecooff_scaling_factor( data );
    data += sizeof(dti_sse_ecooff_scaling_factor);

    cv_cnv_endian_dwi_single_all_dse_ecoon_scaling_factor( data );
    data += sizeof(dwi_single_all_dse_ecoon_scaling_factor);

    cv_cnv_endian_dwi_single_all_sse_ecoon_scaling_factor( data );
    data += sizeof(dwi_single_all_sse_ecoon_scaling_factor);

    cv_cnv_endian_dwi_3in1_dse_ecoon_scaling_factor( data );
    data += sizeof(dwi_3in1_dse_ecoon_scaling_factor);

    cv_cnv_endian_k15_system_flag( data );
    data += sizeof(k15_system_flag);

    cv_cnv_endian_hoecc_flag( data );
    data += sizeof(hoecc_flag);

    cv_cnv_endian_hoecc_psd_flag( data );
    data += sizeof(hoecc_psd_flag);

    cv_cnv_endian_hoecc_recon_flag( data );
    data += sizeof(hoecc_recon_flag);

    cv_cnv_endian_hoecc_debug( data );
    data += sizeof(hoecc_debug);

    cv_cnv_endian_hoecc_support( data );
    data += sizeof(hoecc_support);

    cv_cnv_endian_hoecc_enable( data );
    data += sizeof(hoecc_enable);

    cv_cnv_endian_necho_before_te( data );
    data += sizeof(necho_before_te);

    cv_cnv_endian_psd_per_echo_corr( data );
    data += sizeof(psd_per_echo_corr);

    cv_cnv_endian_read_corr_option( data );
    data += sizeof(read_corr_option);

    cv_cnv_endian_psd_debug_echo_index( data );
    data += sizeof(psd_debug_echo_index);

    cv_cnv_endian_psd_echo_for_debug( data );
    data += sizeof(psd_echo_for_debug);

    cv_cnv_endian_psd_ileave_for_debug( data );
    data += sizeof(psd_ileave_for_debug);

    cv_cnv_endian_psd_slice_for_debug( data );
    data += sizeof(psd_slice_for_debug);

    cv_cnv_endian_hoec_cal_data_sign( data );
    data += sizeof(hoec_cal_data_sign);

    cv_cnv_endian_hoecc_manual_mode_warning_flag( data );
    data += sizeof(hoecc_manual_mode_warning_flag);

    cv_cnv_endian_hoecc_manual_mode_psd_override_flag( data );
    data += sizeof(hoecc_manual_mode_psd_override_flag);

    cv_cnv_endian_muse_flag( data );
    data += sizeof(muse_flag);

    cv_cnv_endian_muse_support( data );
    data += sizeof(muse_support);

    cv_cnv_endian_epi_srderate_factor( data );
    data += sizeof(epi_srderate_factor);

    cv_cnv_endian_epi_loggrd_glim_flag( data );
    data += sizeof(epi_loggrd_glim_flag);

    cv_cnv_endian_epi_loggrd_glim( data );
    data += sizeof(epi_loggrd_glim);

    cv_cnv_endian_adaptive_mpg_glim_flag( data );
    data += sizeof(adaptive_mpg_glim_flag);

    cv_cnv_endian_adaptive_mpg_glim( data );
    data += sizeof(adaptive_mpg_glim);

    cv_cnv_endian_avmaxpasses( data );
    data += sizeof(avmaxpasses);

    cv_cnv_endian_nav_image_interval( data );
    data += sizeof(nav_image_interval);

    cv_cnv_endian_focus_B0_robust_mode( data );
    data += sizeof(focus_B0_robust_mode);

    cv_cnv_endian_focus_unwanted_delta_f( data );
    data += sizeof(focus_unwanted_delta_f);

    cv_cnv_endian_eco_mpg_support( data );
    data += sizeof(eco_mpg_support);

    cv_cnv_endian_eco_mpg_flag( data );
    data += sizeof(eco_mpg_flag);

    cv_cnv_endian_mpg_opt_flag( data );
    data += sizeof(mpg_opt_flag);

    cv_cnv_endian_dse_enh_flag( data );
    data += sizeof(dse_enh_flag);

    cv_cnv_endian_dse_opt_flag( data );
    data += sizeof(dse_opt_flag);

    cv_cnv_endian_bval_arbitrary_flag( data );
    data += sizeof(bval_arbitrary_flag);

    cv_cnv_endian_pw_d1( data );
    data += sizeof(pw_d1);

    cv_cnv_endian_pw_d2( data );
    data += sizeof(pw_d2);

    cv_cnv_endian_b_tol( data );
    data += sizeof(b_tol);

    cv_cnv_endian_mpg_opt_margin( data );
    data += sizeof(mpg_opt_margin);

    cv_cnv_endian_mpg_opt_derate( data );
    data += sizeof(mpg_opt_derate);

    cv_cnv_endian_mpg_opt_glimit_orig( data );
    data += sizeof(mpg_opt_glimit_orig);

    cv_cnv_endian_fskillercycling( data );
    data += sizeof(fskillercycling);

    cv_cnv_endian_nav_type( data );
    data += sizeof(nav_type);

    cv_cnv_endian_nav_sr( data );
    data += sizeof(nav_sr);

    cv_cnv_endian_nav_window( data );
    data += sizeof(nav_window);

    cv_cnv_endian_navigator_flag( data );
    data += sizeof(navigator_flag);

    cv_cnv_endian_nav_ss( data );
    data += sizeof(nav_ss);

    cv_cnv_endian_nav_dda( data );
    data += sizeof(nav_dda);

    cv_cnv_endian_nav_pause_after_prescan( data );
    data += sizeof(nav_pause_after_prescan);

    cv_cnv_endian_enhanced_nav_flag( data );
    data += sizeof(enhanced_nav_flag);

    cv_cnv_endian_skip_navigator_prescan( data );
    data += sizeof(skip_navigator_prescan);

    cv_cnv_endian_nav_test( data );
    data += sizeof(nav_test);

    cv_cnv_endian_nav_alg( data );
    data += sizeof(nav_alg);

    cv_cnv_endian_nav_dir( data );
    data += sizeof(nav_dir);

    cv_cnv_endian_nav_channel( data );
    data += sizeof(nav_channel);

    cv_cnv_endian_nav_coilsel_index( data );
    data += sizeof(nav_coilsel_index);

    cv_cnv_endian_nav_normalization( data );
    data += sizeof(nav_normalization);

    cv_cnv_endian_mon_navgs( data );
    data += sizeof(mon_navgs);

    cv_cnv_endian_hist_wait_time( data );
    data += sizeof(hist_wait_time);

    cv_cnv_endian_nav_dump_time( data );
    data += sizeof(nav_dump_time);

    cv_cnv_endian_curr_eff( data );
    data += sizeof(curr_eff);

    cv_cnv_endian_monrot_phi( data );
    data += sizeof(monrot_phi);

    cv_cnv_endian_navtrig_flag( data );
    data += sizeof(navtrig_flag);

    cv_cnv_endian_navgate_flag( data );
    data += sizeof(navgate_flag);

    cv_cnv_endian_calc_rate( data );
    data += sizeof(calc_rate);

    cv_cnv_endian_num_slice_rr( data );
    data += sizeof(num_slice_rr);

    cv_cnv_endian_nav_prescan_tr( data );
    data += sizeof(nav_prescan_tr);

    cv_cnv_endian_nav_coilsel_tr( data );
    data += sizeof(nav_coilsel_tr);

    cv_cnv_endian_mon_tr_nav( data );
    data += sizeof(mon_tr_nav);

    cv_cnv_endian_mon_tr_wait( data );
    data += sizeof(mon_tr_wait);

    cv_cnv_endian_navtrig_target_tr( data );
    data += sizeof(navtrig_target_tr);

    cv_cnv_endian_navgate_target_tr( data );
    data += sizeof(navgate_target_tr);

    cv_cnv_endian_wait_pts( data );
    data += sizeof(wait_pts);

    cv_cnv_endian_navtrig_waittime( data );
    data += sizeof(navtrig_waittime);

    cv_cnv_endian_navtrig_factor( data );
    data += sizeof(navtrig_factor);

    cv_cnv_endian_nav_scantime_refresh( data );
    data += sizeof(nav_scantime_refresh);

    cv_cnv_endian_nav_scantime_refresh_pts( data );
    data += sizeof(nav_scantime_refresh_pts);

    cv_cnv_endian_nav_save_raw_data( data );
    data += sizeof(nav_save_raw_data);

    cv_cnv_endian_nav_debug_flag( data );
    data += sizeof(nav_debug_flag);

    cv_cnv_endian_nav_timing_flag( data );
    data += sizeof(nav_timing_flag);

    cv_cnv_endian_navigatorCYL_flag( data );
    data += sizeof(navigatorCYL_flag);

    cv_cnv_endian_tlead_cylnav( data );
    data += sizeof(tlead_cylnav);

    cv_cnv_endian_navsat_flag( data );
    data += sizeof(navsat_flag);

    cv_cnv_endian_flip_rfcylr_navsat( data );
    data += sizeof(flip_rfcylr_navsat);

    cv_cnv_endian_flip_rfmon_navsat( data );
    data += sizeof(flip_rfmon_navsat);

    cv_cnv_endian_navscale( data );
    data += sizeof(navscale);

    cv_cnv_endian_flip_rfcylr( data );
    data += sizeof(flip_rfcylr);

    cv_cnv_endian_flip_rfcylrtipup( data );
    data += sizeof(flip_rfcylrtipup);

    cv_cnv_endian_cylr_xoff( data );
    data += sizeof(cylr_xoff);

    cv_cnv_endian_cylr_yoff( data );
    data += sizeof(cylr_yoff);

    cv_cnv_endian_cylr_manoff( data );
    data += sizeof(cylr_manoff);

    cv_cnv_endian_cylr_skew( data );
    data += sizeof(cylr_skew);

    cv_cnv_endian_cylr_dtheta( data );
    data += sizeof(cylr_dtheta);

    cv_cnv_endian_act_te_cylr( data );
    data += sizeof(act_te_cylr);

    cv_cnv_endian_t_exa_cylr( data );
    data += sizeof(t_exa_cylr);

    cv_cnv_endian_t_exb_cylr( data );
    data += sizeof(t_exb_cylr);

    cv_cnv_endian_t_rdb_cylr( data );
    data += sizeof(t_rdb_cylr);

    cv_cnv_endian_rtp_mode_for_nav_dynaplan( data );
    data += sizeof(rtp_mode_for_nav_dynaplan);

    cv_cnv_endian_a_gxwksp( data );
    data += sizeof(a_gxwksp);

    cv_cnv_endian_ia_gxwksp( data );
    data += sizeof(ia_gxwksp);

    cv_cnv_endian_pw_gxwkspa( data );
    data += sizeof(pw_gxwkspa);

    cv_cnv_endian_pw_gxwkspd( data );
    data += sizeof(pw_gxwkspd);

    cv_cnv_endian_pw_gxwksp( data );
    data += sizeof(pw_gxwksp);

    cv_cnv_endian_wg_gxwksp( data );
    data += sizeof(wg_gxwksp);

    cv_cnv_endian_a_gywksp( data );
    data += sizeof(a_gywksp);

    cv_cnv_endian_ia_gywksp( data );
    data += sizeof(ia_gywksp);

    cv_cnv_endian_pw_gywkspa( data );
    data += sizeof(pw_gywkspa);

    cv_cnv_endian_pw_gywkspd( data );
    data += sizeof(pw_gywkspd);

    cv_cnv_endian_pw_gywksp( data );
    data += sizeof(pw_gywksp);

    cv_cnv_endian_wg_gywksp( data );
    data += sizeof(wg_gywksp);

    cv_cnv_endian_a_gzwksp( data );
    data += sizeof(a_gzwksp);

    cv_cnv_endian_ia_gzwksp( data );
    data += sizeof(ia_gzwksp);

    cv_cnv_endian_pw_gzwkspa( data );
    data += sizeof(pw_gzwkspa);

    cv_cnv_endian_pw_gzwkspd( data );
    data += sizeof(pw_gzwkspd);

    cv_cnv_endian_pw_gzwksp( data );
    data += sizeof(pw_gzwksp);

    cv_cnv_endian_wg_gzwksp( data );
    data += sizeof(wg_gzwksp);

    cv_cnv_endian_a_gyex1( data );
    data += sizeof(a_gyex1);

    cv_cnv_endian_ia_gyex1( data );
    data += sizeof(ia_gyex1);

    cv_cnv_endian_pw_gyex1a( data );
    data += sizeof(pw_gyex1a);

    cv_cnv_endian_pw_gyex1d( data );
    data += sizeof(pw_gyex1d);

    cv_cnv_endian_pw_gyex1( data );
    data += sizeof(pw_gyex1);

    cv_cnv_endian_wg_gyex1( data );
    data += sizeof(wg_gyex1);

    cv_cnv_endian_res_omthrf2( data );
    data += sizeof(res_omthrf2);

    cv_cnv_endian_res_omthrf2left( data );
    data += sizeof(res_omthrf2left);

    cv_cnv_endian_res_omthrf2right( data );
    data += sizeof(res_omthrf2right);

    cv_cnv_endian_res_rf2_gradient_waveform( data );
    data += sizeof(res_rf2_gradient_waveform);

    cv_cnv_endian_wg_rf2_gradient_waveform( data );
    data += sizeof(wg_rf2_gradient_waveform);

    cv_cnv_endian_ia_dynr1( data );
    data += sizeof(ia_dynr1);

    cv_cnv_endian_pw_x_td0( data );
    data += sizeof(pw_x_td0);

    cv_cnv_endian_wg_x_td0( data );
    data += sizeof(wg_x_td0);

    cv_cnv_endian_pw_y_td0( data );
    data += sizeof(pw_y_td0);

    cv_cnv_endian_wg_y_td0( data );
    data += sizeof(wg_y_td0);

    cv_cnv_endian_pw_z_td0( data );
    data += sizeof(pw_z_td0);

    cv_cnv_endian_wg_z_td0( data );
    data += sizeof(wg_z_td0);

    cv_cnv_endian_pw_rho_td0( data );
    data += sizeof(pw_rho_td0);

    cv_cnv_endian_wg_rho_td0( data );
    data += sizeof(wg_rho_td0);

    cv_cnv_endian_pw_theta_td0( data );
    data += sizeof(pw_theta_td0);

    cv_cnv_endian_wg_theta_td0( data );
    data += sizeof(wg_theta_td0);

    cv_cnv_endian_pw_omega_td0( data );
    data += sizeof(pw_omega_td0);

    cv_cnv_endian_wg_omega_td0( data );
    data += sizeof(wg_omega_td0);

    cv_cnv_endian_pw_ssp_td0( data );
    data += sizeof(pw_ssp_td0);

    cv_cnv_endian_wg_ssp_td0( data );
    data += sizeof(wg_ssp_td0);

    cv_cnv_endian_a_gzrf1( data );
    data += sizeof(a_gzrf1);

    cv_cnv_endian_ia_gzrf1( data );
    data += sizeof(ia_gzrf1);

    cv_cnv_endian_pw_gzrf1a( data );
    data += sizeof(pw_gzrf1a);

    cv_cnv_endian_pw_gzrf1d( data );
    data += sizeof(pw_gzrf1d);

    cv_cnv_endian_pw_gzrf1( data );
    data += sizeof(pw_gzrf1);

    cv_cnv_endian_res_gzrf1( data );
    data += sizeof(res_gzrf1);

    cv_cnv_endian_a_rf1( data );
    data += sizeof(a_rf1);

    cv_cnv_endian_ia_rf1( data );
    data += sizeof(ia_rf1);

    cv_cnv_endian_pw_rf1( data );
    data += sizeof(pw_rf1);

    cv_cnv_endian_res_rf1( data );
    data += sizeof(res_rf1);

    cv_cnv_endian_cyc_rf1( data );
    data += sizeof(cyc_rf1);

    cv_cnv_endian_off_rf1( data );
    data += sizeof(off_rf1);

    cv_cnv_endian_alpha_rf1( data );
    data += sizeof(alpha_rf1);

    cv_cnv_endian_thk_rf1( data );
    data += sizeof(thk_rf1);

    cv_cnv_endian_gscale_rf1( data );
    data += sizeof(gscale_rf1);

    cv_cnv_endian_flip_rf1( data );
    data += sizeof(flip_rf1);

    cv_cnv_endian_a_thetarf1( data );
    data += sizeof(a_thetarf1);

    cv_cnv_endian_ia_thetarf1( data );
    data += sizeof(ia_thetarf1);

    cv_cnv_endian_pw_thetarf1( data );
    data += sizeof(pw_thetarf1);

    cv_cnv_endian_res_thetarf1( data );
    data += sizeof(res_thetarf1);

    cv_cnv_endian_off_thetarf1( data );
    data += sizeof(off_thetarf1);

    cv_cnv_endian_wg_rf1( data );
    data += sizeof(wg_rf1);

    cv_cnv_endian_a_gzrf2( data );
    data += sizeof(a_gzrf2);

    cv_cnv_endian_ia_gzrf2( data );
    data += sizeof(ia_gzrf2);

    cv_cnv_endian_pw_gzrf2a( data );
    data += sizeof(pw_gzrf2a);

    cv_cnv_endian_pw_gzrf2d( data );
    data += sizeof(pw_gzrf2d);

    cv_cnv_endian_pw_gzrf2( data );
    data += sizeof(pw_gzrf2);

    cv_cnv_endian_a_rf2( data );
    data += sizeof(a_rf2);

    cv_cnv_endian_ia_rf2( data );
    data += sizeof(ia_rf2);

    cv_cnv_endian_pw_rf2( data );
    data += sizeof(pw_rf2);

    cv_cnv_endian_res_rf2( data );
    data += sizeof(res_rf2);

    cv_cnv_endian_cyc_rf2( data );
    data += sizeof(cyc_rf2);

    cv_cnv_endian_off_rf2( data );
    data += sizeof(off_rf2);

    cv_cnv_endian_alpha_rf2( data );
    data += sizeof(alpha_rf2);

    cv_cnv_endian_thk_rf2( data );
    data += sizeof(thk_rf2);

    cv_cnv_endian_gscale_rf2( data );
    data += sizeof(gscale_rf2);

    cv_cnv_endian_flip_rf2( data );
    data += sizeof(flip_rf2);

    cv_cnv_endian_wg_rf2( data );
    data += sizeof(wg_rf2);

    cv_cnv_endian_a_gzrf2left( data );
    data += sizeof(a_gzrf2left);

    cv_cnv_endian_ia_gzrf2left( data );
    data += sizeof(ia_gzrf2left);

    cv_cnv_endian_pw_gzrf2lefta( data );
    data += sizeof(pw_gzrf2lefta);

    cv_cnv_endian_pw_gzrf2leftd( data );
    data += sizeof(pw_gzrf2leftd);

    cv_cnv_endian_pw_gzrf2left( data );
    data += sizeof(pw_gzrf2left);

    cv_cnv_endian_a_rf2left( data );
    data += sizeof(a_rf2left);

    cv_cnv_endian_ia_rf2left( data );
    data += sizeof(ia_rf2left);

    cv_cnv_endian_pw_rf2left( data );
    data += sizeof(pw_rf2left);

    cv_cnv_endian_res_rf2left( data );
    data += sizeof(res_rf2left);

    cv_cnv_endian_cyc_rf2left( data );
    data += sizeof(cyc_rf2left);

    cv_cnv_endian_off_rf2left( data );
    data += sizeof(off_rf2left);

    cv_cnv_endian_alpha_rf2left( data );
    data += sizeof(alpha_rf2left);

    cv_cnv_endian_thk_rf2left( data );
    data += sizeof(thk_rf2left);

    cv_cnv_endian_gscale_rf2left( data );
    data += sizeof(gscale_rf2left);

    cv_cnv_endian_flip_rf2left( data );
    data += sizeof(flip_rf2left);

    cv_cnv_endian_wg_rf2left( data );
    data += sizeof(wg_rf2left);

    cv_cnv_endian_a_gzrf2right( data );
    data += sizeof(a_gzrf2right);

    cv_cnv_endian_ia_gzrf2right( data );
    data += sizeof(ia_gzrf2right);

    cv_cnv_endian_pw_gzrf2righta( data );
    data += sizeof(pw_gzrf2righta);

    cv_cnv_endian_pw_gzrf2rightd( data );
    data += sizeof(pw_gzrf2rightd);

    cv_cnv_endian_pw_gzrf2right( data );
    data += sizeof(pw_gzrf2right);

    cv_cnv_endian_a_rf2right( data );
    data += sizeof(a_rf2right);

    cv_cnv_endian_ia_rf2right( data );
    data += sizeof(ia_rf2right);

    cv_cnv_endian_pw_rf2right( data );
    data += sizeof(pw_rf2right);

    cv_cnv_endian_res_rf2right( data );
    data += sizeof(res_rf2right);

    cv_cnv_endian_cyc_rf2right( data );
    data += sizeof(cyc_rf2right);

    cv_cnv_endian_off_rf2right( data );
    data += sizeof(off_rf2right);

    cv_cnv_endian_alpha_rf2right( data );
    data += sizeof(alpha_rf2right);

    cv_cnv_endian_thk_rf2right( data );
    data += sizeof(thk_rf2right);

    cv_cnv_endian_gscale_rf2right( data );
    data += sizeof(gscale_rf2right);

    cv_cnv_endian_flip_rf2right( data );
    data += sizeof(flip_rf2right);

    cv_cnv_endian_wg_rf2right( data );
    data += sizeof(wg_rf2right);

    cv_cnv_endian_res_rf2se1b4( data );
    data += sizeof(res_rf2se1b4);

    cv_cnv_endian_wg_rf2se1b4( data );
    data += sizeof(wg_rf2se1b4);

    cv_cnv_endian_a_gyrf2iv( data );
    data += sizeof(a_gyrf2iv);

    cv_cnv_endian_ia_gyrf2iv( data );
    data += sizeof(ia_gyrf2iv);

    cv_cnv_endian_pw_gyrf2iva( data );
    data += sizeof(pw_gyrf2iva);

    cv_cnv_endian_pw_gyrf2ivd( data );
    data += sizeof(pw_gyrf2ivd);

    cv_cnv_endian_pw_gyrf2iv( data );
    data += sizeof(pw_gyrf2iv);

    cv_cnv_endian_wg_gyrf2iv( data );
    data += sizeof(wg_gyrf2iv);

    cv_cnv_endian_a_gzrf2l1( data );
    data += sizeof(a_gzrf2l1);

    cv_cnv_endian_ia_gzrf2l1( data );
    data += sizeof(ia_gzrf2l1);

    cv_cnv_endian_pw_gzrf2l1a( data );
    data += sizeof(pw_gzrf2l1a);

    cv_cnv_endian_pw_gzrf2l1d( data );
    data += sizeof(pw_gzrf2l1d);

    cv_cnv_endian_pw_gzrf2l1( data );
    data += sizeof(pw_gzrf2l1);

    cv_cnv_endian_wg_gzrf2l1( data );
    data += sizeof(wg_gzrf2l1);

    cv_cnv_endian_a_gzrf2r1( data );
    data += sizeof(a_gzrf2r1);

    cv_cnv_endian_ia_gzrf2r1( data );
    data += sizeof(ia_gzrf2r1);

    cv_cnv_endian_pw_gzrf2r1a( data );
    data += sizeof(pw_gzrf2r1a);

    cv_cnv_endian_pw_gzrf2r1d( data );
    data += sizeof(pw_gzrf2r1d);

    cv_cnv_endian_pw_gzrf2r1( data );
    data += sizeof(pw_gzrf2r1);

    cv_cnv_endian_wg_gzrf2r1( data );
    data += sizeof(wg_gzrf2r1);

    cv_cnv_endian_a_xgradCrusherL( data );
    data += sizeof(a_xgradCrusherL);

    cv_cnv_endian_ia_xgradCrusherL( data );
    data += sizeof(ia_xgradCrusherL);

    cv_cnv_endian_pw_xgradCrusherLa( data );
    data += sizeof(pw_xgradCrusherLa);

    cv_cnv_endian_pw_xgradCrusherLd( data );
    data += sizeof(pw_xgradCrusherLd);

    cv_cnv_endian_pw_xgradCrusherL( data );
    data += sizeof(pw_xgradCrusherL);

    cv_cnv_endian_wg_xgradCrusherL( data );
    data += sizeof(wg_xgradCrusherL);

    cv_cnv_endian_a_xgradCrusherR( data );
    data += sizeof(a_xgradCrusherR);

    cv_cnv_endian_ia_xgradCrusherR( data );
    data += sizeof(ia_xgradCrusherR);

    cv_cnv_endian_pw_xgradCrusherRa( data );
    data += sizeof(pw_xgradCrusherRa);

    cv_cnv_endian_pw_xgradCrusherRd( data );
    data += sizeof(pw_xgradCrusherRd);

    cv_cnv_endian_pw_xgradCrusherR( data );
    data += sizeof(pw_xgradCrusherR);

    cv_cnv_endian_wg_xgradCrusherR( data );
    data += sizeof(wg_xgradCrusherR);

    cv_cnv_endian_a_ygradCrusherL( data );
    data += sizeof(a_ygradCrusherL);

    cv_cnv_endian_ia_ygradCrusherL( data );
    data += sizeof(ia_ygradCrusherL);

    cv_cnv_endian_pw_ygradCrusherLa( data );
    data += sizeof(pw_ygradCrusherLa);

    cv_cnv_endian_pw_ygradCrusherLd( data );
    data += sizeof(pw_ygradCrusherLd);

    cv_cnv_endian_pw_ygradCrusherL( data );
    data += sizeof(pw_ygradCrusherL);

    cv_cnv_endian_wg_ygradCrusherL( data );
    data += sizeof(wg_ygradCrusherL);

    cv_cnv_endian_a_ygradCrusherR( data );
    data += sizeof(a_ygradCrusherR);

    cv_cnv_endian_ia_ygradCrusherR( data );
    data += sizeof(ia_ygradCrusherR);

    cv_cnv_endian_pw_ygradCrusherRa( data );
    data += sizeof(pw_ygradCrusherRa);

    cv_cnv_endian_pw_ygradCrusherRd( data );
    data += sizeof(pw_ygradCrusherRd);

    cv_cnv_endian_pw_ygradCrusherR( data );
    data += sizeof(pw_ygradCrusherR);

    cv_cnv_endian_wg_ygradCrusherR( data );
    data += sizeof(wg_ygradCrusherR);

    cv_cnv_endian_a_gzrf2leftl1( data );
    data += sizeof(a_gzrf2leftl1);

    cv_cnv_endian_ia_gzrf2leftl1( data );
    data += sizeof(ia_gzrf2leftl1);

    cv_cnv_endian_pw_gzrf2leftl1a( data );
    data += sizeof(pw_gzrf2leftl1a);

    cv_cnv_endian_pw_gzrf2leftl1d( data );
    data += sizeof(pw_gzrf2leftl1d);

    cv_cnv_endian_pw_gzrf2leftl1( data );
    data += sizeof(pw_gzrf2leftl1);

    cv_cnv_endian_wg_gzrf2leftl1( data );
    data += sizeof(wg_gzrf2leftl1);

    cv_cnv_endian_a_gzrf2leftr1( data );
    data += sizeof(a_gzrf2leftr1);

    cv_cnv_endian_ia_gzrf2leftr1( data );
    data += sizeof(ia_gzrf2leftr1);

    cv_cnv_endian_pw_gzrf2leftr1a( data );
    data += sizeof(pw_gzrf2leftr1a);

    cv_cnv_endian_pw_gzrf2leftr1d( data );
    data += sizeof(pw_gzrf2leftr1d);

    cv_cnv_endian_pw_gzrf2leftr1( data );
    data += sizeof(pw_gzrf2leftr1);

    cv_cnv_endian_wg_gzrf2leftr1( data );
    data += sizeof(wg_gzrf2leftr1);

    cv_cnv_endian_a_gzrf2rightl1( data );
    data += sizeof(a_gzrf2rightl1);

    cv_cnv_endian_ia_gzrf2rightl1( data );
    data += sizeof(ia_gzrf2rightl1);

    cv_cnv_endian_pw_gzrf2rightl1a( data );
    data += sizeof(pw_gzrf2rightl1a);

    cv_cnv_endian_pw_gzrf2rightl1d( data );
    data += sizeof(pw_gzrf2rightl1d);

    cv_cnv_endian_pw_gzrf2rightl1( data );
    data += sizeof(pw_gzrf2rightl1);

    cv_cnv_endian_wg_gzrf2rightl1( data );
    data += sizeof(wg_gzrf2rightl1);

    cv_cnv_endian_a_gzrf2rightr1( data );
    data += sizeof(a_gzrf2rightr1);

    cv_cnv_endian_ia_gzrf2rightr1( data );
    data += sizeof(ia_gzrf2rightr1);

    cv_cnv_endian_pw_gzrf2rightr1a( data );
    data += sizeof(pw_gzrf2rightr1a);

    cv_cnv_endian_pw_gzrf2rightr1d( data );
    data += sizeof(pw_gzrf2rightr1d);

    cv_cnv_endian_pw_gzrf2rightr1( data );
    data += sizeof(pw_gzrf2rightr1);

    cv_cnv_endian_wg_gzrf2rightr1( data );
    data += sizeof(wg_gzrf2rightr1);

    cv_cnv_endian_a_xgradRightCrusherL( data );
    data += sizeof(a_xgradRightCrusherL);

    cv_cnv_endian_ia_xgradRightCrusherL( data );
    data += sizeof(ia_xgradRightCrusherL);

    cv_cnv_endian_pw_xgradRightCrusherLa( data );
    data += sizeof(pw_xgradRightCrusherLa);

    cv_cnv_endian_pw_xgradRightCrusherLd( data );
    data += sizeof(pw_xgradRightCrusherLd);

    cv_cnv_endian_pw_xgradRightCrusherL( data );
    data += sizeof(pw_xgradRightCrusherL);

    cv_cnv_endian_wg_xgradRightCrusherL( data );
    data += sizeof(wg_xgradRightCrusherL);

    cv_cnv_endian_a_xgradRightCrusherR( data );
    data += sizeof(a_xgradRightCrusherR);

    cv_cnv_endian_ia_xgradRightCrusherR( data );
    data += sizeof(ia_xgradRightCrusherR);

    cv_cnv_endian_pw_xgradRightCrusherRa( data );
    data += sizeof(pw_xgradRightCrusherRa);

    cv_cnv_endian_pw_xgradRightCrusherRd( data );
    data += sizeof(pw_xgradRightCrusherRd);

    cv_cnv_endian_pw_xgradRightCrusherR( data );
    data += sizeof(pw_xgradRightCrusherR);

    cv_cnv_endian_wg_xgradRightCrusherR( data );
    data += sizeof(wg_xgradRightCrusherR);

    cv_cnv_endian_a_ygradRightCrusherL( data );
    data += sizeof(a_ygradRightCrusherL);

    cv_cnv_endian_ia_ygradRightCrusherL( data );
    data += sizeof(ia_ygradRightCrusherL);

    cv_cnv_endian_pw_ygradRightCrusherLa( data );
    data += sizeof(pw_ygradRightCrusherLa);

    cv_cnv_endian_pw_ygradRightCrusherLd( data );
    data += sizeof(pw_ygradRightCrusherLd);

    cv_cnv_endian_pw_ygradRightCrusherL( data );
    data += sizeof(pw_ygradRightCrusherL);

    cv_cnv_endian_wg_ygradRightCrusherL( data );
    data += sizeof(wg_ygradRightCrusherL);

    cv_cnv_endian_a_ygradRightCrusherR( data );
    data += sizeof(a_ygradRightCrusherR);

    cv_cnv_endian_ia_ygradRightCrusherR( data );
    data += sizeof(ia_ygradRightCrusherR);

    cv_cnv_endian_pw_ygradRightCrusherRa( data );
    data += sizeof(pw_ygradRightCrusherRa);

    cv_cnv_endian_pw_ygradRightCrusherRd( data );
    data += sizeof(pw_ygradRightCrusherRd);

    cv_cnv_endian_pw_ygradRightCrusherR( data );
    data += sizeof(pw_ygradRightCrusherR);

    cv_cnv_endian_wg_ygradRightCrusherR( data );
    data += sizeof(wg_ygradRightCrusherR);

    cv_cnv_endian_a_xgradLeftCrusherL( data );
    data += sizeof(a_xgradLeftCrusherL);

    cv_cnv_endian_ia_xgradLeftCrusherL( data );
    data += sizeof(ia_xgradLeftCrusherL);

    cv_cnv_endian_pw_xgradLeftCrusherLa( data );
    data += sizeof(pw_xgradLeftCrusherLa);

    cv_cnv_endian_pw_xgradLeftCrusherLd( data );
    data += sizeof(pw_xgradLeftCrusherLd);

    cv_cnv_endian_pw_xgradLeftCrusherL( data );
    data += sizeof(pw_xgradLeftCrusherL);

    cv_cnv_endian_wg_xgradLeftCrusherL( data );
    data += sizeof(wg_xgradLeftCrusherL);

    cv_cnv_endian_a_xgradLeftCrusherR( data );
    data += sizeof(a_xgradLeftCrusherR);

    cv_cnv_endian_ia_xgradLeftCrusherR( data );
    data += sizeof(ia_xgradLeftCrusherR);

    cv_cnv_endian_pw_xgradLeftCrusherRa( data );
    data += sizeof(pw_xgradLeftCrusherRa);

    cv_cnv_endian_pw_xgradLeftCrusherRd( data );
    data += sizeof(pw_xgradLeftCrusherRd);

    cv_cnv_endian_pw_xgradLeftCrusherR( data );
    data += sizeof(pw_xgradLeftCrusherR);

    cv_cnv_endian_wg_xgradLeftCrusherR( data );
    data += sizeof(wg_xgradLeftCrusherR);

    cv_cnv_endian_a_ygradLeftCrusherL( data );
    data += sizeof(a_ygradLeftCrusherL);

    cv_cnv_endian_ia_ygradLeftCrusherL( data );
    data += sizeof(ia_ygradLeftCrusherL);

    cv_cnv_endian_pw_ygradLeftCrusherLa( data );
    data += sizeof(pw_ygradLeftCrusherLa);

    cv_cnv_endian_pw_ygradLeftCrusherLd( data );
    data += sizeof(pw_ygradLeftCrusherLd);

    cv_cnv_endian_pw_ygradLeftCrusherL( data );
    data += sizeof(pw_ygradLeftCrusherL);

    cv_cnv_endian_wg_ygradLeftCrusherL( data );
    data += sizeof(wg_ygradLeftCrusherL);

    cv_cnv_endian_a_ygradLeftCrusherR( data );
    data += sizeof(a_ygradLeftCrusherR);

    cv_cnv_endian_ia_ygradLeftCrusherR( data );
    data += sizeof(ia_ygradLeftCrusherR);

    cv_cnv_endian_pw_ygradLeftCrusherRa( data );
    data += sizeof(pw_ygradLeftCrusherRa);

    cv_cnv_endian_pw_ygradLeftCrusherRd( data );
    data += sizeof(pw_ygradLeftCrusherRd);

    cv_cnv_endian_pw_ygradLeftCrusherR( data );
    data += sizeof(pw_ygradLeftCrusherR);

    cv_cnv_endian_wg_ygradLeftCrusherR( data );
    data += sizeof(wg_ygradLeftCrusherR);

    cv_cnv_endian_a_gxcl( data );
    data += sizeof(a_gxcl);

    cv_cnv_endian_a_gxw( data );
    data += sizeof(a_gxw);

    cv_cnv_endian_a_gxcr( data );
    data += sizeof(a_gxcr);

    cv_cnv_endian_a_gyb( data );
    data += sizeof(a_gyb);

    cv_cnv_endian_a_gzb( data );
    data += sizeof(a_gzb);

    cv_cnv_endian_ia_gxcl( data );
    data += sizeof(ia_gxcl);

    cv_cnv_endian_ia_gxw( data );
    data += sizeof(ia_gxw);

    cv_cnv_endian_ia_gxcr( data );
    data += sizeof(ia_gxcr);

    cv_cnv_endian_ia_gyb( data );
    data += sizeof(ia_gyb);

    cv_cnv_endian_ia_gzb( data );
    data += sizeof(ia_gzb);

    cv_cnv_endian_pw_gxcla( data );
    data += sizeof(pw_gxcla);

    cv_cnv_endian_pw_gxcl( data );
    data += sizeof(pw_gxcl);

    cv_cnv_endian_pw_gxcld( data );
    data += sizeof(pw_gxcld);

    cv_cnv_endian_pw_gxwl( data );
    data += sizeof(pw_gxwl);

    cv_cnv_endian_pw_gxw( data );
    data += sizeof(pw_gxw);

    cv_cnv_endian_pw_gxwr( data );
    data += sizeof(pw_gxwr);

    cv_cnv_endian_pw_gxwad( data );
    data += sizeof(pw_gxwad);

    cv_cnv_endian_pw_gxgap( data );
    data += sizeof(pw_gxgap);

    cv_cnv_endian_pw_gxcra( data );
    data += sizeof(pw_gxcra);

    cv_cnv_endian_pw_gxcr( data );
    data += sizeof(pw_gxcr);

    cv_cnv_endian_pw_gxcrd( data );
    data += sizeof(pw_gxcrd);

    cv_cnv_endian_pw_gyba( data );
    data += sizeof(pw_gyba);

    cv_cnv_endian_pw_gyb( data );
    data += sizeof(pw_gyb);

    cv_cnv_endian_pw_gybd( data );
    data += sizeof(pw_gybd);

    cv_cnv_endian_pw_gzba( data );
    data += sizeof(pw_gzba);

    cv_cnv_endian_pw_gzb( data );
    data += sizeof(pw_gzb);

    cv_cnv_endian_pw_gzbd( data );
    data += sizeof(pw_gzbd);

    cv_cnv_endian_pw_iref_gxwait( data );
    data += sizeof(pw_iref_gxwait);

    cv_cnv_endian_ia_rec_unblank( data );
    data += sizeof(ia_rec_unblank);

    cv_cnv_endian_ia_rec_unblank3( data );
    data += sizeof(ia_rec_unblank3);

    cv_cnv_endian_filter_rtb0echo( data );
    data += sizeof(filter_rtb0echo);

    cv_cnv_endian_ia_rec_unblank2( data );
    data += sizeof(ia_rec_unblank2);

    cv_cnv_endian_a_gxiref1( data );
    data += sizeof(a_gxiref1);

    cv_cnv_endian_ia_gxiref1( data );
    data += sizeof(ia_gxiref1);

    cv_cnv_endian_pw_gxiref1a( data );
    data += sizeof(pw_gxiref1a);

    cv_cnv_endian_pw_gxiref1d( data );
    data += sizeof(pw_gxiref1d);

    cv_cnv_endian_pw_gxiref1( data );
    data += sizeof(pw_gxiref1);

    cv_cnv_endian_wg_gxiref1( data );
    data += sizeof(wg_gxiref1);

    cv_cnv_endian_a_gxirefr( data );
    data += sizeof(a_gxirefr);

    cv_cnv_endian_ia_gxirefr( data );
    data += sizeof(ia_gxirefr);

    cv_cnv_endian_pw_gxirefra( data );
    data += sizeof(pw_gxirefra);

    cv_cnv_endian_pw_gxirefrd( data );
    data += sizeof(pw_gxirefrd);

    cv_cnv_endian_pw_gxirefr( data );
    data += sizeof(pw_gxirefr);

    cv_cnv_endian_wg_gxirefr( data );
    data += sizeof(wg_gxirefr);

    cv_cnv_endian_a_gy1( data );
    data += sizeof(a_gy1);

    cv_cnv_endian_a_gy1a( data );
    data += sizeof(a_gy1a);

    cv_cnv_endian_a_gy1b( data );
    data += sizeof(a_gy1b);

    cv_cnv_endian_ia_gy1( data );
    data += sizeof(ia_gy1);

    cv_cnv_endian_ia_gy1wa( data );
    data += sizeof(ia_gy1wa);

    cv_cnv_endian_ia_gy1wb( data );
    data += sizeof(ia_gy1wb);

    cv_cnv_endian_pw_gy1a( data );
    data += sizeof(pw_gy1a);

    cv_cnv_endian_pw_gy1d( data );
    data += sizeof(pw_gy1d);

    cv_cnv_endian_pw_gy1( data );
    data += sizeof(pw_gy1);

    cv_cnv_endian_wg_gy1( data );
    data += sizeof(wg_gy1);

    cv_cnv_endian_a_gymn2( data );
    data += sizeof(a_gymn2);

    cv_cnv_endian_ia_gymn2( data );
    data += sizeof(ia_gymn2);

    cv_cnv_endian_pw_gymn2a( data );
    data += sizeof(pw_gymn2a);

    cv_cnv_endian_pw_gymn2d( data );
    data += sizeof(pw_gymn2d);

    cv_cnv_endian_pw_gymn2( data );
    data += sizeof(pw_gymn2);

    cv_cnv_endian_wg_gymn2( data );
    data += sizeof(wg_gymn2);

    cv_cnv_endian_a_gymn1( data );
    data += sizeof(a_gymn1);

    cv_cnv_endian_ia_gymn1( data );
    data += sizeof(ia_gymn1);

    cv_cnv_endian_pw_gymn1a( data );
    data += sizeof(pw_gymn1a);

    cv_cnv_endian_pw_gymn1d( data );
    data += sizeof(pw_gymn1d);

    cv_cnv_endian_pw_gymn1( data );
    data += sizeof(pw_gymn1);

    cv_cnv_endian_wg_gymn1( data );
    data += sizeof(wg_gymn1);

    cv_cnv_endian_a_gz1( data );
    data += sizeof(a_gz1);

    cv_cnv_endian_ia_gz1( data );
    data += sizeof(ia_gz1);

    cv_cnv_endian_pw_gz1a( data );
    data += sizeof(pw_gz1a);

    cv_cnv_endian_pw_gz1d( data );
    data += sizeof(pw_gz1d);

    cv_cnv_endian_pw_gz1( data );
    data += sizeof(pw_gz1);

    cv_cnv_endian_wg_gz1( data );
    data += sizeof(wg_gz1);

    cv_cnv_endian_a_gzmn( data );
    data += sizeof(a_gzmn);

    cv_cnv_endian_ia_gzmn( data );
    data += sizeof(ia_gzmn);

    cv_cnv_endian_pw_gzmna( data );
    data += sizeof(pw_gzmna);

    cv_cnv_endian_pw_gzmnd( data );
    data += sizeof(pw_gzmnd);

    cv_cnv_endian_pw_gzmn( data );
    data += sizeof(pw_gzmn);

    cv_cnv_endian_wg_gzmn( data );
    data += sizeof(wg_gzmn);

    cv_cnv_endian_res_rf2se1( data );
    data += sizeof(res_rf2se1);

    cv_cnv_endian_wg_rf2se1( data );
    data += sizeof(wg_rf2se1);

    cv_cnv_endian_a_gxdl1( data );
    data += sizeof(a_gxdl1);

    cv_cnv_endian_ia_gxdl1( data );
    data += sizeof(ia_gxdl1);

    cv_cnv_endian_pw_gxdl1a( data );
    data += sizeof(pw_gxdl1a);

    cv_cnv_endian_pw_gxdl1d( data );
    data += sizeof(pw_gxdl1d);

    cv_cnv_endian_pw_gxdl1( data );
    data += sizeof(pw_gxdl1);

    cv_cnv_endian_wg_gxdl1( data );
    data += sizeof(wg_gxdl1);

    cv_cnv_endian_a_gxdr1( data );
    data += sizeof(a_gxdr1);

    cv_cnv_endian_ia_gxdr1( data );
    data += sizeof(ia_gxdr1);

    cv_cnv_endian_pw_gxdr1a( data );
    data += sizeof(pw_gxdr1a);

    cv_cnv_endian_pw_gxdr1d( data );
    data += sizeof(pw_gxdr1d);

    cv_cnv_endian_pw_gxdr1( data );
    data += sizeof(pw_gxdr1);

    cv_cnv_endian_wg_gxdr1( data );
    data += sizeof(wg_gxdr1);

    cv_cnv_endian_a_gxdl2( data );
    data += sizeof(a_gxdl2);

    cv_cnv_endian_ia_gxdl2( data );
    data += sizeof(ia_gxdl2);

    cv_cnv_endian_pw_gxdl2a( data );
    data += sizeof(pw_gxdl2a);

    cv_cnv_endian_pw_gxdl2d( data );
    data += sizeof(pw_gxdl2d);

    cv_cnv_endian_pw_gxdl2( data );
    data += sizeof(pw_gxdl2);

    cv_cnv_endian_wg_gxdl2( data );
    data += sizeof(wg_gxdl2);

    cv_cnv_endian_a_gxdr2( data );
    data += sizeof(a_gxdr2);

    cv_cnv_endian_ia_gxdr2( data );
    data += sizeof(ia_gxdr2);

    cv_cnv_endian_pw_gxdr2a( data );
    data += sizeof(pw_gxdr2a);

    cv_cnv_endian_pw_gxdr2d( data );
    data += sizeof(pw_gxdr2d);

    cv_cnv_endian_pw_gxdr2( data );
    data += sizeof(pw_gxdr2);

    cv_cnv_endian_wg_gxdr2( data );
    data += sizeof(wg_gxdr2);

    cv_cnv_endian_a_gxk( data );
    data += sizeof(a_gxk);

    cv_cnv_endian_ia_gxk( data );
    data += sizeof(ia_gxk);

    cv_cnv_endian_pw_gxka( data );
    data += sizeof(pw_gxka);

    cv_cnv_endian_pw_gxkd( data );
    data += sizeof(pw_gxkd);

    cv_cnv_endian_pw_gxk( data );
    data += sizeof(pw_gxk);

    cv_cnv_endian_wg_gxk( data );
    data += sizeof(wg_gxk);

    cv_cnv_endian_a_gydl1( data );
    data += sizeof(a_gydl1);

    cv_cnv_endian_ia_gydl1( data );
    data += sizeof(ia_gydl1);

    cv_cnv_endian_pw_gydl1a( data );
    data += sizeof(pw_gydl1a);

    cv_cnv_endian_pw_gydl1d( data );
    data += sizeof(pw_gydl1d);

    cv_cnv_endian_pw_gydl1( data );
    data += sizeof(pw_gydl1);

    cv_cnv_endian_wg_gydl1( data );
    data += sizeof(wg_gydl1);

    cv_cnv_endian_a_gydr1( data );
    data += sizeof(a_gydr1);

    cv_cnv_endian_ia_gydr1( data );
    data += sizeof(ia_gydr1);

    cv_cnv_endian_pw_gydr1a( data );
    data += sizeof(pw_gydr1a);

    cv_cnv_endian_pw_gydr1d( data );
    data += sizeof(pw_gydr1d);

    cv_cnv_endian_pw_gydr1( data );
    data += sizeof(pw_gydr1);

    cv_cnv_endian_wg_gydr1( data );
    data += sizeof(wg_gydr1);

    cv_cnv_endian_a_gydl2( data );
    data += sizeof(a_gydl2);

    cv_cnv_endian_ia_gydl2( data );
    data += sizeof(ia_gydl2);

    cv_cnv_endian_pw_gydl2a( data );
    data += sizeof(pw_gydl2a);

    cv_cnv_endian_pw_gydl2d( data );
    data += sizeof(pw_gydl2d);

    cv_cnv_endian_pw_gydl2( data );
    data += sizeof(pw_gydl2);

    cv_cnv_endian_wg_gydl2( data );
    data += sizeof(wg_gydl2);

    cv_cnv_endian_a_gydr2( data );
    data += sizeof(a_gydr2);

    cv_cnv_endian_ia_gydr2( data );
    data += sizeof(ia_gydr2);

    cv_cnv_endian_pw_gydr2a( data );
    data += sizeof(pw_gydr2a);

    cv_cnv_endian_pw_gydr2d( data );
    data += sizeof(pw_gydr2d);

    cv_cnv_endian_pw_gydr2( data );
    data += sizeof(pw_gydr2);

    cv_cnv_endian_wg_gydr2( data );
    data += sizeof(wg_gydr2);

    cv_cnv_endian_a_gyk( data );
    data += sizeof(a_gyk);

    cv_cnv_endian_ia_gyk( data );
    data += sizeof(ia_gyk);

    cv_cnv_endian_pw_gyka( data );
    data += sizeof(pw_gyka);

    cv_cnv_endian_pw_gykd( data );
    data += sizeof(pw_gykd);

    cv_cnv_endian_pw_gyk( data );
    data += sizeof(pw_gyk);

    cv_cnv_endian_wg_gyk( data );
    data += sizeof(wg_gyk);

    cv_cnv_endian_a_gzdl1( data );
    data += sizeof(a_gzdl1);

    cv_cnv_endian_ia_gzdl1( data );
    data += sizeof(ia_gzdl1);

    cv_cnv_endian_pw_gzdl1a( data );
    data += sizeof(pw_gzdl1a);

    cv_cnv_endian_pw_gzdl1d( data );
    data += sizeof(pw_gzdl1d);

    cv_cnv_endian_pw_gzdl1( data );
    data += sizeof(pw_gzdl1);

    cv_cnv_endian_wg_gzdl1( data );
    data += sizeof(wg_gzdl1);

    cv_cnv_endian_a_gzdr1( data );
    data += sizeof(a_gzdr1);

    cv_cnv_endian_ia_gzdr1( data );
    data += sizeof(ia_gzdr1);

    cv_cnv_endian_pw_gzdr1a( data );
    data += sizeof(pw_gzdr1a);

    cv_cnv_endian_pw_gzdr1d( data );
    data += sizeof(pw_gzdr1d);

    cv_cnv_endian_pw_gzdr1( data );
    data += sizeof(pw_gzdr1);

    cv_cnv_endian_wg_gzdr1( data );
    data += sizeof(wg_gzdr1);

    cv_cnv_endian_a_gzdl2( data );
    data += sizeof(a_gzdl2);

    cv_cnv_endian_ia_gzdl2( data );
    data += sizeof(ia_gzdl2);

    cv_cnv_endian_pw_gzdl2a( data );
    data += sizeof(pw_gzdl2a);

    cv_cnv_endian_pw_gzdl2d( data );
    data += sizeof(pw_gzdl2d);

    cv_cnv_endian_pw_gzdl2( data );
    data += sizeof(pw_gzdl2);

    cv_cnv_endian_wg_gzdl2( data );
    data += sizeof(wg_gzdl2);

    cv_cnv_endian_a_gzdr2( data );
    data += sizeof(a_gzdr2);

    cv_cnv_endian_ia_gzdr2( data );
    data += sizeof(ia_gzdr2);

    cv_cnv_endian_pw_gzdr2a( data );
    data += sizeof(pw_gzdr2a);

    cv_cnv_endian_pw_gzdr2d( data );
    data += sizeof(pw_gzdr2d);

    cv_cnv_endian_pw_gzdr2( data );
    data += sizeof(pw_gzdr2);

    cv_cnv_endian_wg_gzdr2( data );
    data += sizeof(wg_gzdr2);

    cv_cnv_endian_a_gzk( data );
    data += sizeof(a_gzk);

    cv_cnv_endian_ia_gzk( data );
    data += sizeof(ia_gzk);

    cv_cnv_endian_pw_gzka( data );
    data += sizeof(pw_gzka);

    cv_cnv_endian_pw_gzkd( data );
    data += sizeof(pw_gzkd);

    cv_cnv_endian_pw_gzk( data );
    data += sizeof(pw_gzk);

    cv_cnv_endian_wg_gzk( data );
    data += sizeof(wg_gzk);

    cv_cnv_endian_pw_wgx( data );
    data += sizeof(pw_wgx);

    cv_cnv_endian_wg_wgx( data );
    data += sizeof(wg_wgx);

    cv_cnv_endian_pw_wgy( data );
    data += sizeof(pw_wgy);

    cv_cnv_endian_wg_wgy( data );
    data += sizeof(wg_wgy);

    cv_cnv_endian_pw_wgz( data );
    data += sizeof(pw_wgz);

    cv_cnv_endian_wg_wgz( data );
    data += sizeof(wg_wgz);

    cv_cnv_endian_pw_wssp( data );
    data += sizeof(pw_wssp);

    cv_cnv_endian_wg_wssp( data );
    data += sizeof(wg_wssp);

    cv_cnv_endian_pw_sspdelay( data );
    data += sizeof(pw_sspdelay);

    cv_cnv_endian_wg_sspdelay( data );
    data += sizeof(wg_sspdelay);

    cv_cnv_endian_pw_omegadelay( data );
    data += sizeof(pw_omegadelay);

    cv_cnv_endian_wg_omegadelay( data );
    data += sizeof(wg_omegadelay);

    cv_cnv_endian_pw_womega( data );
    data += sizeof(pw_womega);

    cv_cnv_endian_wg_womega( data );
    data += sizeof(wg_womega);

    cv_cnv_endian_pw_sspshift( data );
    data += sizeof(pw_sspshift);

    cv_cnv_endian_wg_sspshift( data );
    data += sizeof(wg_sspshift);

    cv_cnv_endian_pw_ssp_pass_delay( data );
    data += sizeof(pw_ssp_pass_delay);

    cv_cnv_endian_wg_ssp_pass_delay( data );
    data += sizeof(wg_ssp_pass_delay);

    cv_cnv_endian_a_gzrf0( data );
    data += sizeof(a_gzrf0);

    cv_cnv_endian_ia_gzrf0( data );
    data += sizeof(ia_gzrf0);

    cv_cnv_endian_pw_gzrf0a( data );
    data += sizeof(pw_gzrf0a);

    cv_cnv_endian_pw_gzrf0d( data );
    data += sizeof(pw_gzrf0d);

    cv_cnv_endian_pw_gzrf0( data );
    data += sizeof(pw_gzrf0);

    cv_cnv_endian_res_gzrf0( data );
    data += sizeof(res_gzrf0);

    cv_cnv_endian_a_rf0( data );
    data += sizeof(a_rf0);

    cv_cnv_endian_ia_rf0( data );
    data += sizeof(ia_rf0);

    cv_cnv_endian_pw_rf0( data );
    data += sizeof(pw_rf0);

    cv_cnv_endian_res_rf0( data );
    data += sizeof(res_rf0);

    cv_cnv_endian_cyc_rf0( data );
    data += sizeof(cyc_rf0);

    cv_cnv_endian_off_rf0( data );
    data += sizeof(off_rf0);

    cv_cnv_endian_alpha_rf0( data );
    data += sizeof(alpha_rf0);

    cv_cnv_endian_thk_rf0( data );
    data += sizeof(thk_rf0);

    cv_cnv_endian_gscale_rf0( data );
    data += sizeof(gscale_rf0);

    cv_cnv_endian_flip_rf0( data );
    data += sizeof(flip_rf0);

    cv_cnv_endian_wg_rf0( data );
    data += sizeof(wg_rf0);

    cv_cnv_endian_a_omegarf0( data );
    data += sizeof(a_omegarf0);

    cv_cnv_endian_ia_omegarf0( data );
    data += sizeof(ia_omegarf0);

    cv_cnv_endian_pw_omegarf0( data );
    data += sizeof(pw_omegarf0);

    cv_cnv_endian_res_omegarf0( data );
    data += sizeof(res_omegarf0);

    cv_cnv_endian_off_omegarf0( data );
    data += sizeof(off_omegarf0);

    cv_cnv_endian_rfslot_omegarf0( data );
    data += sizeof(rfslot_omegarf0);

    cv_cnv_endian_gscale_omegarf0( data );
    data += sizeof(gscale_omegarf0);

    cv_cnv_endian_n_omegarf0( data );
    data += sizeof(n_omegarf0);

    cv_cnv_endian_wg_omegarf0( data );
    data += sizeof(wg_omegarf0);

    cv_cnv_endian_a_gyk0( data );
    data += sizeof(a_gyk0);

    cv_cnv_endian_ia_gyk0( data );
    data += sizeof(ia_gyk0);

    cv_cnv_endian_pw_gyk0a( data );
    data += sizeof(pw_gyk0a);

    cv_cnv_endian_pw_gyk0d( data );
    data += sizeof(pw_gyk0d);

    cv_cnv_endian_pw_gyk0( data );
    data += sizeof(pw_gyk0);

    cv_cnv_endian_wg_gyk0( data );
    data += sizeof(wg_gyk0);

    cv_cnv_endian_ia_bline_unblank( data );
    data += sizeof(ia_bline_unblank);

    cv_cnv_endian_filter_blineacq1( data );
    data += sizeof(filter_blineacq1);

    cv_cnv_endian_res_rfcssat( data );
    data += sizeof(res_rfcssat);

    cv_cnv_endian_wg_rfcssat( data );
    data += sizeof(wg_rfcssat);

    cv_cnv_endian_a_dbgxrfcssat( data );
    data += sizeof(a_dbgxrfcssat);

    cv_cnv_endian_ia_dbgxrfcssat( data );
    data += sizeof(ia_dbgxrfcssat);

    cv_cnv_endian_pw_dbgxrfcssata( data );
    data += sizeof(pw_dbgxrfcssata);

    cv_cnv_endian_pw_dbgxrfcssatd( data );
    data += sizeof(pw_dbgxrfcssatd);

    cv_cnv_endian_pw_dbgxrfcssat( data );
    data += sizeof(pw_dbgxrfcssat);

    cv_cnv_endian_wg_dbgxrfcssat( data );
    data += sizeof(wg_dbgxrfcssat);

    cv_cnv_endian_a_dbgyrfcssat( data );
    data += sizeof(a_dbgyrfcssat);

    cv_cnv_endian_ia_dbgyrfcssat( data );
    data += sizeof(ia_dbgyrfcssat);

    cv_cnv_endian_pw_dbgyrfcssata( data );
    data += sizeof(pw_dbgyrfcssata);

    cv_cnv_endian_pw_dbgyrfcssatd( data );
    data += sizeof(pw_dbgyrfcssatd);

    cv_cnv_endian_pw_dbgyrfcssat( data );
    data += sizeof(pw_dbgyrfcssat);

    cv_cnv_endian_wg_dbgyrfcssat( data );
    data += sizeof(wg_dbgyrfcssat);

    cv_cnv_endian_a_dbgzrfcssat( data );
    data += sizeof(a_dbgzrfcssat);

    cv_cnv_endian_ia_dbgzrfcssat( data );
    data += sizeof(ia_dbgzrfcssat);

    cv_cnv_endian_pw_dbgzrfcssata( data );
    data += sizeof(pw_dbgzrfcssata);

    cv_cnv_endian_pw_dbgzrfcssatd( data );
    data += sizeof(pw_dbgzrfcssatd);

    cv_cnv_endian_pw_dbgzrfcssat( data );
    data += sizeof(pw_dbgzrfcssat);

    cv_cnv_endian_wg_dbgzrfcssat( data );
    data += sizeof(wg_dbgzrfcssat);

    cv_cnv_endian_res_omega_hs_rfcssat( data );
    data += sizeof(res_omega_hs_rfcssat);

    cv_cnv_endian_wg_omega_hs_rfcssat( data );
    data += sizeof(wg_omega_hs_rfcssat);

    cv_cnv_endian_a_gzrfcs( data );
    data += sizeof(a_gzrfcs);

    cv_cnv_endian_ia_gzrfcs( data );
    data += sizeof(ia_gzrfcs);

    cv_cnv_endian_pw_gzrfcsa( data );
    data += sizeof(pw_gzrfcsa);

    cv_cnv_endian_pw_gzrfcsd( data );
    data += sizeof(pw_gzrfcsd);

    cv_cnv_endian_pw_gzrfcs( data );
    data += sizeof(pw_gzrfcs);

    cv_cnv_endian_wg_gzrfcs( data );
    data += sizeof(wg_gzrfcs);

    cv_cnv_endian_a_gykcs( data );
    data += sizeof(a_gykcs);

    cv_cnv_endian_ia_gykcs( data );
    data += sizeof(ia_gykcs);

    cv_cnv_endian_pw_gykcsa( data );
    data += sizeof(pw_gykcsa);

    cv_cnv_endian_pw_gykcsd( data );
    data += sizeof(pw_gykcsd);

    cv_cnv_endian_pw_gykcs( data );
    data += sizeof(pw_gykcs);

    cv_cnv_endian_wg_gykcs( data );
    data += sizeof(wg_gykcs);

    cv_cnv_endian_a_gxkcs( data );
    data += sizeof(a_gxkcs);

    cv_cnv_endian_ia_gxkcs( data );
    data += sizeof(ia_gxkcs);

    cv_cnv_endian_pw_gxkcsa( data );
    data += sizeof(pw_gxkcsa);

    cv_cnv_endian_pw_gxkcsd( data );
    data += sizeof(pw_gxkcsd);

    cv_cnv_endian_pw_gxkcs( data );
    data += sizeof(pw_gxkcs);

    cv_cnv_endian_wg_gxkcs( data );
    data += sizeof(wg_gxkcs);

    cv_cnv_endian_a_gzkcs( data );
    data += sizeof(a_gzkcs);

    cv_cnv_endian_ia_gzkcs( data );
    data += sizeof(ia_gzkcs);

    cv_cnv_endian_pw_gzkcsa( data );
    data += sizeof(pw_gzkcsa);

    cv_cnv_endian_pw_gzkcsd( data );
    data += sizeof(pw_gzkcsd);

    cv_cnv_endian_pw_gzkcs( data );
    data += sizeof(pw_gzkcs);

    cv_cnv_endian_wg_gzkcs( data );
    data += sizeof(wg_gzkcs);

    cv_cnv_endian_pw_isi_cardiacsat( data );
    data += sizeof(pw_isi_cardiacsat);

    cv_cnv_endian_wg_isi_cardiacsat( data );
    data += sizeof(wg_isi_cardiacsat);

    cv_cnv_endian_pw_rot_update_cardiacsat( data );
    data += sizeof(pw_rot_update_cardiacsat);

    cv_cnv_endian_wg_rot_update_cardiacsat( data );
    data += sizeof(wg_rot_update_cardiacsat);

    cv_cnv_endian_a_gzrfse1( data );
    data += sizeof(a_gzrfse1);

    cv_cnv_endian_ia_gzrfse1( data );
    data += sizeof(ia_gzrfse1);

    cv_cnv_endian_pw_gzrfse1a( data );
    data += sizeof(pw_gzrfse1a);

    cv_cnv_endian_pw_gzrfse1d( data );
    data += sizeof(pw_gzrfse1d);

    cv_cnv_endian_pw_gzrfse1( data );
    data += sizeof(pw_gzrfse1);

    cv_cnv_endian_a_rfse1( data );
    data += sizeof(a_rfse1);

    cv_cnv_endian_ia_rfse1( data );
    data += sizeof(ia_rfse1);

    cv_cnv_endian_pw_rfse1( data );
    data += sizeof(pw_rfse1);

    cv_cnv_endian_res_rfse1( data );
    data += sizeof(res_rfse1);

    cv_cnv_endian_temp_res_rfse1( data );
    data += sizeof(temp_res_rfse1);

    cv_cnv_endian_cyc_rfse1( data );
    data += sizeof(cyc_rfse1);

    cv_cnv_endian_off_rfse1( data );
    data += sizeof(off_rfse1);

    cv_cnv_endian_alpha_rfse1( data );
    data += sizeof(alpha_rfse1);

    cv_cnv_endian_thk_rfse1( data );
    data += sizeof(thk_rfse1);

    cv_cnv_endian_gscale_rfse1( data );
    data += sizeof(gscale_rfse1);

    cv_cnv_endian_flip_rfse1( data );
    data += sizeof(flip_rfse1);

    cv_cnv_endian_wg_rfse1( data );
    data += sizeof(wg_rfse1);

    cv_cnv_endian_pw_isi_sate1( data );
    data += sizeof(pw_isi_sate1);

    cv_cnv_endian_wg_isi_sate1( data );
    data += sizeof(wg_isi_sate1);

    cv_cnv_endian_pw_rot_update_e1( data );
    data += sizeof(pw_rot_update_e1);

    cv_cnv_endian_wg_rot_update_e1( data );
    data += sizeof(wg_rot_update_e1);

    cv_cnv_endian_a_gykse1( data );
    data += sizeof(a_gykse1);

    cv_cnv_endian_ia_gykse1( data );
    data += sizeof(ia_gykse1);

    cv_cnv_endian_pw_gykse1a( data );
    data += sizeof(pw_gykse1a);

    cv_cnv_endian_pw_gykse1d( data );
    data += sizeof(pw_gykse1d);

    cv_cnv_endian_pw_gykse1( data );
    data += sizeof(pw_gykse1);

    cv_cnv_endian_wg_gykse1( data );
    data += sizeof(wg_gykse1);

    cv_cnv_endian_a_gxkse1( data );
    data += sizeof(a_gxkse1);

    cv_cnv_endian_ia_gxkse1( data );
    data += sizeof(ia_gxkse1);

    cv_cnv_endian_pw_gxkse1a( data );
    data += sizeof(pw_gxkse1a);

    cv_cnv_endian_pw_gxkse1d( data );
    data += sizeof(pw_gxkse1d);

    cv_cnv_endian_pw_gxkse1( data );
    data += sizeof(pw_gxkse1);

    cv_cnv_endian_wg_gxkse1( data );
    data += sizeof(wg_gxkse1);

    cv_cnv_endian_pw_isi_satek1( data );
    data += sizeof(pw_isi_satek1);

    cv_cnv_endian_wg_isi_satek1( data );
    data += sizeof(wg_isi_satek1);

    cv_cnv_endian_pw_rot_update_ek1( data );
    data += sizeof(pw_rot_update_ek1);

    cv_cnv_endian_wg_rot_update_ek1( data );
    data += sizeof(wg_rot_update_ek1);

    cv_cnv_endian_a_gzrfse2( data );
    data += sizeof(a_gzrfse2);

    cv_cnv_endian_ia_gzrfse2( data );
    data += sizeof(ia_gzrfse2);

    cv_cnv_endian_pw_gzrfse2a( data );
    data += sizeof(pw_gzrfse2a);

    cv_cnv_endian_pw_gzrfse2d( data );
    data += sizeof(pw_gzrfse2d);

    cv_cnv_endian_pw_gzrfse2( data );
    data += sizeof(pw_gzrfse2);

    cv_cnv_endian_a_rfse2( data );
    data += sizeof(a_rfse2);

    cv_cnv_endian_ia_rfse2( data );
    data += sizeof(ia_rfse2);

    cv_cnv_endian_pw_rfse2( data );
    data += sizeof(pw_rfse2);

    cv_cnv_endian_res_rfse2( data );
    data += sizeof(res_rfse2);

    cv_cnv_endian_temp_res_rfse2( data );
    data += sizeof(temp_res_rfse2);

    cv_cnv_endian_cyc_rfse2( data );
    data += sizeof(cyc_rfse2);

    cv_cnv_endian_off_rfse2( data );
    data += sizeof(off_rfse2);

    cv_cnv_endian_alpha_rfse2( data );
    data += sizeof(alpha_rfse2);

    cv_cnv_endian_thk_rfse2( data );
    data += sizeof(thk_rfse2);

    cv_cnv_endian_gscale_rfse2( data );
    data += sizeof(gscale_rfse2);

    cv_cnv_endian_flip_rfse2( data );
    data += sizeof(flip_rfse2);

    cv_cnv_endian_wg_rfse2( data );
    data += sizeof(wg_rfse2);

    cv_cnv_endian_pw_isi_sate2( data );
    data += sizeof(pw_isi_sate2);

    cv_cnv_endian_wg_isi_sate2( data );
    data += sizeof(wg_isi_sate2);

    cv_cnv_endian_pw_rot_update_e2( data );
    data += sizeof(pw_rot_update_e2);

    cv_cnv_endian_wg_rot_update_e2( data );
    data += sizeof(wg_rot_update_e2);

    cv_cnv_endian_a_gykse2( data );
    data += sizeof(a_gykse2);

    cv_cnv_endian_ia_gykse2( data );
    data += sizeof(ia_gykse2);

    cv_cnv_endian_pw_gykse2a( data );
    data += sizeof(pw_gykse2a);

    cv_cnv_endian_pw_gykse2d( data );
    data += sizeof(pw_gykse2d);

    cv_cnv_endian_pw_gykse2( data );
    data += sizeof(pw_gykse2);

    cv_cnv_endian_wg_gykse2( data );
    data += sizeof(wg_gykse2);

    cv_cnv_endian_a_gxkse2( data );
    data += sizeof(a_gxkse2);

    cv_cnv_endian_ia_gxkse2( data );
    data += sizeof(ia_gxkse2);

    cv_cnv_endian_pw_gxkse2a( data );
    data += sizeof(pw_gxkse2a);

    cv_cnv_endian_pw_gxkse2d( data );
    data += sizeof(pw_gxkse2d);

    cv_cnv_endian_pw_gxkse2( data );
    data += sizeof(pw_gxkse2);

    cv_cnv_endian_wg_gxkse2( data );
    data += sizeof(wg_gxkse2);

    cv_cnv_endian_pw_isi_satek2( data );
    data += sizeof(pw_isi_satek2);

    cv_cnv_endian_wg_isi_satek2( data );
    data += sizeof(wg_isi_satek2);

    cv_cnv_endian_pw_rot_update_ek2( data );
    data += sizeof(pw_rot_update_ek2);

    cv_cnv_endian_wg_rot_update_ek2( data );
    data += sizeof(wg_rot_update_ek2);

    cv_cnv_endian_a_gzrfse3( data );
    data += sizeof(a_gzrfse3);

    cv_cnv_endian_ia_gzrfse3( data );
    data += sizeof(ia_gzrfse3);

    cv_cnv_endian_pw_gzrfse3a( data );
    data += sizeof(pw_gzrfse3a);

    cv_cnv_endian_pw_gzrfse3d( data );
    data += sizeof(pw_gzrfse3d);

    cv_cnv_endian_pw_gzrfse3( data );
    data += sizeof(pw_gzrfse3);

    cv_cnv_endian_a_rfse3( data );
    data += sizeof(a_rfse3);

    cv_cnv_endian_ia_rfse3( data );
    data += sizeof(ia_rfse3);

    cv_cnv_endian_pw_rfse3( data );
    data += sizeof(pw_rfse3);

    cv_cnv_endian_res_rfse3( data );
    data += sizeof(res_rfse3);

    cv_cnv_endian_temp_res_rfse3( data );
    data += sizeof(temp_res_rfse3);

    cv_cnv_endian_cyc_rfse3( data );
    data += sizeof(cyc_rfse3);

    cv_cnv_endian_off_rfse3( data );
    data += sizeof(off_rfse3);

    cv_cnv_endian_alpha_rfse3( data );
    data += sizeof(alpha_rfse3);

    cv_cnv_endian_thk_rfse3( data );
    data += sizeof(thk_rfse3);

    cv_cnv_endian_gscale_rfse3( data );
    data += sizeof(gscale_rfse3);

    cv_cnv_endian_flip_rfse3( data );
    data += sizeof(flip_rfse3);

    cv_cnv_endian_wg_rfse3( data );
    data += sizeof(wg_rfse3);

    cv_cnv_endian_pw_isi_sate3( data );
    data += sizeof(pw_isi_sate3);

    cv_cnv_endian_wg_isi_sate3( data );
    data += sizeof(wg_isi_sate3);

    cv_cnv_endian_pw_rot_update_e3( data );
    data += sizeof(pw_rot_update_e3);

    cv_cnv_endian_wg_rot_update_e3( data );
    data += sizeof(wg_rot_update_e3);

    cv_cnv_endian_a_gykse3( data );
    data += sizeof(a_gykse3);

    cv_cnv_endian_ia_gykse3( data );
    data += sizeof(ia_gykse3);

    cv_cnv_endian_pw_gykse3a( data );
    data += sizeof(pw_gykse3a);

    cv_cnv_endian_pw_gykse3d( data );
    data += sizeof(pw_gykse3d);

    cv_cnv_endian_pw_gykse3( data );
    data += sizeof(pw_gykse3);

    cv_cnv_endian_wg_gykse3( data );
    data += sizeof(wg_gykse3);

    cv_cnv_endian_a_gxkse3( data );
    data += sizeof(a_gxkse3);

    cv_cnv_endian_ia_gxkse3( data );
    data += sizeof(ia_gxkse3);

    cv_cnv_endian_pw_gxkse3a( data );
    data += sizeof(pw_gxkse3a);

    cv_cnv_endian_pw_gxkse3d( data );
    data += sizeof(pw_gxkse3d);

    cv_cnv_endian_pw_gxkse3( data );
    data += sizeof(pw_gxkse3);

    cv_cnv_endian_wg_gxkse3( data );
    data += sizeof(wg_gxkse3);

    cv_cnv_endian_pw_isi_satek3( data );
    data += sizeof(pw_isi_satek3);

    cv_cnv_endian_wg_isi_satek3( data );
    data += sizeof(wg_isi_satek3);

    cv_cnv_endian_pw_rot_update_ek3( data );
    data += sizeof(pw_rot_update_ek3);

    cv_cnv_endian_wg_rot_update_ek3( data );
    data += sizeof(wg_rot_update_ek3);

    cv_cnv_endian_a_gzrfse4( data );
    data += sizeof(a_gzrfse4);

    cv_cnv_endian_ia_gzrfse4( data );
    data += sizeof(ia_gzrfse4);

    cv_cnv_endian_pw_gzrfse4a( data );
    data += sizeof(pw_gzrfse4a);

    cv_cnv_endian_pw_gzrfse4d( data );
    data += sizeof(pw_gzrfse4d);

    cv_cnv_endian_pw_gzrfse4( data );
    data += sizeof(pw_gzrfse4);

    cv_cnv_endian_a_rfse4( data );
    data += sizeof(a_rfse4);

    cv_cnv_endian_ia_rfse4( data );
    data += sizeof(ia_rfse4);

    cv_cnv_endian_pw_rfse4( data );
    data += sizeof(pw_rfse4);

    cv_cnv_endian_res_rfse4( data );
    data += sizeof(res_rfse4);

    cv_cnv_endian_temp_res_rfse4( data );
    data += sizeof(temp_res_rfse4);

    cv_cnv_endian_cyc_rfse4( data );
    data += sizeof(cyc_rfse4);

    cv_cnv_endian_off_rfse4( data );
    data += sizeof(off_rfse4);

    cv_cnv_endian_alpha_rfse4( data );
    data += sizeof(alpha_rfse4);

    cv_cnv_endian_thk_rfse4( data );
    data += sizeof(thk_rfse4);

    cv_cnv_endian_gscale_rfse4( data );
    data += sizeof(gscale_rfse4);

    cv_cnv_endian_flip_rfse4( data );
    data += sizeof(flip_rfse4);

    cv_cnv_endian_wg_rfse4( data );
    data += sizeof(wg_rfse4);

    cv_cnv_endian_pw_isi_sate4( data );
    data += sizeof(pw_isi_sate4);

    cv_cnv_endian_wg_isi_sate4( data );
    data += sizeof(wg_isi_sate4);

    cv_cnv_endian_pw_rot_update_e4( data );
    data += sizeof(pw_rot_update_e4);

    cv_cnv_endian_wg_rot_update_e4( data );
    data += sizeof(wg_rot_update_e4);

    cv_cnv_endian_a_gykse4( data );
    data += sizeof(a_gykse4);

    cv_cnv_endian_ia_gykse4( data );
    data += sizeof(ia_gykse4);

    cv_cnv_endian_pw_gykse4a( data );
    data += sizeof(pw_gykse4a);

    cv_cnv_endian_pw_gykse4d( data );
    data += sizeof(pw_gykse4d);

    cv_cnv_endian_pw_gykse4( data );
    data += sizeof(pw_gykse4);

    cv_cnv_endian_wg_gykse4( data );
    data += sizeof(wg_gykse4);

    cv_cnv_endian_a_gxkse4( data );
    data += sizeof(a_gxkse4);

    cv_cnv_endian_ia_gxkse4( data );
    data += sizeof(ia_gxkse4);

    cv_cnv_endian_pw_gxkse4a( data );
    data += sizeof(pw_gxkse4a);

    cv_cnv_endian_pw_gxkse4d( data );
    data += sizeof(pw_gxkse4d);

    cv_cnv_endian_pw_gxkse4( data );
    data += sizeof(pw_gxkse4);

    cv_cnv_endian_wg_gxkse4( data );
    data += sizeof(wg_gxkse4);

    cv_cnv_endian_pw_isi_satek4( data );
    data += sizeof(pw_isi_satek4);

    cv_cnv_endian_wg_isi_satek4( data );
    data += sizeof(wg_isi_satek4);

    cv_cnv_endian_pw_rot_update_ek4( data );
    data += sizeof(pw_rot_update_ek4);

    cv_cnv_endian_wg_rot_update_ek4( data );
    data += sizeof(wg_rot_update_ek4);

    cv_cnv_endian_a_gzrfse5( data );
    data += sizeof(a_gzrfse5);

    cv_cnv_endian_ia_gzrfse5( data );
    data += sizeof(ia_gzrfse5);

    cv_cnv_endian_pw_gzrfse5a( data );
    data += sizeof(pw_gzrfse5a);

    cv_cnv_endian_pw_gzrfse5d( data );
    data += sizeof(pw_gzrfse5d);

    cv_cnv_endian_pw_gzrfse5( data );
    data += sizeof(pw_gzrfse5);

    cv_cnv_endian_a_rfse5( data );
    data += sizeof(a_rfse5);

    cv_cnv_endian_ia_rfse5( data );
    data += sizeof(ia_rfse5);

    cv_cnv_endian_pw_rfse5( data );
    data += sizeof(pw_rfse5);

    cv_cnv_endian_res_rfse5( data );
    data += sizeof(res_rfse5);

    cv_cnv_endian_temp_res_rfse5( data );
    data += sizeof(temp_res_rfse5);

    cv_cnv_endian_cyc_rfse5( data );
    data += sizeof(cyc_rfse5);

    cv_cnv_endian_off_rfse5( data );
    data += sizeof(off_rfse5);

    cv_cnv_endian_alpha_rfse5( data );
    data += sizeof(alpha_rfse5);

    cv_cnv_endian_thk_rfse5( data );
    data += sizeof(thk_rfse5);

    cv_cnv_endian_gscale_rfse5( data );
    data += sizeof(gscale_rfse5);

    cv_cnv_endian_flip_rfse5( data );
    data += sizeof(flip_rfse5);

    cv_cnv_endian_wg_rfse5( data );
    data += sizeof(wg_rfse5);

    cv_cnv_endian_pw_isi_sate5( data );
    data += sizeof(pw_isi_sate5);

    cv_cnv_endian_wg_isi_sate5( data );
    data += sizeof(wg_isi_sate5);

    cv_cnv_endian_pw_rot_update_e5( data );
    data += sizeof(pw_rot_update_e5);

    cv_cnv_endian_wg_rot_update_e5( data );
    data += sizeof(wg_rot_update_e5);

    cv_cnv_endian_a_gykse5( data );
    data += sizeof(a_gykse5);

    cv_cnv_endian_ia_gykse5( data );
    data += sizeof(ia_gykse5);

    cv_cnv_endian_pw_gykse5a( data );
    data += sizeof(pw_gykse5a);

    cv_cnv_endian_pw_gykse5d( data );
    data += sizeof(pw_gykse5d);

    cv_cnv_endian_pw_gykse5( data );
    data += sizeof(pw_gykse5);

    cv_cnv_endian_wg_gykse5( data );
    data += sizeof(wg_gykse5);

    cv_cnv_endian_a_gxkse5( data );
    data += sizeof(a_gxkse5);

    cv_cnv_endian_ia_gxkse5( data );
    data += sizeof(ia_gxkse5);

    cv_cnv_endian_pw_gxkse5a( data );
    data += sizeof(pw_gxkse5a);

    cv_cnv_endian_pw_gxkse5d( data );
    data += sizeof(pw_gxkse5d);

    cv_cnv_endian_pw_gxkse5( data );
    data += sizeof(pw_gxkse5);

    cv_cnv_endian_wg_gxkse5( data );
    data += sizeof(wg_gxkse5);

    cv_cnv_endian_pw_isi_satek5( data );
    data += sizeof(pw_isi_satek5);

    cv_cnv_endian_wg_isi_satek5( data );
    data += sizeof(wg_isi_satek5);

    cv_cnv_endian_pw_rot_update_ek5( data );
    data += sizeof(pw_rot_update_ek5);

    cv_cnv_endian_wg_rot_update_ek5( data );
    data += sizeof(wg_rot_update_ek5);

    cv_cnv_endian_a_gzrfse6( data );
    data += sizeof(a_gzrfse6);

    cv_cnv_endian_ia_gzrfse6( data );
    data += sizeof(ia_gzrfse6);

    cv_cnv_endian_pw_gzrfse6a( data );
    data += sizeof(pw_gzrfse6a);

    cv_cnv_endian_pw_gzrfse6d( data );
    data += sizeof(pw_gzrfse6d);

    cv_cnv_endian_pw_gzrfse6( data );
    data += sizeof(pw_gzrfse6);

    cv_cnv_endian_a_rfse6( data );
    data += sizeof(a_rfse6);

    cv_cnv_endian_ia_rfse6( data );
    data += sizeof(ia_rfse6);

    cv_cnv_endian_pw_rfse6( data );
    data += sizeof(pw_rfse6);

    cv_cnv_endian_res_rfse6( data );
    data += sizeof(res_rfse6);

    cv_cnv_endian_temp_res_rfse6( data );
    data += sizeof(temp_res_rfse6);

    cv_cnv_endian_cyc_rfse6( data );
    data += sizeof(cyc_rfse6);

    cv_cnv_endian_off_rfse6( data );
    data += sizeof(off_rfse6);

    cv_cnv_endian_alpha_rfse6( data );
    data += sizeof(alpha_rfse6);

    cv_cnv_endian_thk_rfse6( data );
    data += sizeof(thk_rfse6);

    cv_cnv_endian_gscale_rfse6( data );
    data += sizeof(gscale_rfse6);

    cv_cnv_endian_flip_rfse6( data );
    data += sizeof(flip_rfse6);

    cv_cnv_endian_wg_rfse6( data );
    data += sizeof(wg_rfse6);

    cv_cnv_endian_pw_isi_sate6( data );
    data += sizeof(pw_isi_sate6);

    cv_cnv_endian_wg_isi_sate6( data );
    data += sizeof(wg_isi_sate6);

    cv_cnv_endian_pw_rot_update_e6( data );
    data += sizeof(pw_rot_update_e6);

    cv_cnv_endian_wg_rot_update_e6( data );
    data += sizeof(wg_rot_update_e6);

    cv_cnv_endian_a_gykse6( data );
    data += sizeof(a_gykse6);

    cv_cnv_endian_ia_gykse6( data );
    data += sizeof(ia_gykse6);

    cv_cnv_endian_pw_gykse6a( data );
    data += sizeof(pw_gykse6a);

    cv_cnv_endian_pw_gykse6d( data );
    data += sizeof(pw_gykse6d);

    cv_cnv_endian_pw_gykse6( data );
    data += sizeof(pw_gykse6);

    cv_cnv_endian_wg_gykse6( data );
    data += sizeof(wg_gykse6);

    cv_cnv_endian_a_gxkse6( data );
    data += sizeof(a_gxkse6);

    cv_cnv_endian_ia_gxkse6( data );
    data += sizeof(ia_gxkse6);

    cv_cnv_endian_pw_gxkse6a( data );
    data += sizeof(pw_gxkse6a);

    cv_cnv_endian_pw_gxkse6d( data );
    data += sizeof(pw_gxkse6d);

    cv_cnv_endian_pw_gxkse6( data );
    data += sizeof(pw_gxkse6);

    cv_cnv_endian_wg_gxkse6( data );
    data += sizeof(wg_gxkse6);

    cv_cnv_endian_pw_isi_satek6( data );
    data += sizeof(pw_isi_satek6);

    cv_cnv_endian_wg_isi_satek6( data );
    data += sizeof(wg_isi_satek6);

    cv_cnv_endian_pw_rot_update_ek6( data );
    data += sizeof(pw_rot_update_ek6);

    cv_cnv_endian_wg_rot_update_ek6( data );
    data += sizeof(wg_rot_update_ek6);

    cv_cnv_endian_a_gxrfsx1( data );
    data += sizeof(a_gxrfsx1);

    cv_cnv_endian_ia_gxrfsx1( data );
    data += sizeof(ia_gxrfsx1);

    cv_cnv_endian_pw_gxrfsx1a( data );
    data += sizeof(pw_gxrfsx1a);

    cv_cnv_endian_pw_gxrfsx1d( data );
    data += sizeof(pw_gxrfsx1d);

    cv_cnv_endian_pw_gxrfsx1( data );
    data += sizeof(pw_gxrfsx1);

    cv_cnv_endian_a_rfsx1( data );
    data += sizeof(a_rfsx1);

    cv_cnv_endian_ia_rfsx1( data );
    data += sizeof(ia_rfsx1);

    cv_cnv_endian_pw_rfsx1( data );
    data += sizeof(pw_rfsx1);

    cv_cnv_endian_res_rfsx1( data );
    data += sizeof(res_rfsx1);

    cv_cnv_endian_temp_res_rfsx1( data );
    data += sizeof(temp_res_rfsx1);

    cv_cnv_endian_cyc_rfsx1( data );
    data += sizeof(cyc_rfsx1);

    cv_cnv_endian_off_rfsx1( data );
    data += sizeof(off_rfsx1);

    cv_cnv_endian_alpha_rfsx1( data );
    data += sizeof(alpha_rfsx1);

    cv_cnv_endian_gscale_rfsx1( data );
    data += sizeof(gscale_rfsx1);

    cv_cnv_endian_thk_rfsx1( data );
    data += sizeof(thk_rfsx1);

    cv_cnv_endian_flip_rfsx1( data );
    data += sizeof(flip_rfsx1);

    cv_cnv_endian_wg_rfsx1( data );
    data += sizeof(wg_rfsx1);

    cv_cnv_endian_pw_isi_satx1( data );
    data += sizeof(pw_isi_satx1);

    cv_cnv_endian_wg_isi_satx1( data );
    data += sizeof(wg_isi_satx1);

    cv_cnv_endian_pw_rot_update_x1( data );
    data += sizeof(pw_rot_update_x1);

    cv_cnv_endian_wg_rot_update_x1( data );
    data += sizeof(wg_rot_update_x1);

    cv_cnv_endian_a_gyksx1( data );
    data += sizeof(a_gyksx1);

    cv_cnv_endian_ia_gyksx1( data );
    data += sizeof(ia_gyksx1);

    cv_cnv_endian_pw_gyksx1a( data );
    data += sizeof(pw_gyksx1a);

    cv_cnv_endian_pw_gyksx1d( data );
    data += sizeof(pw_gyksx1d);

    cv_cnv_endian_pw_gyksx1( data );
    data += sizeof(pw_gyksx1);

    cv_cnv_endian_wg_gyksx1( data );
    data += sizeof(wg_gyksx1);

    cv_cnv_endian_a_gxksx1( data );
    data += sizeof(a_gxksx1);

    cv_cnv_endian_ia_gxksx1( data );
    data += sizeof(ia_gxksx1);

    cv_cnv_endian_pw_gxksx1a( data );
    data += sizeof(pw_gxksx1a);

    cv_cnv_endian_pw_gxksx1d( data );
    data += sizeof(pw_gxksx1d);

    cv_cnv_endian_pw_gxksx1( data );
    data += sizeof(pw_gxksx1);

    cv_cnv_endian_wg_gxksx1( data );
    data += sizeof(wg_gxksx1);

    cv_cnv_endian_pw_isi_satxk1( data );
    data += sizeof(pw_isi_satxk1);

    cv_cnv_endian_wg_isi_satxk1( data );
    data += sizeof(wg_isi_satxk1);

    cv_cnv_endian_pw_rot_update_xk1( data );
    data += sizeof(pw_rot_update_xk1);

    cv_cnv_endian_wg_rot_update_xk1( data );
    data += sizeof(wg_rot_update_xk1);

    cv_cnv_endian_a_gxrfsx2( data );
    data += sizeof(a_gxrfsx2);

    cv_cnv_endian_ia_gxrfsx2( data );
    data += sizeof(ia_gxrfsx2);

    cv_cnv_endian_pw_gxrfsx2a( data );
    data += sizeof(pw_gxrfsx2a);

    cv_cnv_endian_pw_gxrfsx2d( data );
    data += sizeof(pw_gxrfsx2d);

    cv_cnv_endian_pw_gxrfsx2( data );
    data += sizeof(pw_gxrfsx2);

    cv_cnv_endian_a_rfsx2( data );
    data += sizeof(a_rfsx2);

    cv_cnv_endian_ia_rfsx2( data );
    data += sizeof(ia_rfsx2);

    cv_cnv_endian_pw_rfsx2( data );
    data += sizeof(pw_rfsx2);

    cv_cnv_endian_res_rfsx2( data );
    data += sizeof(res_rfsx2);

    cv_cnv_endian_temp_res_rfsx2( data );
    data += sizeof(temp_res_rfsx2);

    cv_cnv_endian_cyc_rfsx2( data );
    data += sizeof(cyc_rfsx2);

    cv_cnv_endian_off_rfsx2( data );
    data += sizeof(off_rfsx2);

    cv_cnv_endian_alpha_rfsx2( data );
    data += sizeof(alpha_rfsx2);

    cv_cnv_endian_gscale_rfsx2( data );
    data += sizeof(gscale_rfsx2);

    cv_cnv_endian_thk_rfsx2( data );
    data += sizeof(thk_rfsx2);

    cv_cnv_endian_flip_rfsx2( data );
    data += sizeof(flip_rfsx2);

    cv_cnv_endian_wg_rfsx2( data );
    data += sizeof(wg_rfsx2);

    cv_cnv_endian_pw_isi_satx2( data );
    data += sizeof(pw_isi_satx2);

    cv_cnv_endian_wg_isi_satx2( data );
    data += sizeof(wg_isi_satx2);

    cv_cnv_endian_pw_rot_update_x2( data );
    data += sizeof(pw_rot_update_x2);

    cv_cnv_endian_wg_rot_update_x2( data );
    data += sizeof(wg_rot_update_x2);

    cv_cnv_endian_a_gyksx2( data );
    data += sizeof(a_gyksx2);

    cv_cnv_endian_ia_gyksx2( data );
    data += sizeof(ia_gyksx2);

    cv_cnv_endian_pw_gyksx2a( data );
    data += sizeof(pw_gyksx2a);

    cv_cnv_endian_pw_gyksx2d( data );
    data += sizeof(pw_gyksx2d);

    cv_cnv_endian_pw_gyksx2( data );
    data += sizeof(pw_gyksx2);

    cv_cnv_endian_wg_gyksx2( data );
    data += sizeof(wg_gyksx2);

    cv_cnv_endian_a_gxksx2( data );
    data += sizeof(a_gxksx2);

    cv_cnv_endian_ia_gxksx2( data );
    data += sizeof(ia_gxksx2);

    cv_cnv_endian_pw_gxksx2a( data );
    data += sizeof(pw_gxksx2a);

    cv_cnv_endian_pw_gxksx2d( data );
    data += sizeof(pw_gxksx2d);

    cv_cnv_endian_pw_gxksx2( data );
    data += sizeof(pw_gxksx2);

    cv_cnv_endian_wg_gxksx2( data );
    data += sizeof(wg_gxksx2);

    cv_cnv_endian_pw_isi_satxk2( data );
    data += sizeof(pw_isi_satxk2);

    cv_cnv_endian_wg_isi_satxk2( data );
    data += sizeof(wg_isi_satxk2);

    cv_cnv_endian_pw_rot_update_xk2( data );
    data += sizeof(pw_rot_update_xk2);

    cv_cnv_endian_wg_rot_update_xk2( data );
    data += sizeof(wg_rot_update_xk2);

    cv_cnv_endian_a_gyrfsy1( data );
    data += sizeof(a_gyrfsy1);

    cv_cnv_endian_ia_gyrfsy1( data );
    data += sizeof(ia_gyrfsy1);

    cv_cnv_endian_pw_gyrfsy1a( data );
    data += sizeof(pw_gyrfsy1a);

    cv_cnv_endian_pw_gyrfsy1d( data );
    data += sizeof(pw_gyrfsy1d);

    cv_cnv_endian_pw_gyrfsy1( data );
    data += sizeof(pw_gyrfsy1);

    cv_cnv_endian_a_rfsy1( data );
    data += sizeof(a_rfsy1);

    cv_cnv_endian_ia_rfsy1( data );
    data += sizeof(ia_rfsy1);

    cv_cnv_endian_pw_rfsy1( data );
    data += sizeof(pw_rfsy1);

    cv_cnv_endian_res_rfsy1( data );
    data += sizeof(res_rfsy1);

    cv_cnv_endian_temp_res_rfsy1( data );
    data += sizeof(temp_res_rfsy1);

    cv_cnv_endian_cyc_rfsy1( data );
    data += sizeof(cyc_rfsy1);

    cv_cnv_endian_off_rfsy1( data );
    data += sizeof(off_rfsy1);

    cv_cnv_endian_alpha_rfsy1( data );
    data += sizeof(alpha_rfsy1);

    cv_cnv_endian_thk_rfsy1( data );
    data += sizeof(thk_rfsy1);

    cv_cnv_endian_gscale_rfsy1( data );
    data += sizeof(gscale_rfsy1);

    cv_cnv_endian_flip_rfsy1( data );
    data += sizeof(flip_rfsy1);

    cv_cnv_endian_wg_rfsy1( data );
    data += sizeof(wg_rfsy1);

    cv_cnv_endian_pw_isi_saty1( data );
    data += sizeof(pw_isi_saty1);

    cv_cnv_endian_wg_isi_saty1( data );
    data += sizeof(wg_isi_saty1);

    cv_cnv_endian_pw_rot_update_y1( data );
    data += sizeof(pw_rot_update_y1);

    cv_cnv_endian_wg_rot_update_y1( data );
    data += sizeof(wg_rot_update_y1);

    cv_cnv_endian_a_gyksy1( data );
    data += sizeof(a_gyksy1);

    cv_cnv_endian_ia_gyksy1( data );
    data += sizeof(ia_gyksy1);

    cv_cnv_endian_pw_gyksy1a( data );
    data += sizeof(pw_gyksy1a);

    cv_cnv_endian_pw_gyksy1d( data );
    data += sizeof(pw_gyksy1d);

    cv_cnv_endian_pw_gyksy1( data );
    data += sizeof(pw_gyksy1);

    cv_cnv_endian_wg_gyksy1( data );
    data += sizeof(wg_gyksy1);

    cv_cnv_endian_a_gxksy1( data );
    data += sizeof(a_gxksy1);

    cv_cnv_endian_ia_gxksy1( data );
    data += sizeof(ia_gxksy1);

    cv_cnv_endian_pw_gxksy1a( data );
    data += sizeof(pw_gxksy1a);

    cv_cnv_endian_pw_gxksy1d( data );
    data += sizeof(pw_gxksy1d);

    cv_cnv_endian_pw_gxksy1( data );
    data += sizeof(pw_gxksy1);

    cv_cnv_endian_wg_gxksy1( data );
    data += sizeof(wg_gxksy1);

    cv_cnv_endian_pw_isi_satyk1( data );
    data += sizeof(pw_isi_satyk1);

    cv_cnv_endian_wg_isi_satyk1( data );
    data += sizeof(wg_isi_satyk1);

    cv_cnv_endian_pw_rot_update_yk1( data );
    data += sizeof(pw_rot_update_yk1);

    cv_cnv_endian_wg_rot_update_yk1( data );
    data += sizeof(wg_rot_update_yk1);

    cv_cnv_endian_a_gyrfsy2( data );
    data += sizeof(a_gyrfsy2);

    cv_cnv_endian_ia_gyrfsy2( data );
    data += sizeof(ia_gyrfsy2);

    cv_cnv_endian_pw_gyrfsy2a( data );
    data += sizeof(pw_gyrfsy2a);

    cv_cnv_endian_pw_gyrfsy2d( data );
    data += sizeof(pw_gyrfsy2d);

    cv_cnv_endian_pw_gyrfsy2( data );
    data += sizeof(pw_gyrfsy2);

    cv_cnv_endian_a_rfsy2( data );
    data += sizeof(a_rfsy2);

    cv_cnv_endian_ia_rfsy2( data );
    data += sizeof(ia_rfsy2);

    cv_cnv_endian_pw_rfsy2( data );
    data += sizeof(pw_rfsy2);

    cv_cnv_endian_res_rfsy2( data );
    data += sizeof(res_rfsy2);

    cv_cnv_endian_temp_res_rfsy2( data );
    data += sizeof(temp_res_rfsy2);

    cv_cnv_endian_cyc_rfsy2( data );
    data += sizeof(cyc_rfsy2);

    cv_cnv_endian_off_rfsy2( data );
    data += sizeof(off_rfsy2);

    cv_cnv_endian_alpha_rfsy2( data );
    data += sizeof(alpha_rfsy2);

    cv_cnv_endian_thk_rfsy2( data );
    data += sizeof(thk_rfsy2);

    cv_cnv_endian_gscale_rfsy2( data );
    data += sizeof(gscale_rfsy2);

    cv_cnv_endian_flip_rfsy2( data );
    data += sizeof(flip_rfsy2);

    cv_cnv_endian_wg_rfsy2( data );
    data += sizeof(wg_rfsy2);

    cv_cnv_endian_pw_isi_saty2( data );
    data += sizeof(pw_isi_saty2);

    cv_cnv_endian_wg_isi_saty2( data );
    data += sizeof(wg_isi_saty2);

    cv_cnv_endian_pw_rot_update_y2( data );
    data += sizeof(pw_rot_update_y2);

    cv_cnv_endian_wg_rot_update_y2( data );
    data += sizeof(wg_rot_update_y2);

    cv_cnv_endian_a_gyksy2( data );
    data += sizeof(a_gyksy2);

    cv_cnv_endian_ia_gyksy2( data );
    data += sizeof(ia_gyksy2);

    cv_cnv_endian_pw_gyksy2a( data );
    data += sizeof(pw_gyksy2a);

    cv_cnv_endian_pw_gyksy2d( data );
    data += sizeof(pw_gyksy2d);

    cv_cnv_endian_pw_gyksy2( data );
    data += sizeof(pw_gyksy2);

    cv_cnv_endian_wg_gyksy2( data );
    data += sizeof(wg_gyksy2);

    cv_cnv_endian_a_gxksy2( data );
    data += sizeof(a_gxksy2);

    cv_cnv_endian_ia_gxksy2( data );
    data += sizeof(ia_gxksy2);

    cv_cnv_endian_pw_gxksy2a( data );
    data += sizeof(pw_gxksy2a);

    cv_cnv_endian_pw_gxksy2d( data );
    data += sizeof(pw_gxksy2d);

    cv_cnv_endian_pw_gxksy2( data );
    data += sizeof(pw_gxksy2);

    cv_cnv_endian_wg_gxksy2( data );
    data += sizeof(wg_gxksy2);

    cv_cnv_endian_pw_isi_satyk2( data );
    data += sizeof(pw_isi_satyk2);

    cv_cnv_endian_wg_isi_satyk2( data );
    data += sizeof(wg_isi_satyk2);

    cv_cnv_endian_pw_rot_update_yk2( data );
    data += sizeof(pw_rot_update_yk2);

    cv_cnv_endian_wg_rot_update_yk2( data );
    data += sizeof(wg_rot_update_yk2);

    cv_cnv_endian_a_gzrfsz1( data );
    data += sizeof(a_gzrfsz1);

    cv_cnv_endian_ia_gzrfsz1( data );
    data += sizeof(ia_gzrfsz1);

    cv_cnv_endian_pw_gzrfsz1a( data );
    data += sizeof(pw_gzrfsz1a);

    cv_cnv_endian_pw_gzrfsz1d( data );
    data += sizeof(pw_gzrfsz1d);

    cv_cnv_endian_pw_gzrfsz1( data );
    data += sizeof(pw_gzrfsz1);

    cv_cnv_endian_a_rfsz1( data );
    data += sizeof(a_rfsz1);

    cv_cnv_endian_ia_rfsz1( data );
    data += sizeof(ia_rfsz1);

    cv_cnv_endian_pw_rfsz1( data );
    data += sizeof(pw_rfsz1);

    cv_cnv_endian_res_rfsz1( data );
    data += sizeof(res_rfsz1);

    cv_cnv_endian_temp_res_rfsz1( data );
    data += sizeof(temp_res_rfsz1);

    cv_cnv_endian_cyc_rfsz1( data );
    data += sizeof(cyc_rfsz1);

    cv_cnv_endian_off_rfsz1( data );
    data += sizeof(off_rfsz1);

    cv_cnv_endian_alpha_rfsz1( data );
    data += sizeof(alpha_rfsz1);

    cv_cnv_endian_thk_rfsz1( data );
    data += sizeof(thk_rfsz1);

    cv_cnv_endian_gscale_rfsz1( data );
    data += sizeof(gscale_rfsz1);

    cv_cnv_endian_flip_rfsz1( data );
    data += sizeof(flip_rfsz1);

    cv_cnv_endian_wg_rfsz1( data );
    data += sizeof(wg_rfsz1);

    cv_cnv_endian_pw_isi_satz1( data );
    data += sizeof(pw_isi_satz1);

    cv_cnv_endian_wg_isi_satz1( data );
    data += sizeof(wg_isi_satz1);

    cv_cnv_endian_pw_rot_update_z1( data );
    data += sizeof(pw_rot_update_z1);

    cv_cnv_endian_wg_rot_update_z1( data );
    data += sizeof(wg_rot_update_z1);

    cv_cnv_endian_a_gyksz1( data );
    data += sizeof(a_gyksz1);

    cv_cnv_endian_ia_gyksz1( data );
    data += sizeof(ia_gyksz1);

    cv_cnv_endian_pw_gyksz1a( data );
    data += sizeof(pw_gyksz1a);

    cv_cnv_endian_pw_gyksz1d( data );
    data += sizeof(pw_gyksz1d);

    cv_cnv_endian_pw_gyksz1( data );
    data += sizeof(pw_gyksz1);

    cv_cnv_endian_wg_gyksz1( data );
    data += sizeof(wg_gyksz1);

    cv_cnv_endian_a_gxksz1( data );
    data += sizeof(a_gxksz1);

    cv_cnv_endian_ia_gxksz1( data );
    data += sizeof(ia_gxksz1);

    cv_cnv_endian_pw_gxksz1a( data );
    data += sizeof(pw_gxksz1a);

    cv_cnv_endian_pw_gxksz1d( data );
    data += sizeof(pw_gxksz1d);

    cv_cnv_endian_pw_gxksz1( data );
    data += sizeof(pw_gxksz1);

    cv_cnv_endian_wg_gxksz1( data );
    data += sizeof(wg_gxksz1);

    cv_cnv_endian_pw_isi_satzk1( data );
    data += sizeof(pw_isi_satzk1);

    cv_cnv_endian_wg_isi_satzk1( data );
    data += sizeof(wg_isi_satzk1);

    cv_cnv_endian_pw_rot_update_zk1( data );
    data += sizeof(pw_rot_update_zk1);

    cv_cnv_endian_wg_rot_update_zk1( data );
    data += sizeof(wg_rot_update_zk1);

    cv_cnv_endian_a_gzrfsz2( data );
    data += sizeof(a_gzrfsz2);

    cv_cnv_endian_ia_gzrfsz2( data );
    data += sizeof(ia_gzrfsz2);

    cv_cnv_endian_pw_gzrfsz2a( data );
    data += sizeof(pw_gzrfsz2a);

    cv_cnv_endian_pw_gzrfsz2d( data );
    data += sizeof(pw_gzrfsz2d);

    cv_cnv_endian_pw_gzrfsz2( data );
    data += sizeof(pw_gzrfsz2);

    cv_cnv_endian_a_rfsz2( data );
    data += sizeof(a_rfsz2);

    cv_cnv_endian_ia_rfsz2( data );
    data += sizeof(ia_rfsz2);

    cv_cnv_endian_pw_rfsz2( data );
    data += sizeof(pw_rfsz2);

    cv_cnv_endian_res_rfsz2( data );
    data += sizeof(res_rfsz2);

    cv_cnv_endian_temp_res_rfsz2( data );
    data += sizeof(temp_res_rfsz2);

    cv_cnv_endian_cyc_rfsz2( data );
    data += sizeof(cyc_rfsz2);

    cv_cnv_endian_off_rfsz2( data );
    data += sizeof(off_rfsz2);

    cv_cnv_endian_alpha_rfsz2( data );
    data += sizeof(alpha_rfsz2);

    cv_cnv_endian_thk_rfsz2( data );
    data += sizeof(thk_rfsz2);

    cv_cnv_endian_gscale_rfsz2( data );
    data += sizeof(gscale_rfsz2);

    cv_cnv_endian_flip_rfsz2( data );
    data += sizeof(flip_rfsz2);

    cv_cnv_endian_wg_rfsz2( data );
    data += sizeof(wg_rfsz2);

    cv_cnv_endian_pw_isi_satz2( data );
    data += sizeof(pw_isi_satz2);

    cv_cnv_endian_wg_isi_satz2( data );
    data += sizeof(wg_isi_satz2);

    cv_cnv_endian_pw_rot_update_z2( data );
    data += sizeof(pw_rot_update_z2);

    cv_cnv_endian_wg_rot_update_z2( data );
    data += sizeof(wg_rot_update_z2);

    cv_cnv_endian_a_gyksz2( data );
    data += sizeof(a_gyksz2);

    cv_cnv_endian_ia_gyksz2( data );
    data += sizeof(ia_gyksz2);

    cv_cnv_endian_pw_gyksz2a( data );
    data += sizeof(pw_gyksz2a);

    cv_cnv_endian_pw_gyksz2d( data );
    data += sizeof(pw_gyksz2d);

    cv_cnv_endian_pw_gyksz2( data );
    data += sizeof(pw_gyksz2);

    cv_cnv_endian_wg_gyksz2( data );
    data += sizeof(wg_gyksz2);

    cv_cnv_endian_a_gxksz2( data );
    data += sizeof(a_gxksz2);

    cv_cnv_endian_ia_gxksz2( data );
    data += sizeof(ia_gxksz2);

    cv_cnv_endian_pw_gxksz2a( data );
    data += sizeof(pw_gxksz2a);

    cv_cnv_endian_pw_gxksz2d( data );
    data += sizeof(pw_gxksz2d);

    cv_cnv_endian_pw_gxksz2( data );
    data += sizeof(pw_gxksz2);

    cv_cnv_endian_wg_gxksz2( data );
    data += sizeof(wg_gxksz2);

    cv_cnv_endian_pw_isi_satzk2( data );
    data += sizeof(pw_isi_satzk2);

    cv_cnv_endian_wg_isi_satzk2( data );
    data += sizeof(wg_isi_satzk2);

    cv_cnv_endian_pw_rot_update_zk2( data );
    data += sizeof(pw_rot_update_zk2);

    cv_cnv_endian_wg_rot_update_zk2( data );
    data += sizeof(wg_rot_update_zk2);

    cv_cnv_endian_pw_y_ccs_null( data );
    data += sizeof(pw_y_ccs_null);

    cv_cnv_endian_wg_y_ccs_null( data );
    data += sizeof(wg_y_ccs_null);

    cv_cnv_endian_a_rf1mps1( data );
    data += sizeof(a_rf1mps1);

    cv_cnv_endian_ia_rf1mps1( data );
    data += sizeof(ia_rf1mps1);

    cv_cnv_endian_pw_rf1mps1( data );
    data += sizeof(pw_rf1mps1);

    cv_cnv_endian_res_rf1mps1( data );
    data += sizeof(res_rf1mps1);

    cv_cnv_endian_cyc_rf1mps1( data );
    data += sizeof(cyc_rf1mps1);

    cv_cnv_endian_off_rf1mps1( data );
    data += sizeof(off_rf1mps1);

    cv_cnv_endian_alpha_rf1mps1( data );
    data += sizeof(alpha_rf1mps1);

    cv_cnv_endian_wg_rf1mps1( data );
    data += sizeof(wg_rf1mps1);

    cv_cnv_endian_a_gyrf1mps1( data );
    data += sizeof(a_gyrf1mps1);

    cv_cnv_endian_ia_gyrf1mps1( data );
    data += sizeof(ia_gyrf1mps1);

    cv_cnv_endian_pw_gyrf1mps1a( data );
    data += sizeof(pw_gyrf1mps1a);

    cv_cnv_endian_pw_gyrf1mps1d( data );
    data += sizeof(pw_gyrf1mps1d);

    cv_cnv_endian_pw_gyrf1mps1( data );
    data += sizeof(pw_gyrf1mps1);

    cv_cnv_endian_wg_gyrf1mps1( data );
    data += sizeof(wg_gyrf1mps1);

    cv_cnv_endian_a_gy1mps1( data );
    data += sizeof(a_gy1mps1);

    cv_cnv_endian_ia_gy1mps1( data );
    data += sizeof(ia_gy1mps1);

    cv_cnv_endian_pw_gy1mps1a( data );
    data += sizeof(pw_gy1mps1a);

    cv_cnv_endian_pw_gy1mps1d( data );
    data += sizeof(pw_gy1mps1d);

    cv_cnv_endian_pw_gy1mps1( data );
    data += sizeof(pw_gy1mps1);

    cv_cnv_endian_wg_gy1mps1( data );
    data += sizeof(wg_gy1mps1);

    cv_cnv_endian_a_gzrf1mps1( data );
    data += sizeof(a_gzrf1mps1);

    cv_cnv_endian_ia_gzrf1mps1( data );
    data += sizeof(ia_gzrf1mps1);

    cv_cnv_endian_pw_gzrf1mps1a( data );
    data += sizeof(pw_gzrf1mps1a);

    cv_cnv_endian_pw_gzrf1mps1d( data );
    data += sizeof(pw_gzrf1mps1d);

    cv_cnv_endian_pw_gzrf1mps1( data );
    data += sizeof(pw_gzrf1mps1);

    cv_cnv_endian_wg_gzrf1mps1( data );
    data += sizeof(wg_gzrf1mps1);

    cv_cnv_endian_a_gz1mps1( data );
    data += sizeof(a_gz1mps1);

    cv_cnv_endian_ia_gz1mps1( data );
    data += sizeof(ia_gz1mps1);

    cv_cnv_endian_pw_gz1mps1a( data );
    data += sizeof(pw_gz1mps1a);

    cv_cnv_endian_pw_gz1mps1d( data );
    data += sizeof(pw_gz1mps1d);

    cv_cnv_endian_pw_gz1mps1( data );
    data += sizeof(pw_gz1mps1);

    cv_cnv_endian_wg_gz1mps1( data );
    data += sizeof(wg_gz1mps1);

    cv_cnv_endian_a_gx1mps1( data );
    data += sizeof(a_gx1mps1);

    cv_cnv_endian_ia_gx1mps1( data );
    data += sizeof(ia_gx1mps1);

    cv_cnv_endian_pw_gx1mps1a( data );
    data += sizeof(pw_gx1mps1a);

    cv_cnv_endian_pw_gx1mps1d( data );
    data += sizeof(pw_gx1mps1d);

    cv_cnv_endian_pw_gx1mps1( data );
    data += sizeof(pw_gx1mps1);

    cv_cnv_endian_wg_gx1mps1( data );
    data += sizeof(wg_gx1mps1);

    cv_cnv_endian_a_gzrf2mps1( data );
    data += sizeof(a_gzrf2mps1);

    cv_cnv_endian_ia_gzrf2mps1( data );
    data += sizeof(ia_gzrf2mps1);

    cv_cnv_endian_pw_gzrf2mps1a( data );
    data += sizeof(pw_gzrf2mps1a);

    cv_cnv_endian_pw_gzrf2mps1d( data );
    data += sizeof(pw_gzrf2mps1d);

    cv_cnv_endian_pw_gzrf2mps1( data );
    data += sizeof(pw_gzrf2mps1);

    cv_cnv_endian_a_rf2mps1( data );
    data += sizeof(a_rf2mps1);

    cv_cnv_endian_ia_rf2mps1( data );
    data += sizeof(ia_rf2mps1);

    cv_cnv_endian_pw_rf2mps1( data );
    data += sizeof(pw_rf2mps1);

    cv_cnv_endian_res_rf2mps1( data );
    data += sizeof(res_rf2mps1);

    cv_cnv_endian_temp_res_rf2mps1( data );
    data += sizeof(temp_res_rf2mps1);

    cv_cnv_endian_cyc_rf2mps1( data );
    data += sizeof(cyc_rf2mps1);

    cv_cnv_endian_off_rf2mps1( data );
    data += sizeof(off_rf2mps1);

    cv_cnv_endian_alpha_rf2mps1( data );
    data += sizeof(alpha_rf2mps1);

    cv_cnv_endian_thk_rf2mps1( data );
    data += sizeof(thk_rf2mps1);

    cv_cnv_endian_gscale_rf2mps1( data );
    data += sizeof(gscale_rf2mps1);

    cv_cnv_endian_flip_rf2mps1( data );
    data += sizeof(flip_rf2mps1);

    cv_cnv_endian_wg_rf2mps1( data );
    data += sizeof(wg_rf2mps1);

    cv_cnv_endian_a_gzrf2lmps1( data );
    data += sizeof(a_gzrf2lmps1);

    cv_cnv_endian_ia_gzrf2lmps1( data );
    data += sizeof(ia_gzrf2lmps1);

    cv_cnv_endian_pw_gzrf2lmps1a( data );
    data += sizeof(pw_gzrf2lmps1a);

    cv_cnv_endian_pw_gzrf2lmps1d( data );
    data += sizeof(pw_gzrf2lmps1d);

    cv_cnv_endian_pw_gzrf2lmps1( data );
    data += sizeof(pw_gzrf2lmps1);

    cv_cnv_endian_wg_gzrf2lmps1( data );
    data += sizeof(wg_gzrf2lmps1);

    cv_cnv_endian_a_gzrf2rmps1( data );
    data += sizeof(a_gzrf2rmps1);

    cv_cnv_endian_ia_gzrf2rmps1( data );
    data += sizeof(ia_gzrf2rmps1);

    cv_cnv_endian_pw_gzrf2rmps1a( data );
    data += sizeof(pw_gzrf2rmps1a);

    cv_cnv_endian_pw_gzrf2rmps1d( data );
    data += sizeof(pw_gzrf2rmps1d);

    cv_cnv_endian_pw_gzrf2rmps1( data );
    data += sizeof(pw_gzrf2rmps1);

    cv_cnv_endian_wg_gzrf2rmps1( data );
    data += sizeof(wg_gzrf2rmps1);

    cv_cnv_endian_a_gxwmps1( data );
    data += sizeof(a_gxwmps1);

    cv_cnv_endian_ia_gxwmps1( data );
    data += sizeof(ia_gxwmps1);

    cv_cnv_endian_pw_gxwmps1a( data );
    data += sizeof(pw_gxwmps1a);

    cv_cnv_endian_pw_gxwmps1d( data );
    data += sizeof(pw_gxwmps1d);

    cv_cnv_endian_pw_gxwmps1( data );
    data += sizeof(pw_gxwmps1);

    cv_cnv_endian_wg_gxwmps1( data );
    data += sizeof(wg_gxwmps1);

    cv_cnv_endian_filter_echo1mps1( data );
    data += sizeof(filter_echo1mps1);

    cv_cnv_endian_a_gzrf1cfl( data );
    data += sizeof(a_gzrf1cfl);

    cv_cnv_endian_ia_gzrf1cfl( data );
    data += sizeof(ia_gzrf1cfl);

    cv_cnv_endian_pw_gzrf1cfla( data );
    data += sizeof(pw_gzrf1cfla);

    cv_cnv_endian_pw_gzrf1cfld( data );
    data += sizeof(pw_gzrf1cfld);

    cv_cnv_endian_pw_gzrf1cfl( data );
    data += sizeof(pw_gzrf1cfl);

    cv_cnv_endian_a_rf1cfl( data );
    data += sizeof(a_rf1cfl);

    cv_cnv_endian_ia_rf1cfl( data );
    data += sizeof(ia_rf1cfl);

    cv_cnv_endian_pw_rf1cfl( data );
    data += sizeof(pw_rf1cfl);

    cv_cnv_endian_res_rf1cfl( data );
    data += sizeof(res_rf1cfl);

    cv_cnv_endian_temp_res_rf1cfl( data );
    data += sizeof(temp_res_rf1cfl);

    cv_cnv_endian_cyc_rf1cfl( data );
    data += sizeof(cyc_rf1cfl);

    cv_cnv_endian_off_rf1cfl( data );
    data += sizeof(off_rf1cfl);

    cv_cnv_endian_alpha_rf1cfl( data );
    data += sizeof(alpha_rf1cfl);

    cv_cnv_endian_thk_rf1cfl( data );
    data += sizeof(thk_rf1cfl);

    cv_cnv_endian_gscale_rf1cfl( data );
    data += sizeof(gscale_rf1cfl);

    cv_cnv_endian_flip_rf1cfl( data );
    data += sizeof(flip_rf1cfl);

    cv_cnv_endian_wg_rf1cfl( data );
    data += sizeof(wg_rf1cfl);

    cv_cnv_endian_a_gz1cfl( data );
    data += sizeof(a_gz1cfl);

    cv_cnv_endian_ia_gz1cfl( data );
    data += sizeof(ia_gz1cfl);

    cv_cnv_endian_pw_gz1cfla( data );
    data += sizeof(pw_gz1cfla);

    cv_cnv_endian_pw_gz1cfld( data );
    data += sizeof(pw_gz1cfld);

    cv_cnv_endian_pw_gz1cfl( data );
    data += sizeof(pw_gz1cfl);

    cv_cnv_endian_wg_gz1cfl( data );
    data += sizeof(wg_gz1cfl);

    cv_cnv_endian_filter_cfl_fid( data );
    data += sizeof(filter_cfl_fid);

    cv_cnv_endian_a_gykcfl( data );
    data += sizeof(a_gykcfl);

    cv_cnv_endian_ia_gykcfl( data );
    data += sizeof(ia_gykcfl);

    cv_cnv_endian_pw_gykcfla( data );
    data += sizeof(pw_gykcfla);

    cv_cnv_endian_pw_gykcfld( data );
    data += sizeof(pw_gykcfld);

    cv_cnv_endian_pw_gykcfl( data );
    data += sizeof(pw_gykcfl);

    cv_cnv_endian_wg_gykcfl( data );
    data += sizeof(wg_gykcfl);

    cv_cnv_endian_a_gxkrcvn( data );
    data += sizeof(a_gxkrcvn);

    cv_cnv_endian_ia_gxkrcvn( data );
    data += sizeof(ia_gxkrcvn);

    cv_cnv_endian_pw_gxkrcvna( data );
    data += sizeof(pw_gxkrcvna);

    cv_cnv_endian_pw_gxkrcvnd( data );
    data += sizeof(pw_gxkrcvnd);

    cv_cnv_endian_pw_gxkrcvn( data );
    data += sizeof(pw_gxkrcvn);

    cv_cnv_endian_wg_gxkrcvn( data );
    data += sizeof(wg_gxkrcvn);

    cv_cnv_endian_a_gykrcvn( data );
    data += sizeof(a_gykrcvn);

    cv_cnv_endian_ia_gykrcvn( data );
    data += sizeof(ia_gykrcvn);

    cv_cnv_endian_pw_gykrcvna( data );
    data += sizeof(pw_gykrcvna);

    cv_cnv_endian_pw_gykrcvnd( data );
    data += sizeof(pw_gykrcvnd);

    cv_cnv_endian_pw_gykrcvn( data );
    data += sizeof(pw_gykrcvn);

    cv_cnv_endian_wg_gykrcvn( data );
    data += sizeof(wg_gykrcvn);

    cv_cnv_endian_a_gzkrcvn( data );
    data += sizeof(a_gzkrcvn);

    cv_cnv_endian_ia_gzkrcvn( data );
    data += sizeof(ia_gzkrcvn);

    cv_cnv_endian_pw_gzkrcvna( data );
    data += sizeof(pw_gzkrcvna);

    cv_cnv_endian_pw_gzkrcvnd( data );
    data += sizeof(pw_gzkrcvnd);

    cv_cnv_endian_pw_gzkrcvn( data );
    data += sizeof(pw_gzkrcvn);

    cv_cnv_endian_wg_gzkrcvn( data );
    data += sizeof(wg_gzkrcvn);

    cv_cnv_endian_pw_grd_trig( data );
    data += sizeof(pw_grd_trig);

    cv_cnv_endian_wg_grd_trig( data );
    data += sizeof(wg_grd_trig);

    cv_cnv_endian_a_gxk2rcvn( data );
    data += sizeof(a_gxk2rcvn);

    cv_cnv_endian_ia_gxk2rcvn( data );
    data += sizeof(ia_gxk2rcvn);

    cv_cnv_endian_pw_gxk2rcvna( data );
    data += sizeof(pw_gxk2rcvna);

    cv_cnv_endian_pw_gxk2rcvnd( data );
    data += sizeof(pw_gxk2rcvnd);

    cv_cnv_endian_pw_gxk2rcvn( data );
    data += sizeof(pw_gxk2rcvn);

    cv_cnv_endian_wg_gxk2rcvn( data );
    data += sizeof(wg_gxk2rcvn);

    cv_cnv_endian_a_gyk2rcvn( data );
    data += sizeof(a_gyk2rcvn);

    cv_cnv_endian_ia_gyk2rcvn( data );
    data += sizeof(ia_gyk2rcvn);

    cv_cnv_endian_pw_gyk2rcvna( data );
    data += sizeof(pw_gyk2rcvna);

    cv_cnv_endian_pw_gyk2rcvnd( data );
    data += sizeof(pw_gyk2rcvnd);

    cv_cnv_endian_pw_gyk2rcvn( data );
    data += sizeof(pw_gyk2rcvn);

    cv_cnv_endian_wg_gyk2rcvn( data );
    data += sizeof(wg_gyk2rcvn);

    cv_cnv_endian_a_gzk2rcvn( data );
    data += sizeof(a_gzk2rcvn);

    cv_cnv_endian_ia_gzk2rcvn( data );
    data += sizeof(ia_gzk2rcvn);

    cv_cnv_endian_pw_gzk2rcvna( data );
    data += sizeof(pw_gzk2rcvna);

    cv_cnv_endian_pw_gzk2rcvnd( data );
    data += sizeof(pw_gzk2rcvnd);

    cv_cnv_endian_pw_gzk2rcvn( data );
    data += sizeof(pw_gzk2rcvn);

    cv_cnv_endian_wg_gzk2rcvn( data );
    data += sizeof(wg_gzk2rcvn);

    cv_cnv_endian_pw_rcvn_wait( data );
    data += sizeof(pw_rcvn_wait);

    cv_cnv_endian_wg_rcvn_wait( data );
    data += sizeof(wg_rcvn_wait);

    cv_cnv_endian_ia_rcvrbl( data );
    data += sizeof(ia_rcvrbl);

    cv_cnv_endian_filter_rcvn_fid( data );
    data += sizeof(filter_rcvn_fid);

    cv_cnv_endian_ia_rcvrbl2( data );
    data += sizeof(ia_rcvrbl2);

    cv_cnv_endian_a_gzrf0cfh( data );
    data += sizeof(a_gzrf0cfh);

    cv_cnv_endian_ia_gzrf0cfh( data );
    data += sizeof(ia_gzrf0cfh);

    cv_cnv_endian_pw_gzrf0cfha( data );
    data += sizeof(pw_gzrf0cfha);

    cv_cnv_endian_pw_gzrf0cfhd( data );
    data += sizeof(pw_gzrf0cfhd);

    cv_cnv_endian_pw_gzrf0cfh( data );
    data += sizeof(pw_gzrf0cfh);

    cv_cnv_endian_res_gzrf0cfh( data );
    data += sizeof(res_gzrf0cfh);

    cv_cnv_endian_a_rf0cfh( data );
    data += sizeof(a_rf0cfh);

    cv_cnv_endian_ia_rf0cfh( data );
    data += sizeof(ia_rf0cfh);

    cv_cnv_endian_pw_rf0cfh( data );
    data += sizeof(pw_rf0cfh);

    cv_cnv_endian_res_rf0cfh( data );
    data += sizeof(res_rf0cfh);

    cv_cnv_endian_cyc_rf0cfh( data );
    data += sizeof(cyc_rf0cfh);

    cv_cnv_endian_off_rf0cfh( data );
    data += sizeof(off_rf0cfh);

    cv_cnv_endian_alpha_rf0cfh( data );
    data += sizeof(alpha_rf0cfh);

    cv_cnv_endian_thk_rf0cfh( data );
    data += sizeof(thk_rf0cfh);

    cv_cnv_endian_gscale_rf0cfh( data );
    data += sizeof(gscale_rf0cfh);

    cv_cnv_endian_flip_rf0cfh( data );
    data += sizeof(flip_rf0cfh);

    cv_cnv_endian_wg_rf0cfh( data );
    data += sizeof(wg_rf0cfh);

    cv_cnv_endian_a_omegarf0cfh( data );
    data += sizeof(a_omegarf0cfh);

    cv_cnv_endian_ia_omegarf0cfh( data );
    data += sizeof(ia_omegarf0cfh);

    cv_cnv_endian_pw_omegarf0cfh( data );
    data += sizeof(pw_omegarf0cfh);

    cv_cnv_endian_res_omegarf0cfh( data );
    data += sizeof(res_omegarf0cfh);

    cv_cnv_endian_off_omegarf0cfh( data );
    data += sizeof(off_omegarf0cfh);

    cv_cnv_endian_rfslot_omegarf0cfh( data );
    data += sizeof(rfslot_omegarf0cfh);

    cv_cnv_endian_gscale_omegarf0cfh( data );
    data += sizeof(gscale_omegarf0cfh);

    cv_cnv_endian_n_omegarf0cfh( data );
    data += sizeof(n_omegarf0cfh);

    cv_cnv_endian_wg_omegarf0cfh( data );
    data += sizeof(wg_omegarf0cfh);

    cv_cnv_endian_a_gyrf0kcfh( data );
    data += sizeof(a_gyrf0kcfh);

    cv_cnv_endian_ia_gyrf0kcfh( data );
    data += sizeof(ia_gyrf0kcfh);

    cv_cnv_endian_pw_gyrf0kcfha( data );
    data += sizeof(pw_gyrf0kcfha);

    cv_cnv_endian_pw_gyrf0kcfhd( data );
    data += sizeof(pw_gyrf0kcfhd);

    cv_cnv_endian_pw_gyrf0kcfh( data );
    data += sizeof(pw_gyrf0kcfh);

    cv_cnv_endian_wg_gyrf0kcfh( data );
    data += sizeof(wg_gyrf0kcfh);

    cv_cnv_endian_pw_zticfh( data );
    data += sizeof(pw_zticfh);

    cv_cnv_endian_wg_zticfh( data );
    data += sizeof(wg_zticfh);

    cv_cnv_endian_pw_rticfh( data );
    data += sizeof(pw_rticfh);

    cv_cnv_endian_wg_rticfh( data );
    data += sizeof(wg_rticfh);

    cv_cnv_endian_pw_xticfh( data );
    data += sizeof(pw_xticfh);

    cv_cnv_endian_wg_xticfh( data );
    data += sizeof(wg_xticfh);

    cv_cnv_endian_pw_yticfh( data );
    data += sizeof(pw_yticfh);

    cv_cnv_endian_wg_yticfh( data );
    data += sizeof(wg_yticfh);

    cv_cnv_endian_pw_sticfh( data );
    data += sizeof(pw_sticfh);

    cv_cnv_endian_wg_sticfh( data );
    data += sizeof(wg_sticfh);

    cv_cnv_endian_a_gzrf1cfh( data );
    data += sizeof(a_gzrf1cfh);

    cv_cnv_endian_ia_gzrf1cfh( data );
    data += sizeof(ia_gzrf1cfh);

    cv_cnv_endian_pw_gzrf1cfha( data );
    data += sizeof(pw_gzrf1cfha);

    cv_cnv_endian_pw_gzrf1cfhd( data );
    data += sizeof(pw_gzrf1cfhd);

    cv_cnv_endian_pw_gzrf1cfh( data );
    data += sizeof(pw_gzrf1cfh);

    cv_cnv_endian_a_rf1cfh( data );
    data += sizeof(a_rf1cfh);

    cv_cnv_endian_ia_rf1cfh( data );
    data += sizeof(ia_rf1cfh);

    cv_cnv_endian_pw_rf1cfh( data );
    data += sizeof(pw_rf1cfh);

    cv_cnv_endian_res_rf1cfh( data );
    data += sizeof(res_rf1cfh);

    cv_cnv_endian_temp_res_rf1cfh( data );
    data += sizeof(temp_res_rf1cfh);

    cv_cnv_endian_cyc_rf1cfh( data );
    data += sizeof(cyc_rf1cfh);

    cv_cnv_endian_off_rf1cfh( data );
    data += sizeof(off_rf1cfh);

    cv_cnv_endian_alpha_rf1cfh( data );
    data += sizeof(alpha_rf1cfh);

    cv_cnv_endian_thk_rf1cfh( data );
    data += sizeof(thk_rf1cfh);

    cv_cnv_endian_gscale_rf1cfh( data );
    data += sizeof(gscale_rf1cfh);

    cv_cnv_endian_flip_rf1cfh( data );
    data += sizeof(flip_rf1cfh);

    cv_cnv_endian_wg_rf1cfh( data );
    data += sizeof(wg_rf1cfh);

    cv_cnv_endian_a_rf2cfh( data );
    data += sizeof(a_rf2cfh);

    cv_cnv_endian_ia_rf2cfh( data );
    data += sizeof(ia_rf2cfh);

    cv_cnv_endian_pw_rf2cfh( data );
    data += sizeof(pw_rf2cfh);

    cv_cnv_endian_res_rf2cfh( data );
    data += sizeof(res_rf2cfh);

    cv_cnv_endian_cyc_rf2cfh( data );
    data += sizeof(cyc_rf2cfh);

    cv_cnv_endian_off_rf2cfh( data );
    data += sizeof(off_rf2cfh);

    cv_cnv_endian_alpha_rf2cfh( data );
    data += sizeof(alpha_rf2cfh);

    cv_cnv_endian_wg_rf2cfh( data );
    data += sizeof(wg_rf2cfh);

    cv_cnv_endian_a_rf3cfh( data );
    data += sizeof(a_rf3cfh);

    cv_cnv_endian_ia_rf3cfh( data );
    data += sizeof(ia_rf3cfh);

    cv_cnv_endian_pw_rf3cfh( data );
    data += sizeof(pw_rf3cfh);

    cv_cnv_endian_res_rf3cfh( data );
    data += sizeof(res_rf3cfh);

    cv_cnv_endian_cyc_rf3cfh( data );
    data += sizeof(cyc_rf3cfh);

    cv_cnv_endian_off_rf3cfh( data );
    data += sizeof(off_rf3cfh);

    cv_cnv_endian_alpha_rf3cfh( data );
    data += sizeof(alpha_rf3cfh);

    cv_cnv_endian_wg_rf3cfh( data );
    data += sizeof(wg_rf3cfh);

    cv_cnv_endian_a_rf4cfh( data );
    data += sizeof(a_rf4cfh);

    cv_cnv_endian_ia_rf4cfh( data );
    data += sizeof(ia_rf4cfh);

    cv_cnv_endian_pw_rf4cfh( data );
    data += sizeof(pw_rf4cfh);

    cv_cnv_endian_res_rf4cfh( data );
    data += sizeof(res_rf4cfh);

    cv_cnv_endian_cyc_rf4cfh( data );
    data += sizeof(cyc_rf4cfh);

    cv_cnv_endian_off_rf4cfh( data );
    data += sizeof(off_rf4cfh);

    cv_cnv_endian_alpha_rf4cfh( data );
    data += sizeof(alpha_rf4cfh);

    cv_cnv_endian_wg_rf4cfh( data );
    data += sizeof(wg_rf4cfh);

    cv_cnv_endian_a_gxrf2cfh( data );
    data += sizeof(a_gxrf2cfh);

    cv_cnv_endian_ia_gxrf2cfh( data );
    data += sizeof(ia_gxrf2cfh);

    cv_cnv_endian_pw_gxrf2cfha( data );
    data += sizeof(pw_gxrf2cfha);

    cv_cnv_endian_pw_gxrf2cfhd( data );
    data += sizeof(pw_gxrf2cfhd);

    cv_cnv_endian_pw_gxrf2cfh( data );
    data += sizeof(pw_gxrf2cfh);

    cv_cnv_endian_wg_gxrf2cfh( data );
    data += sizeof(wg_gxrf2cfh);

    cv_cnv_endian_a_gyrf2cfh( data );
    data += sizeof(a_gyrf2cfh);

    cv_cnv_endian_ia_gyrf2cfh( data );
    data += sizeof(ia_gyrf2cfh);

    cv_cnv_endian_pw_gyrf2cfha( data );
    data += sizeof(pw_gyrf2cfha);

    cv_cnv_endian_pw_gyrf2cfhd( data );
    data += sizeof(pw_gyrf2cfhd);

    cv_cnv_endian_pw_gyrf2cfh( data );
    data += sizeof(pw_gyrf2cfh);

    cv_cnv_endian_wg_gyrf2cfh( data );
    data += sizeof(wg_gyrf2cfh);

    cv_cnv_endian_a_gzrf2lcfh( data );
    data += sizeof(a_gzrf2lcfh);

    cv_cnv_endian_ia_gzrf2lcfh( data );
    data += sizeof(ia_gzrf2lcfh);

    cv_cnv_endian_pw_gzrf2lcfha( data );
    data += sizeof(pw_gzrf2lcfha);

    cv_cnv_endian_pw_gzrf2lcfhd( data );
    data += sizeof(pw_gzrf2lcfhd);

    cv_cnv_endian_pw_gzrf2lcfh( data );
    data += sizeof(pw_gzrf2lcfh);

    cv_cnv_endian_wg_gzrf2lcfh( data );
    data += sizeof(wg_gzrf2lcfh);

    cv_cnv_endian_a_gzrf2rcfh( data );
    data += sizeof(a_gzrf2rcfh);

    cv_cnv_endian_ia_gzrf2rcfh( data );
    data += sizeof(ia_gzrf2rcfh);

    cv_cnv_endian_pw_gzrf2rcfha( data );
    data += sizeof(pw_gzrf2rcfha);

    cv_cnv_endian_pw_gzrf2rcfhd( data );
    data += sizeof(pw_gzrf2rcfhd);

    cv_cnv_endian_pw_gzrf2rcfh( data );
    data += sizeof(pw_gzrf2rcfh);

    cv_cnv_endian_wg_gzrf2rcfh( data );
    data += sizeof(wg_gzrf2rcfh);

    cv_cnv_endian_a_gyrf3cfh( data );
    data += sizeof(a_gyrf3cfh);

    cv_cnv_endian_ia_gyrf3cfh( data );
    data += sizeof(ia_gyrf3cfh);

    cv_cnv_endian_pw_gyrf3cfha( data );
    data += sizeof(pw_gyrf3cfha);

    cv_cnv_endian_pw_gyrf3cfhd( data );
    data += sizeof(pw_gyrf3cfhd);

    cv_cnv_endian_pw_gyrf3cfh( data );
    data += sizeof(pw_gyrf3cfh);

    cv_cnv_endian_wg_gyrf3cfh( data );
    data += sizeof(wg_gyrf3cfh);

    cv_cnv_endian_a_gzrf3lcfh( data );
    data += sizeof(a_gzrf3lcfh);

    cv_cnv_endian_ia_gzrf3lcfh( data );
    data += sizeof(ia_gzrf3lcfh);

    cv_cnv_endian_pw_gzrf3lcfha( data );
    data += sizeof(pw_gzrf3lcfha);

    cv_cnv_endian_pw_gzrf3lcfhd( data );
    data += sizeof(pw_gzrf3lcfhd);

    cv_cnv_endian_pw_gzrf3lcfh( data );
    data += sizeof(pw_gzrf3lcfh);

    cv_cnv_endian_wg_gzrf3lcfh( data );
    data += sizeof(wg_gzrf3lcfh);

    cv_cnv_endian_a_gzrf3rcfh( data );
    data += sizeof(a_gzrf3rcfh);

    cv_cnv_endian_ia_gzrf3rcfh( data );
    data += sizeof(ia_gzrf3rcfh);

    cv_cnv_endian_pw_gzrf3rcfha( data );
    data += sizeof(pw_gzrf3rcfha);

    cv_cnv_endian_pw_gzrf3rcfhd( data );
    data += sizeof(pw_gzrf3rcfhd);

    cv_cnv_endian_pw_gzrf3rcfh( data );
    data += sizeof(pw_gzrf3rcfh);

    cv_cnv_endian_wg_gzrf3rcfh( data );
    data += sizeof(wg_gzrf3rcfh);

    cv_cnv_endian_a_gy1cfh( data );
    data += sizeof(a_gy1cfh);

    cv_cnv_endian_ia_gy1cfh( data );
    data += sizeof(ia_gy1cfh);

    cv_cnv_endian_pw_gy1cfha( data );
    data += sizeof(pw_gy1cfha);

    cv_cnv_endian_pw_gy1cfhd( data );
    data += sizeof(pw_gy1cfhd);

    cv_cnv_endian_pw_gy1cfh( data );
    data += sizeof(pw_gy1cfh);

    cv_cnv_endian_wg_gy1cfh( data );
    data += sizeof(wg_gy1cfh);

    cv_cnv_endian_a_gx1cfh( data );
    data += sizeof(a_gx1cfh);

    cv_cnv_endian_ia_gx1cfh( data );
    data += sizeof(ia_gx1cfh);

    cv_cnv_endian_pw_gx1cfha( data );
    data += sizeof(pw_gx1cfha);

    cv_cnv_endian_pw_gx1cfhd( data );
    data += sizeof(pw_gx1cfhd);

    cv_cnv_endian_pw_gx1cfh( data );
    data += sizeof(pw_gx1cfh);

    cv_cnv_endian_wg_gx1cfh( data );
    data += sizeof(wg_gx1cfh);

    cv_cnv_endian_a_gzrf4cfh( data );
    data += sizeof(a_gzrf4cfh);

    cv_cnv_endian_ia_gzrf4cfh( data );
    data += sizeof(ia_gzrf4cfh);

    cv_cnv_endian_pw_gzrf4cfha( data );
    data += sizeof(pw_gzrf4cfha);

    cv_cnv_endian_pw_gzrf4cfhd( data );
    data += sizeof(pw_gzrf4cfhd);

    cv_cnv_endian_pw_gzrf4cfh( data );
    data += sizeof(pw_gzrf4cfh);

    cv_cnv_endian_wg_gzrf4cfh( data );
    data += sizeof(wg_gzrf4cfh);

    cv_cnv_endian_pw_isi_slice1( data );
    data += sizeof(pw_isi_slice1);

    cv_cnv_endian_wg_isi_slice1( data );
    data += sizeof(wg_isi_slice1);

    cv_cnv_endian_pw_rot_slice1( data );
    data += sizeof(pw_rot_slice1);

    cv_cnv_endian_wg_rot_slice1( data );
    data += sizeof(wg_rot_slice1);

    cv_cnv_endian_pw_isi_slice2( data );
    data += sizeof(pw_isi_slice2);

    cv_cnv_endian_wg_isi_slice2( data );
    data += sizeof(wg_isi_slice2);

    cv_cnv_endian_pw_rot_slice2( data );
    data += sizeof(pw_rot_slice2);

    cv_cnv_endian_wg_rot_slice2( data );
    data += sizeof(wg_rot_slice2);

    cv_cnv_endian_a_gzrf4lcfh( data );
    data += sizeof(a_gzrf4lcfh);

    cv_cnv_endian_ia_gzrf4lcfh( data );
    data += sizeof(ia_gzrf4lcfh);

    cv_cnv_endian_pw_gzrf4lcfha( data );
    data += sizeof(pw_gzrf4lcfha);

    cv_cnv_endian_pw_gzrf4lcfhd( data );
    data += sizeof(pw_gzrf4lcfhd);

    cv_cnv_endian_pw_gzrf4lcfh( data );
    data += sizeof(pw_gzrf4lcfh);

    cv_cnv_endian_wg_gzrf4lcfh( data );
    data += sizeof(wg_gzrf4lcfh);

    cv_cnv_endian_a_gzrf4rcfh( data );
    data += sizeof(a_gzrf4rcfh);

    cv_cnv_endian_ia_gzrf4rcfh( data );
    data += sizeof(ia_gzrf4rcfh);

    cv_cnv_endian_pw_gzrf4rcfha( data );
    data += sizeof(pw_gzrf4rcfha);

    cv_cnv_endian_pw_gzrf4rcfhd( data );
    data += sizeof(pw_gzrf4rcfhd);

    cv_cnv_endian_pw_gzrf4rcfh( data );
    data += sizeof(pw_gzrf4rcfh);

    cv_cnv_endian_wg_gzrf4rcfh( data );
    data += sizeof(wg_gzrf4rcfh);

    cv_cnv_endian_filter_cfh_fid( data );
    data += sizeof(filter_cfh_fid);

    cv_cnv_endian_a_gykcfh( data );
    data += sizeof(a_gykcfh);

    cv_cnv_endian_ia_gykcfh( data );
    data += sizeof(ia_gykcfh);

    cv_cnv_endian_pw_gykcfha( data );
    data += sizeof(pw_gykcfha);

    cv_cnv_endian_pw_gykcfhd( data );
    data += sizeof(pw_gykcfhd);

    cv_cnv_endian_pw_gykcfh( data );
    data += sizeof(pw_gykcfh);

    cv_cnv_endian_wg_gykcfh( data );
    data += sizeof(wg_gykcfh);

    cv_cnv_endian_ia_contrfhubsel( data );
    data += sizeof(ia_contrfhubsel);

    cv_cnv_endian_ia_contrfsel( data );
    data += sizeof(ia_contrfsel);

    cv_cnv_endian_pw_csw_wait( data );
    data += sizeof(pw_csw_wait);

    cv_cnv_endian_wg_csw_wait( data );
    data += sizeof(wg_csw_wait);

    cv_cnv_endian_a_gzrf1ftg( data );
    data += sizeof(a_gzrf1ftg);

    cv_cnv_endian_ia_gzrf1ftg( data );
    data += sizeof(ia_gzrf1ftg);

    cv_cnv_endian_pw_gzrf1ftga( data );
    data += sizeof(pw_gzrf1ftga);

    cv_cnv_endian_pw_gzrf1ftgd( data );
    data += sizeof(pw_gzrf1ftgd);

    cv_cnv_endian_pw_gzrf1ftg( data );
    data += sizeof(pw_gzrf1ftg);

    cv_cnv_endian_a_rf1ftg( data );
    data += sizeof(a_rf1ftg);

    cv_cnv_endian_ia_rf1ftg( data );
    data += sizeof(ia_rf1ftg);

    cv_cnv_endian_pw_rf1ftg( data );
    data += sizeof(pw_rf1ftg);

    cv_cnv_endian_res_rf1ftg( data );
    data += sizeof(res_rf1ftg);

    cv_cnv_endian_temp_res_rf1ftg( data );
    data += sizeof(temp_res_rf1ftg);

    cv_cnv_endian_cyc_rf1ftg( data );
    data += sizeof(cyc_rf1ftg);

    cv_cnv_endian_off_rf1ftg( data );
    data += sizeof(off_rf1ftg);

    cv_cnv_endian_alpha_rf1ftg( data );
    data += sizeof(alpha_rf1ftg);

    cv_cnv_endian_thk_rf1ftg( data );
    data += sizeof(thk_rf1ftg);

    cv_cnv_endian_gscale_rf1ftg( data );
    data += sizeof(gscale_rf1ftg);

    cv_cnv_endian_flip_rf1ftg( data );
    data += sizeof(flip_rf1ftg);

    cv_cnv_endian_wg_rf1ftg( data );
    data += sizeof(wg_rf1ftg);

    cv_cnv_endian_a_gz1ftg( data );
    data += sizeof(a_gz1ftg);

    cv_cnv_endian_ia_gz1ftg( data );
    data += sizeof(ia_gz1ftg);

    cv_cnv_endian_pw_gz1ftga( data );
    data += sizeof(pw_gz1ftga);

    cv_cnv_endian_pw_gz1ftgd( data );
    data += sizeof(pw_gz1ftgd);

    cv_cnv_endian_pw_gz1ftg( data );
    data += sizeof(pw_gz1ftg);

    cv_cnv_endian_wg_gz1ftg( data );
    data += sizeof(wg_gz1ftg);

    cv_cnv_endian_a_gzrf2ftg( data );
    data += sizeof(a_gzrf2ftg);

    cv_cnv_endian_ia_gzrf2ftg( data );
    data += sizeof(ia_gzrf2ftg);

    cv_cnv_endian_pw_gzrf2ftga( data );
    data += sizeof(pw_gzrf2ftga);

    cv_cnv_endian_pw_gzrf2ftgd( data );
    data += sizeof(pw_gzrf2ftgd);

    cv_cnv_endian_pw_gzrf2ftg( data );
    data += sizeof(pw_gzrf2ftg);

    cv_cnv_endian_a_rf2ftg( data );
    data += sizeof(a_rf2ftg);

    cv_cnv_endian_ia_rf2ftg( data );
    data += sizeof(ia_rf2ftg);

    cv_cnv_endian_pw_rf2ftg( data );
    data += sizeof(pw_rf2ftg);

    cv_cnv_endian_res_rf2ftg( data );
    data += sizeof(res_rf2ftg);

    cv_cnv_endian_temp_res_rf2ftg( data );
    data += sizeof(temp_res_rf2ftg);

    cv_cnv_endian_cyc_rf2ftg( data );
    data += sizeof(cyc_rf2ftg);

    cv_cnv_endian_off_rf2ftg( data );
    data += sizeof(off_rf2ftg);

    cv_cnv_endian_alpha_rf2ftg( data );
    data += sizeof(alpha_rf2ftg);

    cv_cnv_endian_thk_rf2ftg( data );
    data += sizeof(thk_rf2ftg);

    cv_cnv_endian_gscale_rf2ftg( data );
    data += sizeof(gscale_rf2ftg);

    cv_cnv_endian_flip_rf2ftg( data );
    data += sizeof(flip_rf2ftg);

    cv_cnv_endian_wg_rf2ftg( data );
    data += sizeof(wg_rf2ftg);

    cv_cnv_endian_a_gz2ftg( data );
    data += sizeof(a_gz2ftg);

    cv_cnv_endian_ia_gz2ftg( data );
    data += sizeof(ia_gz2ftg);

    cv_cnv_endian_pw_gz2ftga( data );
    data += sizeof(pw_gz2ftga);

    cv_cnv_endian_pw_gz2ftgd( data );
    data += sizeof(pw_gz2ftgd);

    cv_cnv_endian_pw_gz2ftg( data );
    data += sizeof(pw_gz2ftg);

    cv_cnv_endian_wg_gz2ftg( data );
    data += sizeof(wg_gz2ftg);

    cv_cnv_endian_a_gzrf3ftg( data );
    data += sizeof(a_gzrf3ftg);

    cv_cnv_endian_ia_gzrf3ftg( data );
    data += sizeof(ia_gzrf3ftg);

    cv_cnv_endian_pw_gzrf3ftga( data );
    data += sizeof(pw_gzrf3ftga);

    cv_cnv_endian_pw_gzrf3ftgd( data );
    data += sizeof(pw_gzrf3ftgd);

    cv_cnv_endian_pw_gzrf3ftg( data );
    data += sizeof(pw_gzrf3ftg);

    cv_cnv_endian_a_rf3ftg( data );
    data += sizeof(a_rf3ftg);

    cv_cnv_endian_ia_rf3ftg( data );
    data += sizeof(ia_rf3ftg);

    cv_cnv_endian_pw_rf3ftg( data );
    data += sizeof(pw_rf3ftg);

    cv_cnv_endian_res_rf3ftg( data );
    data += sizeof(res_rf3ftg);

    cv_cnv_endian_temp_res_rf3ftg( data );
    data += sizeof(temp_res_rf3ftg);

    cv_cnv_endian_cyc_rf3ftg( data );
    data += sizeof(cyc_rf3ftg);

    cv_cnv_endian_off_rf3ftg( data );
    data += sizeof(off_rf3ftg);

    cv_cnv_endian_alpha_rf3ftg( data );
    data += sizeof(alpha_rf3ftg);

    cv_cnv_endian_thk_rf3ftg( data );
    data += sizeof(thk_rf3ftg);

    cv_cnv_endian_gscale_rf3ftg( data );
    data += sizeof(gscale_rf3ftg);

    cv_cnv_endian_flip_rf3ftg( data );
    data += sizeof(flip_rf3ftg);

    cv_cnv_endian_wg_rf3ftg( data );
    data += sizeof(wg_rf3ftg);

    cv_cnv_endian_a_gz3ftg( data );
    data += sizeof(a_gz3ftg);

    cv_cnv_endian_ia_gz3ftg( data );
    data += sizeof(ia_gz3ftg);

    cv_cnv_endian_pw_gz3ftga( data );
    data += sizeof(pw_gz3ftga);

    cv_cnv_endian_pw_gz3ftgd( data );
    data += sizeof(pw_gz3ftgd);

    cv_cnv_endian_pw_gz3ftg( data );
    data += sizeof(pw_gz3ftg);

    cv_cnv_endian_wg_gz3ftg( data );
    data += sizeof(wg_gz3ftg);

    cv_cnv_endian_a_gx1ftg( data );
    data += sizeof(a_gx1ftg);

    cv_cnv_endian_ia_gx1ftg( data );
    data += sizeof(ia_gx1ftg);

    cv_cnv_endian_pw_gx1ftga( data );
    data += sizeof(pw_gx1ftga);

    cv_cnv_endian_pw_gx1ftgd( data );
    data += sizeof(pw_gx1ftgd);

    cv_cnv_endian_pw_gx1ftg( data );
    data += sizeof(pw_gx1ftg);

    cv_cnv_endian_wg_gx1ftg( data );
    data += sizeof(wg_gx1ftg);

    cv_cnv_endian_a_gx1bftg( data );
    data += sizeof(a_gx1bftg);

    cv_cnv_endian_ia_gx1bftg( data );
    data += sizeof(ia_gx1bftg);

    cv_cnv_endian_pw_gx1bftga( data );
    data += sizeof(pw_gx1bftga);

    cv_cnv_endian_pw_gx1bftgd( data );
    data += sizeof(pw_gx1bftgd);

    cv_cnv_endian_pw_gx1bftg( data );
    data += sizeof(pw_gx1bftg);

    cv_cnv_endian_wg_gx1bftg( data );
    data += sizeof(wg_gx1bftg);

    cv_cnv_endian_a_gxw1ftg( data );
    data += sizeof(a_gxw1ftg);

    cv_cnv_endian_ia_gxw1ftg( data );
    data += sizeof(ia_gxw1ftg);

    cv_cnv_endian_pw_gxw1ftga( data );
    data += sizeof(pw_gxw1ftga);

    cv_cnv_endian_pw_gxw1ftgd( data );
    data += sizeof(pw_gxw1ftgd);

    cv_cnv_endian_pw_gxw1ftg( data );
    data += sizeof(pw_gxw1ftg);

    cv_cnv_endian_wg_gxw1ftg( data );
    data += sizeof(wg_gxw1ftg);

    cv_cnv_endian_a_postgxw1ftg( data );
    data += sizeof(a_postgxw1ftg);

    cv_cnv_endian_ia_postgxw1ftg( data );
    data += sizeof(ia_postgxw1ftg);

    cv_cnv_endian_pw_postgxw1ftga( data );
    data += sizeof(pw_postgxw1ftga);

    cv_cnv_endian_pw_postgxw1ftgd( data );
    data += sizeof(pw_postgxw1ftgd);

    cv_cnv_endian_pw_postgxw1ftg( data );
    data += sizeof(pw_postgxw1ftg);

    cv_cnv_endian_wg_postgxw1ftg( data );
    data += sizeof(wg_postgxw1ftg);

    cv_cnv_endian_filter_echo1ftg( data );
    data += sizeof(filter_echo1ftg);

    cv_cnv_endian_a_gz2bftg( data );
    data += sizeof(a_gz2bftg);

    cv_cnv_endian_ia_gz2bftg( data );
    data += sizeof(ia_gz2bftg);

    cv_cnv_endian_pw_gz2bftga( data );
    data += sizeof(pw_gz2bftga);

    cv_cnv_endian_pw_gz2bftgd( data );
    data += sizeof(pw_gz2bftgd);

    cv_cnv_endian_pw_gz2bftg( data );
    data += sizeof(pw_gz2bftg);

    cv_cnv_endian_wg_gz2bftg( data );
    data += sizeof(wg_gz2bftg);

    cv_cnv_endian_a_gx2ftg( data );
    data += sizeof(a_gx2ftg);

    cv_cnv_endian_ia_gx2ftg( data );
    data += sizeof(ia_gx2ftg);

    cv_cnv_endian_pw_gx2ftga( data );
    data += sizeof(pw_gx2ftga);

    cv_cnv_endian_pw_gx2ftgd( data );
    data += sizeof(pw_gx2ftgd);

    cv_cnv_endian_pw_gx2ftg( data );
    data += sizeof(pw_gx2ftg);

    cv_cnv_endian_wg_gx2ftg( data );
    data += sizeof(wg_gx2ftg);

    cv_cnv_endian_a_gxw2ftg( data );
    data += sizeof(a_gxw2ftg);

    cv_cnv_endian_ia_gxw2ftg( data );
    data += sizeof(ia_gxw2ftg);

    cv_cnv_endian_pw_gxw2ftga( data );
    data += sizeof(pw_gxw2ftga);

    cv_cnv_endian_pw_gxw2ftgd( data );
    data += sizeof(pw_gxw2ftgd);

    cv_cnv_endian_pw_gxw2ftg( data );
    data += sizeof(pw_gxw2ftg);

    cv_cnv_endian_wg_gxw2ftg( data );
    data += sizeof(wg_gxw2ftg);

    cv_cnv_endian_a_gx2test( data );
    data += sizeof(a_gx2test);

    cv_cnv_endian_ia_gx2test( data );
    data += sizeof(ia_gx2test);

    cv_cnv_endian_pw_gx2testa( data );
    data += sizeof(pw_gx2testa);

    cv_cnv_endian_pw_gx2testd( data );
    data += sizeof(pw_gx2testd);

    cv_cnv_endian_pw_gx2test( data );
    data += sizeof(pw_gx2test);

    cv_cnv_endian_wg_gx2test( data );
    data += sizeof(wg_gx2test);

    cv_cnv_endian_filter_echo2ftg( data );
    data += sizeof(filter_echo2ftg);

    cv_cnv_endian_a_rf1xtg( data );
    data += sizeof(a_rf1xtg);

    cv_cnv_endian_ia_rf1xtg( data );
    data += sizeof(ia_rf1xtg);

    cv_cnv_endian_pw_rf1xtg( data );
    data += sizeof(pw_rf1xtg);

    cv_cnv_endian_res_rf1xtg( data );
    data += sizeof(res_rf1xtg);

    cv_cnv_endian_cyc_rf1xtg( data );
    data += sizeof(cyc_rf1xtg);

    cv_cnv_endian_off_rf1xtg( data );
    data += sizeof(off_rf1xtg);

    cv_cnv_endian_alpha_rf1xtg( data );
    data += sizeof(alpha_rf1xtg);

    cv_cnv_endian_wg_rf1xtg( data );
    data += sizeof(wg_rf1xtg);

    cv_cnv_endian_a_gyrf1xtg( data );
    data += sizeof(a_gyrf1xtg);

    cv_cnv_endian_ia_gyrf1xtg( data );
    data += sizeof(ia_gyrf1xtg);

    cv_cnv_endian_pw_gyrf1xtga( data );
    data += sizeof(pw_gyrf1xtga);

    cv_cnv_endian_pw_gyrf1xtgd( data );
    data += sizeof(pw_gyrf1xtgd);

    cv_cnv_endian_pw_gyrf1xtg( data );
    data += sizeof(pw_gyrf1xtg);

    cv_cnv_endian_wg_gyrf1xtg( data );
    data += sizeof(wg_gyrf1xtg);

    cv_cnv_endian_a_gzrf1xtg( data );
    data += sizeof(a_gzrf1xtg);

    cv_cnv_endian_ia_gzrf1xtg( data );
    data += sizeof(ia_gzrf1xtg);

    cv_cnv_endian_pw_gzrf1xtga( data );
    data += sizeof(pw_gzrf1xtga);

    cv_cnv_endian_pw_gzrf1xtgd( data );
    data += sizeof(pw_gzrf1xtgd);

    cv_cnv_endian_pw_gzrf1xtg( data );
    data += sizeof(pw_gzrf1xtg);

    cv_cnv_endian_wg_gzrf1xtg( data );
    data += sizeof(wg_gzrf1xtg);

    cv_cnv_endian_a_gykxtgl( data );
    data += sizeof(a_gykxtgl);

    cv_cnv_endian_ia_gykxtgl( data );
    data += sizeof(ia_gykxtgl);

    cv_cnv_endian_pw_gykxtgla( data );
    data += sizeof(pw_gykxtgla);

    cv_cnv_endian_pw_gykxtgld( data );
    data += sizeof(pw_gykxtgld);

    cv_cnv_endian_pw_gykxtgl( data );
    data += sizeof(pw_gykxtgl);

    cv_cnv_endian_wg_gykxtgl( data );
    data += sizeof(wg_gykxtgl);

    cv_cnv_endian_a_rf3xtg( data );
    data += sizeof(a_rf3xtg);

    cv_cnv_endian_ia_rf3xtg( data );
    data += sizeof(ia_rf3xtg);

    cv_cnv_endian_pw_rf3xtg( data );
    data += sizeof(pw_rf3xtg);

    cv_cnv_endian_res_rf3xtg( data );
    data += sizeof(res_rf3xtg);

    cv_cnv_endian_off_rf3xtg( data );
    data += sizeof(off_rf3xtg);

    cv_cnv_endian_alpha_rf3xtg( data );
    data += sizeof(alpha_rf3xtg);

    cv_cnv_endian_gscale_rf3xtg( data );
    data += sizeof(gscale_rf3xtg);

    cv_cnv_endian_flip_rf3xtg( data );
    data += sizeof(flip_rf3xtg);

    cv_cnv_endian_ia_phs_rf3xtg( data );
    data += sizeof(ia_phs_rf3xtg);

    cv_cnv_endian_wg_rf3xtg( data );
    data += sizeof(wg_rf3xtg);

    cv_cnv_endian_a_gz1xtg( data );
    data += sizeof(a_gz1xtg);

    cv_cnv_endian_ia_gz1xtg( data );
    data += sizeof(ia_gz1xtg);

    cv_cnv_endian_pw_gz1xtga( data );
    data += sizeof(pw_gz1xtga);

    cv_cnv_endian_pw_gz1xtgd( data );
    data += sizeof(pw_gz1xtgd);

    cv_cnv_endian_pw_gz1xtg( data );
    data += sizeof(pw_gz1xtg);

    cv_cnv_endian_wg_gz1xtg( data );
    data += sizeof(wg_gz1xtg);

    cv_cnv_endian_a_gzrf2xtg( data );
    data += sizeof(a_gzrf2xtg);

    cv_cnv_endian_ia_gzrf2xtg( data );
    data += sizeof(ia_gzrf2xtg);

    cv_cnv_endian_pw_gzrf2xtga( data );
    data += sizeof(pw_gzrf2xtga);

    cv_cnv_endian_pw_gzrf2xtgd( data );
    data += sizeof(pw_gzrf2xtgd);

    cv_cnv_endian_pw_gzrf2xtg( data );
    data += sizeof(pw_gzrf2xtg);

    cv_cnv_endian_a_rf2xtg( data );
    data += sizeof(a_rf2xtg);

    cv_cnv_endian_ia_rf2xtg( data );
    data += sizeof(ia_rf2xtg);

    cv_cnv_endian_pw_rf2xtg( data );
    data += sizeof(pw_rf2xtg);

    cv_cnv_endian_res_rf2xtg( data );
    data += sizeof(res_rf2xtg);

    cv_cnv_endian_temp_res_rf2xtg( data );
    data += sizeof(temp_res_rf2xtg);

    cv_cnv_endian_cyc_rf2xtg( data );
    data += sizeof(cyc_rf2xtg);

    cv_cnv_endian_off_rf2xtg( data );
    data += sizeof(off_rf2xtg);

    cv_cnv_endian_alpha_rf2xtg( data );
    data += sizeof(alpha_rf2xtg);

    cv_cnv_endian_thk_rf2xtg( data );
    data += sizeof(thk_rf2xtg);

    cv_cnv_endian_gscale_rf2xtg( data );
    data += sizeof(gscale_rf2xtg);

    cv_cnv_endian_flip_rf2xtg( data );
    data += sizeof(flip_rf2xtg);

    cv_cnv_endian_wg_rf2xtg( data );
    data += sizeof(wg_rf2xtg);

    cv_cnv_endian_a_gz2xtg( data );
    data += sizeof(a_gz2xtg);

    cv_cnv_endian_ia_gz2xtg( data );
    data += sizeof(ia_gz2xtg);

    cv_cnv_endian_pw_gz2xtga( data );
    data += sizeof(pw_gz2xtga);

    cv_cnv_endian_pw_gz2xtgd( data );
    data += sizeof(pw_gz2xtgd);

    cv_cnv_endian_pw_gz2xtg( data );
    data += sizeof(pw_gz2xtg);

    cv_cnv_endian_wg_gz2xtg( data );
    data += sizeof(wg_gz2xtg);

    cv_cnv_endian_a_rf4xtg( data );
    data += sizeof(a_rf4xtg);

    cv_cnv_endian_ia_rf4xtg( data );
    data += sizeof(ia_rf4xtg);

    cv_cnv_endian_pw_rf4xtg( data );
    data += sizeof(pw_rf4xtg);

    cv_cnv_endian_res_rf4xtg( data );
    data += sizeof(res_rf4xtg);

    cv_cnv_endian_off_rf4xtg( data );
    data += sizeof(off_rf4xtg);

    cv_cnv_endian_alpha_rf4xtg( data );
    data += sizeof(alpha_rf4xtg);

    cv_cnv_endian_gscale_rf4xtg( data );
    data += sizeof(gscale_rf4xtg);

    cv_cnv_endian_flip_rf4xtg( data );
    data += sizeof(flip_rf4xtg);

    cv_cnv_endian_ia_phs_rf4xtg( data );
    data += sizeof(ia_phs_rf4xtg);

    cv_cnv_endian_wg_rf4xtg( data );
    data += sizeof(wg_rf4xtg);

    cv_cnv_endian_a_gykxtgr( data );
    data += sizeof(a_gykxtgr);

    cv_cnv_endian_ia_gykxtgr( data );
    data += sizeof(ia_gykxtgr);

    cv_cnv_endian_pw_gykxtgra( data );
    data += sizeof(pw_gykxtgra);

    cv_cnv_endian_pw_gykxtgrd( data );
    data += sizeof(pw_gykxtgrd);

    cv_cnv_endian_pw_gykxtgr( data );
    data += sizeof(pw_gykxtgr);

    cv_cnv_endian_wg_gykxtgr( data );
    data += sizeof(wg_gykxtgr);

    cv_cnv_endian_a_gx1bxtg( data );
    data += sizeof(a_gx1bxtg);

    cv_cnv_endian_ia_gx1bxtg( data );
    data += sizeof(ia_gx1bxtg);

    cv_cnv_endian_pw_gx1bxtga( data );
    data += sizeof(pw_gx1bxtga);

    cv_cnv_endian_pw_gx1bxtgd( data );
    data += sizeof(pw_gx1bxtgd);

    cv_cnv_endian_pw_gx1bxtg( data );
    data += sizeof(pw_gx1bxtg);

    cv_cnv_endian_wg_gx1bxtg( data );
    data += sizeof(wg_gx1bxtg);

    cv_cnv_endian_a_gxw1xtg( data );
    data += sizeof(a_gxw1xtg);

    cv_cnv_endian_ia_gxw1xtg( data );
    data += sizeof(ia_gxw1xtg);

    cv_cnv_endian_pw_gxw1xtga( data );
    data += sizeof(pw_gxw1xtga);

    cv_cnv_endian_pw_gxw1xtgd( data );
    data += sizeof(pw_gxw1xtgd);

    cv_cnv_endian_pw_gxw1xtg( data );
    data += sizeof(pw_gxw1xtg);

    cv_cnv_endian_wg_gxw1xtg( data );
    data += sizeof(wg_gxw1xtg);

    cv_cnv_endian_filter_echo1xtg( data );
    data += sizeof(filter_echo1xtg);

    cv_cnv_endian_a_gzrf1as( data );
    data += sizeof(a_gzrf1as);

    cv_cnv_endian_ia_gzrf1as( data );
    data += sizeof(ia_gzrf1as);

    cv_cnv_endian_pw_gzrf1asa( data );
    data += sizeof(pw_gzrf1asa);

    cv_cnv_endian_pw_gzrf1asd( data );
    data += sizeof(pw_gzrf1asd);

    cv_cnv_endian_pw_gzrf1as( data );
    data += sizeof(pw_gzrf1as);

    cv_cnv_endian_a_rf1as( data );
    data += sizeof(a_rf1as);

    cv_cnv_endian_ia_rf1as( data );
    data += sizeof(ia_rf1as);

    cv_cnv_endian_pw_rf1as( data );
    data += sizeof(pw_rf1as);

    cv_cnv_endian_res_rf1as( data );
    data += sizeof(res_rf1as);

    cv_cnv_endian_temp_res_rf1as( data );
    data += sizeof(temp_res_rf1as);

    cv_cnv_endian_cyc_rf1as( data );
    data += sizeof(cyc_rf1as);

    cv_cnv_endian_off_rf1as( data );
    data += sizeof(off_rf1as);

    cv_cnv_endian_alpha_rf1as( data );
    data += sizeof(alpha_rf1as);

    cv_cnv_endian_thk_rf1as( data );
    data += sizeof(thk_rf1as);

    cv_cnv_endian_gscale_rf1as( data );
    data += sizeof(gscale_rf1as);

    cv_cnv_endian_flip_rf1as( data );
    data += sizeof(flip_rf1as);

    cv_cnv_endian_wg_rf1as( data );
    data += sizeof(wg_rf1as);

    cv_cnv_endian_a_gz1as( data );
    data += sizeof(a_gz1as);

    cv_cnv_endian_ia_gz1as( data );
    data += sizeof(ia_gz1as);

    cv_cnv_endian_pw_gz1asa( data );
    data += sizeof(pw_gz1asa);

    cv_cnv_endian_pw_gz1asd( data );
    data += sizeof(pw_gz1asd);

    cv_cnv_endian_pw_gz1as( data );
    data += sizeof(pw_gz1as);

    cv_cnv_endian_wg_gz1as( data );
    data += sizeof(wg_gz1as);

    cv_cnv_endian_a_gxwas( data );
    data += sizeof(a_gxwas);

    cv_cnv_endian_ia_gxwas( data );
    data += sizeof(ia_gxwas);

    cv_cnv_endian_pw_gxwasa( data );
    data += sizeof(pw_gxwasa);

    cv_cnv_endian_pw_gxwasd( data );
    data += sizeof(pw_gxwasd);

    cv_cnv_endian_pw_gxwas( data );
    data += sizeof(pw_gxwas);

    cv_cnv_endian_wg_gxwas( data );
    data += sizeof(wg_gxwas);

    cv_cnv_endian_filter_echo1as( data );
    data += sizeof(filter_echo1as);

    cv_cnv_endian_a_gx1as( data );
    data += sizeof(a_gx1as);

    cv_cnv_endian_ia_gx1as( data );
    data += sizeof(ia_gx1as);

    cv_cnv_endian_pw_gx1asa( data );
    data += sizeof(pw_gx1asa);

    cv_cnv_endian_pw_gx1asd( data );
    data += sizeof(pw_gx1asd);

    cv_cnv_endian_pw_gx1as( data );
    data += sizeof(pw_gx1as);

    cv_cnv_endian_wg_gx1as( data );
    data += sizeof(wg_gx1as);

    cv_cnv_endian_a_gy1as( data );
    data += sizeof(a_gy1as);

    cv_cnv_endian_a_gy1asa( data );
    data += sizeof(a_gy1asa);

    cv_cnv_endian_a_gy1asb( data );
    data += sizeof(a_gy1asb);

    cv_cnv_endian_ia_gy1as( data );
    data += sizeof(ia_gy1as);

    cv_cnv_endian_ia_gy1aswa( data );
    data += sizeof(ia_gy1aswa);

    cv_cnv_endian_ia_gy1aswb( data );
    data += sizeof(ia_gy1aswb);

    cv_cnv_endian_pw_gy1asa( data );
    data += sizeof(pw_gy1asa);

    cv_cnv_endian_pw_gy1asd( data );
    data += sizeof(pw_gy1asd);

    cv_cnv_endian_pw_gy1as( data );
    data += sizeof(pw_gy1as);

    cv_cnv_endian_wg_gy1as( data );
    data += sizeof(wg_gy1as);

    cv_cnv_endian_a_gy1ras( data );
    data += sizeof(a_gy1ras);

    cv_cnv_endian_a_gy1rasa( data );
    data += sizeof(a_gy1rasa);

    cv_cnv_endian_a_gy1rasb( data );
    data += sizeof(a_gy1rasb);

    cv_cnv_endian_ia_gy1ras( data );
    data += sizeof(ia_gy1ras);

    cv_cnv_endian_ia_gy1raswa( data );
    data += sizeof(ia_gy1raswa);

    cv_cnv_endian_ia_gy1raswb( data );
    data += sizeof(ia_gy1raswb);

    cv_cnv_endian_pw_gy1rasa( data );
    data += sizeof(pw_gy1rasa);

    cv_cnv_endian_pw_gy1rasd( data );
    data += sizeof(pw_gy1rasd);

    cv_cnv_endian_pw_gy1ras( data );
    data += sizeof(pw_gy1ras);

    cv_cnv_endian_wg_gy1ras( data );
    data += sizeof(wg_gy1ras);

    cv_cnv_endian_a_gxkas( data );
    data += sizeof(a_gxkas);

    cv_cnv_endian_ia_gxkas( data );
    data += sizeof(ia_gxkas);

    cv_cnv_endian_pw_gxkasa( data );
    data += sizeof(pw_gxkasa);

    cv_cnv_endian_pw_gxkasd( data );
    data += sizeof(pw_gxkasd);

    cv_cnv_endian_pw_gxkas( data );
    data += sizeof(pw_gxkas);

    cv_cnv_endian_wg_gxkas( data );
    data += sizeof(wg_gxkas);

    cv_cnv_endian_a_gzkas( data );
    data += sizeof(a_gzkas);

    cv_cnv_endian_ia_gzkas( data );
    data += sizeof(ia_gzkas);

    cv_cnv_endian_pw_gzkasa( data );
    data += sizeof(pw_gzkasa);

    cv_cnv_endian_pw_gzkasd( data );
    data += sizeof(pw_gzkasd);

    cv_cnv_endian_pw_gzkas( data );
    data += sizeof(pw_gzkas);

    cv_cnv_endian_wg_gzkas( data );
    data += sizeof(wg_gzkas);

    cv_cnv_endian_a_xdixon( data );
    data += sizeof(a_xdixon);

    cv_cnv_endian_ia_xdixon( data );
    data += sizeof(ia_xdixon);

    cv_cnv_endian_pw_xdixon( data );
    data += sizeof(pw_xdixon);

    cv_cnv_endian_wg_xdixon( data );
    data += sizeof(wg_xdixon);

    cv_cnv_endian_a_ydixon( data );
    data += sizeof(a_ydixon);

    cv_cnv_endian_ia_ydixon( data );
    data += sizeof(ia_ydixon);

    cv_cnv_endian_pw_ydixon( data );
    data += sizeof(pw_ydixon);

    cv_cnv_endian_wg_ydixon( data );
    data += sizeof(wg_ydixon);

    cv_cnv_endian_a_zdixon( data );
    data += sizeof(a_zdixon);

    cv_cnv_endian_ia_zdixon( data );
    data += sizeof(ia_zdixon);

    cv_cnv_endian_pw_zdixon( data );
    data += sizeof(pw_zdixon);

    cv_cnv_endian_wg_zdixon( data );
    data += sizeof(wg_zdixon);

    cv_cnv_endian_a_sdixon( data );
    data += sizeof(a_sdixon);

    cv_cnv_endian_ia_sdixon( data );
    data += sizeof(ia_sdixon);

    cv_cnv_endian_pw_sdixon( data );
    data += sizeof(pw_sdixon);

    cv_cnv_endian_wg_sdixon( data );
    data += sizeof(wg_sdixon);

    cv_cnv_endian_a_sdixon2( data );
    data += sizeof(a_sdixon2);

    cv_cnv_endian_ia_sdixon2( data );
    data += sizeof(ia_sdixon2);

    cv_cnv_endian_pw_sdixon2( data );
    data += sizeof(pw_sdixon2);

    cv_cnv_endian_wg_sdixon2( data );
    data += sizeof(wg_sdixon2);

    cv_cnv_endian_ia_dDDIQ( data );
    data += sizeof(ia_dDDIQ);

    cv_cnv_endian_res_rf1rs( data );
    data += sizeof(res_rf1rs);

    cv_cnv_endian_wg_rf1rs( data );
    data += sizeof(wg_rf1rs);

    cv_cnv_endian_a_gzrf1rs( data );
    data += sizeof(a_gzrf1rs);

    cv_cnv_endian_ia_gzrf1rs( data );
    data += sizeof(ia_gzrf1rs);

    cv_cnv_endian_pw_gzrf1rsa( data );
    data += sizeof(pw_gzrf1rsa);

    cv_cnv_endian_pw_gzrf1rsd( data );
    data += sizeof(pw_gzrf1rsd);

    cv_cnv_endian_pw_gzrf1rs( data );
    data += sizeof(pw_gzrf1rs);

    cv_cnv_endian_wg_gzrf1rs( data );
    data += sizeof(wg_gzrf1rs);

    cv_cnv_endian_a_gxkbsrs( data );
    data += sizeof(a_gxkbsrs);

    cv_cnv_endian_ia_gxkbsrs( data );
    data += sizeof(ia_gxkbsrs);

    cv_cnv_endian_pw_gxkbsrsa( data );
    data += sizeof(pw_gxkbsrsa);

    cv_cnv_endian_pw_gxkbsrsd( data );
    data += sizeof(pw_gxkbsrsd);

    cv_cnv_endian_pw_gxkbsrs( data );
    data += sizeof(pw_gxkbsrs);

    cv_cnv_endian_wg_gxkbsrs( data );
    data += sizeof(wg_gxkbsrs);

    cv_cnv_endian_a_gz1rs( data );
    data += sizeof(a_gz1rs);

    cv_cnv_endian_ia_gz1rs( data );
    data += sizeof(ia_gz1rs);

    cv_cnv_endian_pw_gz1rsa( data );
    data += sizeof(pw_gz1rsa);

    cv_cnv_endian_pw_gz1rsd( data );
    data += sizeof(pw_gz1rsd);

    cv_cnv_endian_pw_gz1rs( data );
    data += sizeof(pw_gz1rs);

    cv_cnv_endian_wg_gz1rs( data );
    data += sizeof(wg_gz1rs);

    cv_cnv_endian_a_rfbrs( data );
    data += sizeof(a_rfbrs);

    cv_cnv_endian_ia_rfbrs( data );
    data += sizeof(ia_rfbrs);

    cv_cnv_endian_pw_rfbrs( data );
    data += sizeof(pw_rfbrs);

    cv_cnv_endian_res_rfbrs( data );
    data += sizeof(res_rfbrs);

    cv_cnv_endian_off_rfbrs( data );
    data += sizeof(off_rfbrs);

    cv_cnv_endian_rfslot_rfbrs( data );
    data += sizeof(rfslot_rfbrs);

    cv_cnv_endian_gscale_rfbrs( data );
    data += sizeof(gscale_rfbrs);

    cv_cnv_endian_n_rfbrs( data );
    data += sizeof(n_rfbrs);

    cv_cnv_endian_wg_rfbrs( data );
    data += sizeof(wg_rfbrs);

    cv_cnv_endian_a_thetarfbrs( data );
    data += sizeof(a_thetarfbrs);

    cv_cnv_endian_ia_thetarfbrs( data );
    data += sizeof(ia_thetarfbrs);

    cv_cnv_endian_pw_thetarfbrs( data );
    data += sizeof(pw_thetarfbrs);

    cv_cnv_endian_res_thetarfbrs( data );
    data += sizeof(res_thetarfbrs);

    cv_cnv_endian_off_thetarfbrs( data );
    data += sizeof(off_thetarfbrs);

    cv_cnv_endian_rfslot_thetarfbrs( data );
    data += sizeof(rfslot_thetarfbrs);

    cv_cnv_endian_gscale_thetarfbrs( data );
    data += sizeof(gscale_thetarfbrs);

    cv_cnv_endian_n_thetarfbrs( data );
    data += sizeof(n_thetarfbrs);

    cv_cnv_endian_wg_thetarfbrs( data );
    data += sizeof(wg_thetarfbrs);

    cv_cnv_endian_a_gzkbsrs( data );
    data += sizeof(a_gzkbsrs);

    cv_cnv_endian_ia_gzkbsrs( data );
    data += sizeof(ia_gzkbsrs);

    cv_cnv_endian_pw_gzkbsrsa( data );
    data += sizeof(pw_gzkbsrsa);

    cv_cnv_endian_pw_gzkbsrsd( data );
    data += sizeof(pw_gzkbsrsd);

    cv_cnv_endian_pw_gzkbsrs( data );
    data += sizeof(pw_gzkbsrs);

    cv_cnv_endian_wg_gzkbsrs( data );
    data += sizeof(wg_gzkbsrs);

    cv_cnv_endian_a_gxwrs( data );
    data += sizeof(a_gxwrs);

    cv_cnv_endian_ia_gxwrs( data );
    data += sizeof(ia_gxwrs);

    cv_cnv_endian_pw_gxwrsa( data );
    data += sizeof(pw_gxwrsa);

    cv_cnv_endian_pw_gxwrsd( data );
    data += sizeof(pw_gxwrsd);

    cv_cnv_endian_pw_gxwrs( data );
    data += sizeof(pw_gxwrs);

    cv_cnv_endian_wg_gxwrs( data );
    data += sizeof(wg_gxwrs);

    cv_cnv_endian_filter_echo1rs( data );
    data += sizeof(filter_echo1rs);

    cv_cnv_endian_a_gx2rs( data );
    data += sizeof(a_gx2rs);

    cv_cnv_endian_ia_gx2rs( data );
    data += sizeof(ia_gx2rs);

    cv_cnv_endian_pw_gx2rsa( data );
    data += sizeof(pw_gx2rsa);

    cv_cnv_endian_pw_gx2rsd( data );
    data += sizeof(pw_gx2rsd);

    cv_cnv_endian_pw_gx2rs( data );
    data += sizeof(pw_gx2rs);

    cv_cnv_endian_wg_gx2rs( data );
    data += sizeof(wg_gx2rs);

    cv_cnv_endian_a_gy2rs( data );
    data += sizeof(a_gy2rs);

    cv_cnv_endian_a_gy2rsa( data );
    data += sizeof(a_gy2rsa);

    cv_cnv_endian_a_gy2rsb( data );
    data += sizeof(a_gy2rsb);

    cv_cnv_endian_ia_gy2rs( data );
    data += sizeof(ia_gy2rs);

    cv_cnv_endian_ia_gy2rswa( data );
    data += sizeof(ia_gy2rswa);

    cv_cnv_endian_ia_gy2rswb( data );
    data += sizeof(ia_gy2rswb);

    cv_cnv_endian_pw_gy2rsa( data );
    data += sizeof(pw_gy2rsa);

    cv_cnv_endian_pw_gy2rsd( data );
    data += sizeof(pw_gy2rsd);

    cv_cnv_endian_pw_gy2rs( data );
    data += sizeof(pw_gy2rs);

    cv_cnv_endian_wg_gy2rs( data );
    data += sizeof(wg_gy2rs);

    cv_cnv_endian_a_gxw2rs( data );
    data += sizeof(a_gxw2rs);

    cv_cnv_endian_ia_gxw2rs( data );
    data += sizeof(ia_gxw2rs);

    cv_cnv_endian_pw_gxw2rsa( data );
    data += sizeof(pw_gxw2rsa);

    cv_cnv_endian_pw_gxw2rsd( data );
    data += sizeof(pw_gxw2rsd);

    cv_cnv_endian_pw_gxw2rs( data );
    data += sizeof(pw_gxw2rs);

    cv_cnv_endian_wg_gxw2rs( data );
    data += sizeof(wg_gxw2rs);

    cv_cnv_endian_a_gx1rs( data );
    data += sizeof(a_gx1rs);

    cv_cnv_endian_ia_gx1rs( data );
    data += sizeof(ia_gx1rs);

    cv_cnv_endian_pw_gx1rsa( data );
    data += sizeof(pw_gx1rsa);

    cv_cnv_endian_pw_gx1rsd( data );
    data += sizeof(pw_gx1rsd);

    cv_cnv_endian_pw_gx1rs( data );
    data += sizeof(pw_gx1rs);

    cv_cnv_endian_wg_gx1rs( data );
    data += sizeof(wg_gx1rs);

    cv_cnv_endian_a_gy1rrs( data );
    data += sizeof(a_gy1rrs);

    cv_cnv_endian_a_gy1rrsa( data );
    data += sizeof(a_gy1rrsa);

    cv_cnv_endian_a_gy1rrsb( data );
    data += sizeof(a_gy1rrsb);

    cv_cnv_endian_ia_gy1rrs( data );
    data += sizeof(ia_gy1rrs);

    cv_cnv_endian_ia_gy1rrswa( data );
    data += sizeof(ia_gy1rrswa);

    cv_cnv_endian_ia_gy1rrswb( data );
    data += sizeof(ia_gy1rrswb);

    cv_cnv_endian_pw_gy1rrsa( data );
    data += sizeof(pw_gy1rrsa);

    cv_cnv_endian_pw_gy1rrsd( data );
    data += sizeof(pw_gy1rrsd);

    cv_cnv_endian_pw_gy1rrs( data );
    data += sizeof(pw_gy1rrs);

    cv_cnv_endian_wg_gy1rrs( data );
    data += sizeof(wg_gy1rrs);

    cv_cnv_endian_a_gy1rs( data );
    data += sizeof(a_gy1rs);

    cv_cnv_endian_a_gy1rsa( data );
    data += sizeof(a_gy1rsa);

    cv_cnv_endian_a_gy1rsb( data );
    data += sizeof(a_gy1rsb);

    cv_cnv_endian_ia_gy1rs( data );
    data += sizeof(ia_gy1rs);

    cv_cnv_endian_ia_gy1rswa( data );
    data += sizeof(ia_gy1rswa);

    cv_cnv_endian_ia_gy1rswb( data );
    data += sizeof(ia_gy1rswb);

    cv_cnv_endian_pw_gy1rsa( data );
    data += sizeof(pw_gy1rsa);

    cv_cnv_endian_pw_gy1rsd( data );
    data += sizeof(pw_gy1rsd);

    cv_cnv_endian_pw_gy1rs( data );
    data += sizeof(pw_gy1rs);

    cv_cnv_endian_wg_gy1rs( data );
    data += sizeof(wg_gy1rs);

    cv_cnv_endian_a_gzkrs( data );
    data += sizeof(a_gzkrs);

    cv_cnv_endian_ia_gzkrs( data );
    data += sizeof(ia_gzkrs);

    cv_cnv_endian_pw_gzkrsa( data );
    data += sizeof(pw_gzkrsa);

    cv_cnv_endian_pw_gzkrsd( data );
    data += sizeof(pw_gzkrsd);

    cv_cnv_endian_pw_gzkrs( data );
    data += sizeof(pw_gzkrs);

    cv_cnv_endian_wg_gzkrs( data );
    data += sizeof(wg_gzkrs);

    cv_cnv_endian_a_gxkrs( data );
    data += sizeof(a_gxkrs);

    cv_cnv_endian_ia_gxkrs( data );
    data += sizeof(ia_gxkrs);

    cv_cnv_endian_pw_gxkrsa( data );
    data += sizeof(pw_gxkrsa);

    cv_cnv_endian_pw_gxkrsd( data );
    data += sizeof(pw_gxkrsd);

    cv_cnv_endian_pw_gxkrs( data );
    data += sizeof(pw_gxkrs);

    cv_cnv_endian_wg_gxkrs( data );
    data += sizeof(wg_gxkrs);

    cv_cnv_endian_res_rf1dtg( data );
    data += sizeof(res_rf1dtg);

    cv_cnv_endian_wg_rf1dtg( data );
    data += sizeof(wg_rf1dtg);

    cv_cnv_endian_a_gzrf1dtg( data );
    data += sizeof(a_gzrf1dtg);

    cv_cnv_endian_ia_gzrf1dtg( data );
    data += sizeof(ia_gzrf1dtg);

    cv_cnv_endian_pw_gzrf1dtga( data );
    data += sizeof(pw_gzrf1dtga);

    cv_cnv_endian_pw_gzrf1dtgd( data );
    data += sizeof(pw_gzrf1dtgd);

    cv_cnv_endian_pw_gzrf1dtg( data );
    data += sizeof(pw_gzrf1dtg);

    cv_cnv_endian_wg_gzrf1dtg( data );
    data += sizeof(wg_gzrf1dtg);

    cv_cnv_endian_a_gxkbsdtg( data );
    data += sizeof(a_gxkbsdtg);

    cv_cnv_endian_ia_gxkbsdtg( data );
    data += sizeof(ia_gxkbsdtg);

    cv_cnv_endian_pw_gxkbsdtga( data );
    data += sizeof(pw_gxkbsdtga);

    cv_cnv_endian_pw_gxkbsdtgd( data );
    data += sizeof(pw_gxkbsdtgd);

    cv_cnv_endian_pw_gxkbsdtg( data );
    data += sizeof(pw_gxkbsdtg);

    cv_cnv_endian_wg_gxkbsdtg( data );
    data += sizeof(wg_gxkbsdtg);

    cv_cnv_endian_a_gz1dtg( data );
    data += sizeof(a_gz1dtg);

    cv_cnv_endian_ia_gz1dtg( data );
    data += sizeof(ia_gz1dtg);

    cv_cnv_endian_pw_gz1dtga( data );
    data += sizeof(pw_gz1dtga);

    cv_cnv_endian_pw_gz1dtgd( data );
    data += sizeof(pw_gz1dtgd);

    cv_cnv_endian_pw_gz1dtg( data );
    data += sizeof(pw_gz1dtg);

    cv_cnv_endian_wg_gz1dtg( data );
    data += sizeof(wg_gz1dtg);

    cv_cnv_endian_a_rfbdtg( data );
    data += sizeof(a_rfbdtg);

    cv_cnv_endian_ia_rfbdtg( data );
    data += sizeof(ia_rfbdtg);

    cv_cnv_endian_pw_rfbdtg( data );
    data += sizeof(pw_rfbdtg);

    cv_cnv_endian_res_rfbdtg( data );
    data += sizeof(res_rfbdtg);

    cv_cnv_endian_off_rfbdtg( data );
    data += sizeof(off_rfbdtg);

    cv_cnv_endian_rfslot_rfbdtg( data );
    data += sizeof(rfslot_rfbdtg);

    cv_cnv_endian_gscale_rfbdtg( data );
    data += sizeof(gscale_rfbdtg);

    cv_cnv_endian_n_rfbdtg( data );
    data += sizeof(n_rfbdtg);

    cv_cnv_endian_wg_rfbdtg( data );
    data += sizeof(wg_rfbdtg);

    cv_cnv_endian_a_thetarfbdtg( data );
    data += sizeof(a_thetarfbdtg);

    cv_cnv_endian_ia_thetarfbdtg( data );
    data += sizeof(ia_thetarfbdtg);

    cv_cnv_endian_pw_thetarfbdtg( data );
    data += sizeof(pw_thetarfbdtg);

    cv_cnv_endian_res_thetarfbdtg( data );
    data += sizeof(res_thetarfbdtg);

    cv_cnv_endian_off_thetarfbdtg( data );
    data += sizeof(off_thetarfbdtg);

    cv_cnv_endian_rfslot_thetarfbdtg( data );
    data += sizeof(rfslot_thetarfbdtg);

    cv_cnv_endian_gscale_thetarfbdtg( data );
    data += sizeof(gscale_thetarfbdtg);

    cv_cnv_endian_n_thetarfbdtg( data );
    data += sizeof(n_thetarfbdtg);

    cv_cnv_endian_wg_thetarfbdtg( data );
    data += sizeof(wg_thetarfbdtg);

    cv_cnv_endian_a_gzkbsdtg( data );
    data += sizeof(a_gzkbsdtg);

    cv_cnv_endian_ia_gzkbsdtg( data );
    data += sizeof(ia_gzkbsdtg);

    cv_cnv_endian_pw_gzkbsdtga( data );
    data += sizeof(pw_gzkbsdtga);

    cv_cnv_endian_pw_gzkbsdtgd( data );
    data += sizeof(pw_gzkbsdtgd);

    cv_cnv_endian_pw_gzkbsdtg( data );
    data += sizeof(pw_gzkbsdtg);

    cv_cnv_endian_wg_gzkbsdtg( data );
    data += sizeof(wg_gzkbsdtg);

    cv_cnv_endian_a_gxwdtg( data );
    data += sizeof(a_gxwdtg);

    cv_cnv_endian_ia_gxwdtg( data );
    data += sizeof(ia_gxwdtg);

    cv_cnv_endian_pw_gxwdtga( data );
    data += sizeof(pw_gxwdtga);

    cv_cnv_endian_pw_gxwdtgd( data );
    data += sizeof(pw_gxwdtgd);

    cv_cnv_endian_pw_gxwdtg( data );
    data += sizeof(pw_gxwdtg);

    cv_cnv_endian_wg_gxwdtg( data );
    data += sizeof(wg_gxwdtg);

    cv_cnv_endian_filter_echo1dtg( data );
    data += sizeof(filter_echo1dtg);

    cv_cnv_endian_a_gx2dtg( data );
    data += sizeof(a_gx2dtg);

    cv_cnv_endian_ia_gx2dtg( data );
    data += sizeof(ia_gx2dtg);

    cv_cnv_endian_pw_gx2dtga( data );
    data += sizeof(pw_gx2dtga);

    cv_cnv_endian_pw_gx2dtgd( data );
    data += sizeof(pw_gx2dtgd);

    cv_cnv_endian_pw_gx2dtg( data );
    data += sizeof(pw_gx2dtg);

    cv_cnv_endian_wg_gx2dtg( data );
    data += sizeof(wg_gx2dtg);

    cv_cnv_endian_a_gy2dtg( data );
    data += sizeof(a_gy2dtg);

    cv_cnv_endian_a_gy2dtga( data );
    data += sizeof(a_gy2dtga);

    cv_cnv_endian_a_gy2dtgb( data );
    data += sizeof(a_gy2dtgb);

    cv_cnv_endian_ia_gy2dtg( data );
    data += sizeof(ia_gy2dtg);

    cv_cnv_endian_ia_gy2dtgwa( data );
    data += sizeof(ia_gy2dtgwa);

    cv_cnv_endian_ia_gy2dtgwb( data );
    data += sizeof(ia_gy2dtgwb);

    cv_cnv_endian_pw_gy2dtga( data );
    data += sizeof(pw_gy2dtga);

    cv_cnv_endian_pw_gy2dtgd( data );
    data += sizeof(pw_gy2dtgd);

    cv_cnv_endian_pw_gy2dtg( data );
    data += sizeof(pw_gy2dtg);

    cv_cnv_endian_wg_gy2dtg( data );
    data += sizeof(wg_gy2dtg);

    cv_cnv_endian_a_gxw2dtg( data );
    data += sizeof(a_gxw2dtg);

    cv_cnv_endian_ia_gxw2dtg( data );
    data += sizeof(ia_gxw2dtg);

    cv_cnv_endian_pw_gxw2dtga( data );
    data += sizeof(pw_gxw2dtga);

    cv_cnv_endian_pw_gxw2dtgd( data );
    data += sizeof(pw_gxw2dtgd);

    cv_cnv_endian_pw_gxw2dtg( data );
    data += sizeof(pw_gxw2dtg);

    cv_cnv_endian_wg_gxw2dtg( data );
    data += sizeof(wg_gxw2dtg);

    cv_cnv_endian_a_gx1dtg( data );
    data += sizeof(a_gx1dtg);

    cv_cnv_endian_ia_gx1dtg( data );
    data += sizeof(ia_gx1dtg);

    cv_cnv_endian_pw_gx1dtga( data );
    data += sizeof(pw_gx1dtga);

    cv_cnv_endian_pw_gx1dtgd( data );
    data += sizeof(pw_gx1dtgd);

    cv_cnv_endian_pw_gx1dtg( data );
    data += sizeof(pw_gx1dtg);

    cv_cnv_endian_wg_gx1dtg( data );
    data += sizeof(wg_gx1dtg);

    cv_cnv_endian_a_gy1rdtg( data );
    data += sizeof(a_gy1rdtg);

    cv_cnv_endian_a_gy1rdtga( data );
    data += sizeof(a_gy1rdtga);

    cv_cnv_endian_a_gy1rdtgb( data );
    data += sizeof(a_gy1rdtgb);

    cv_cnv_endian_ia_gy1rdtg( data );
    data += sizeof(ia_gy1rdtg);

    cv_cnv_endian_ia_gy1rdtgwa( data );
    data += sizeof(ia_gy1rdtgwa);

    cv_cnv_endian_ia_gy1rdtgwb( data );
    data += sizeof(ia_gy1rdtgwb);

    cv_cnv_endian_pw_gy1rdtga( data );
    data += sizeof(pw_gy1rdtga);

    cv_cnv_endian_pw_gy1rdtgd( data );
    data += sizeof(pw_gy1rdtgd);

    cv_cnv_endian_pw_gy1rdtg( data );
    data += sizeof(pw_gy1rdtg);

    cv_cnv_endian_wg_gy1rdtg( data );
    data += sizeof(wg_gy1rdtg);

    cv_cnv_endian_a_gy1dtg( data );
    data += sizeof(a_gy1dtg);

    cv_cnv_endian_a_gy1dtga( data );
    data += sizeof(a_gy1dtga);

    cv_cnv_endian_a_gy1dtgb( data );
    data += sizeof(a_gy1dtgb);

    cv_cnv_endian_ia_gy1dtg( data );
    data += sizeof(ia_gy1dtg);

    cv_cnv_endian_ia_gy1dtgwa( data );
    data += sizeof(ia_gy1dtgwa);

    cv_cnv_endian_ia_gy1dtgwb( data );
    data += sizeof(ia_gy1dtgwb);

    cv_cnv_endian_pw_gy1dtga( data );
    data += sizeof(pw_gy1dtga);

    cv_cnv_endian_pw_gy1dtgd( data );
    data += sizeof(pw_gy1dtgd);

    cv_cnv_endian_pw_gy1dtg( data );
    data += sizeof(pw_gy1dtg);

    cv_cnv_endian_wg_gy1dtg( data );
    data += sizeof(wg_gy1dtg);

    cv_cnv_endian_a_gzkdtg( data );
    data += sizeof(a_gzkdtg);

    cv_cnv_endian_ia_gzkdtg( data );
    data += sizeof(ia_gzkdtg);

    cv_cnv_endian_pw_gzkdtga( data );
    data += sizeof(pw_gzkdtga);

    cv_cnv_endian_pw_gzkdtgd( data );
    data += sizeof(pw_gzkdtgd);

    cv_cnv_endian_pw_gzkdtg( data );
    data += sizeof(pw_gzkdtg);

    cv_cnv_endian_wg_gzkdtg( data );
    data += sizeof(wg_gzkdtg);

    cv_cnv_endian_a_gxkdtg( data );
    data += sizeof(a_gxkdtg);

    cv_cnv_endian_ia_gxkdtg( data );
    data += sizeof(ia_gxkdtg);

    cv_cnv_endian_pw_gxkdtga( data );
    data += sizeof(pw_gxkdtga);

    cv_cnv_endian_pw_gxkdtgd( data );
    data += sizeof(pw_gxkdtgd);

    cv_cnv_endian_pw_gxkdtg( data );
    data += sizeof(pw_gxkdtg);

    cv_cnv_endian_wg_gxkdtg( data );
    data += sizeof(wg_gxkdtg);

    cv_cnv_endian_a_rf1cal( data );
    data += sizeof(a_rf1cal);

    cv_cnv_endian_ia_rf1cal( data );
    data += sizeof(ia_rf1cal);

    cv_cnv_endian_pw_rf1cal( data );
    data += sizeof(pw_rf1cal);

    cv_cnv_endian_res_rf1cal( data );
    data += sizeof(res_rf1cal);

    cv_cnv_endian_off_rf1cal( data );
    data += sizeof(off_rf1cal);

    cv_cnv_endian_rfslot_rf1cal( data );
    data += sizeof(rfslot_rf1cal);

    cv_cnv_endian_gscale_rf1cal( data );
    data += sizeof(gscale_rf1cal);

    cv_cnv_endian_n_rf1cal( data );
    data += sizeof(n_rf1cal);

    cv_cnv_endian_wg_rf1cal( data );
    data += sizeof(wg_rf1cal);

    cv_cnv_endian_a_gzrf1cal( data );
    data += sizeof(a_gzrf1cal);

    cv_cnv_endian_ia_gzrf1cal( data );
    data += sizeof(ia_gzrf1cal);

    cv_cnv_endian_pw_gzrf1cala( data );
    data += sizeof(pw_gzrf1cala);

    cv_cnv_endian_pw_gzrf1cald( data );
    data += sizeof(pw_gzrf1cald);

    cv_cnv_endian_pw_gzrf1cal( data );
    data += sizeof(pw_gzrf1cal);

    cv_cnv_endian_wg_gzrf1cal( data );
    data += sizeof(wg_gzrf1cal);

    cv_cnv_endian_a_gzcombcal( data );
    data += sizeof(a_gzcombcal);

    cv_cnv_endian_a_gzcombcala( data );
    data += sizeof(a_gzcombcala);

    cv_cnv_endian_a_gzcombcalb( data );
    data += sizeof(a_gzcombcalb);

    cv_cnv_endian_ia_gzcombcal( data );
    data += sizeof(ia_gzcombcal);

    cv_cnv_endian_ia_gzcombcalwa( data );
    data += sizeof(ia_gzcombcalwa);

    cv_cnv_endian_ia_gzcombcalwb( data );
    data += sizeof(ia_gzcombcalwb);

    cv_cnv_endian_pw_gzcombcala( data );
    data += sizeof(pw_gzcombcala);

    cv_cnv_endian_pw_gzcombcald( data );
    data += sizeof(pw_gzcombcald);

    cv_cnv_endian_pw_gzcombcalf( data );
    data += sizeof(pw_gzcombcalf);

    cv_cnv_endian_pw_gzcombcal( data );
    data += sizeof(pw_gzcombcal);

    cv_cnv_endian_res_gzcombcal( data );
    data += sizeof(res_gzcombcal);

    cv_cnv_endian_per_gzcombcal( data );
    data += sizeof(per_gzcombcal);

    cv_cnv_endian_wg_gzcombcal( data );
    data += sizeof(wg_gzcombcal);

    cv_cnv_endian_a_gzprcal( data );
    data += sizeof(a_gzprcal);

    cv_cnv_endian_a_gzprcala( data );
    data += sizeof(a_gzprcala);

    cv_cnv_endian_a_gzprcalb( data );
    data += sizeof(a_gzprcalb);

    cv_cnv_endian_ia_gzprcal( data );
    data += sizeof(ia_gzprcal);

    cv_cnv_endian_ia_gzprcalwa( data );
    data += sizeof(ia_gzprcalwa);

    cv_cnv_endian_ia_gzprcalwb( data );
    data += sizeof(ia_gzprcalwb);

    cv_cnv_endian_pw_gzprcala( data );
    data += sizeof(pw_gzprcala);

    cv_cnv_endian_pw_gzprcald( data );
    data += sizeof(pw_gzprcald);

    cv_cnv_endian_pw_gzprcalf( data );
    data += sizeof(pw_gzprcalf);

    cv_cnv_endian_pw_gzprcal( data );
    data += sizeof(pw_gzprcal);

    cv_cnv_endian_res_gzprcal( data );
    data += sizeof(res_gzprcal);

    cv_cnv_endian_per_gzprcal( data );
    data += sizeof(per_gzprcal);

    cv_cnv_endian_wg_gzprcal( data );
    data += sizeof(wg_gzprcal);

    cv_cnv_endian_a_gxwcal( data );
    data += sizeof(a_gxwcal);

    cv_cnv_endian_ia_gxwcal( data );
    data += sizeof(ia_gxwcal);

    cv_cnv_endian_pw_gxwcala( data );
    data += sizeof(pw_gxwcala);

    cv_cnv_endian_pw_gxwcald( data );
    data += sizeof(pw_gxwcald);

    cv_cnv_endian_pw_gxwcal( data );
    data += sizeof(pw_gxwcal);

    cv_cnv_endian_wg_gxwcal( data );
    data += sizeof(wg_gxwcal);

    cv_cnv_endian_filter_echo1cal( data );
    data += sizeof(filter_echo1cal);

    cv_cnv_endian_a_gx1cal( data );
    data += sizeof(a_gx1cal);

    cv_cnv_endian_a_gx1cala( data );
    data += sizeof(a_gx1cala);

    cv_cnv_endian_a_gx1calb( data );
    data += sizeof(a_gx1calb);

    cv_cnv_endian_ia_gx1cal( data );
    data += sizeof(ia_gx1cal);

    cv_cnv_endian_ia_gx1calwa( data );
    data += sizeof(ia_gx1calwa);

    cv_cnv_endian_ia_gx1calwb( data );
    data += sizeof(ia_gx1calwb);

    cv_cnv_endian_pw_gx1cala( data );
    data += sizeof(pw_gx1cala);

    cv_cnv_endian_pw_gx1cald( data );
    data += sizeof(pw_gx1cald);

    cv_cnv_endian_pw_gx1calf( data );
    data += sizeof(pw_gx1calf);

    cv_cnv_endian_pw_gx1cal( data );
    data += sizeof(pw_gx1cal);

    cv_cnv_endian_res_gx1cal( data );
    data += sizeof(res_gx1cal);

    cv_cnv_endian_per_gx1cal( data );
    data += sizeof(per_gx1cal);

    cv_cnv_endian_wg_gx1cal( data );
    data += sizeof(wg_gx1cal);

    cv_cnv_endian_a_gy1cal( data );
    data += sizeof(a_gy1cal);

    cv_cnv_endian_a_gy1cala( data );
    data += sizeof(a_gy1cala);

    cv_cnv_endian_a_gy1calb( data );
    data += sizeof(a_gy1calb);

    cv_cnv_endian_ia_gy1cal( data );
    data += sizeof(ia_gy1cal);

    cv_cnv_endian_ia_gy1calwa( data );
    data += sizeof(ia_gy1calwa);

    cv_cnv_endian_ia_gy1calwb( data );
    data += sizeof(ia_gy1calwb);

    cv_cnv_endian_pw_gy1cala( data );
    data += sizeof(pw_gy1cala);

    cv_cnv_endian_pw_gy1cald( data );
    data += sizeof(pw_gy1cald);

    cv_cnv_endian_pw_gy1calf( data );
    data += sizeof(pw_gy1calf);

    cv_cnv_endian_pw_gy1cal( data );
    data += sizeof(pw_gy1cal);

    cv_cnv_endian_res_gy1cal( data );
    data += sizeof(res_gy1cal);

    cv_cnv_endian_per_gy1cal( data );
    data += sizeof(per_gy1cal);

    cv_cnv_endian_wg_gy1cal( data );
    data += sizeof(wg_gy1cal);

    cv_cnv_endian_a_gy1rcal( data );
    data += sizeof(a_gy1rcal);

    cv_cnv_endian_a_gy1rcala( data );
    data += sizeof(a_gy1rcala);

    cv_cnv_endian_a_gy1rcalb( data );
    data += sizeof(a_gy1rcalb);

    cv_cnv_endian_ia_gy1rcal( data );
    data += sizeof(ia_gy1rcal);

    cv_cnv_endian_ia_gy1rcalwa( data );
    data += sizeof(ia_gy1rcalwa);

    cv_cnv_endian_ia_gy1rcalwb( data );
    data += sizeof(ia_gy1rcalwb);

    cv_cnv_endian_pw_gy1rcala( data );
    data += sizeof(pw_gy1rcala);

    cv_cnv_endian_pw_gy1rcald( data );
    data += sizeof(pw_gy1rcald);

    cv_cnv_endian_pw_gy1rcalf( data );
    data += sizeof(pw_gy1rcalf);

    cv_cnv_endian_pw_gy1rcal( data );
    data += sizeof(pw_gy1rcal);

    cv_cnv_endian_res_gy1rcal( data );
    data += sizeof(res_gy1rcal);

    cv_cnv_endian_per_gy1rcal( data );
    data += sizeof(per_gy1rcal);

    cv_cnv_endian_wg_gy1rcal( data );
    data += sizeof(wg_gy1rcal);

    cv_cnv_endian_a_rf1coil( data );
    data += sizeof(a_rf1coil);

    cv_cnv_endian_ia_rf1coil( data );
    data += sizeof(ia_rf1coil);

    cv_cnv_endian_pw_rf1coil( data );
    data += sizeof(pw_rf1coil);

    cv_cnv_endian_res_rf1coil( data );
    data += sizeof(res_rf1coil);

    cv_cnv_endian_off_rf1coil( data );
    data += sizeof(off_rf1coil);

    cv_cnv_endian_rfslot_rf1coil( data );
    data += sizeof(rfslot_rf1coil);

    cv_cnv_endian_gscale_rf1coil( data );
    data += sizeof(gscale_rf1coil);

    cv_cnv_endian_n_rf1coil( data );
    data += sizeof(n_rf1coil);

    cv_cnv_endian_wg_rf1coil( data );
    data += sizeof(wg_rf1coil);

    cv_cnv_endian_a_gzrf1coil( data );
    data += sizeof(a_gzrf1coil);

    cv_cnv_endian_ia_gzrf1coil( data );
    data += sizeof(ia_gzrf1coil);

    cv_cnv_endian_pw_gzrf1coila( data );
    data += sizeof(pw_gzrf1coila);

    cv_cnv_endian_pw_gzrf1coild( data );
    data += sizeof(pw_gzrf1coild);

    cv_cnv_endian_pw_gzrf1coil( data );
    data += sizeof(pw_gzrf1coil);

    cv_cnv_endian_wg_gzrf1coil( data );
    data += sizeof(wg_gzrf1coil);

    cv_cnv_endian_a_gzcombcoil( data );
    data += sizeof(a_gzcombcoil);

    cv_cnv_endian_a_gzcombcoila( data );
    data += sizeof(a_gzcombcoila);

    cv_cnv_endian_a_gzcombcoilb( data );
    data += sizeof(a_gzcombcoilb);

    cv_cnv_endian_ia_gzcombcoil( data );
    data += sizeof(ia_gzcombcoil);

    cv_cnv_endian_ia_gzcombcoilwa( data );
    data += sizeof(ia_gzcombcoilwa);

    cv_cnv_endian_ia_gzcombcoilwb( data );
    data += sizeof(ia_gzcombcoilwb);

    cv_cnv_endian_pw_gzcombcoila( data );
    data += sizeof(pw_gzcombcoila);

    cv_cnv_endian_pw_gzcombcoild( data );
    data += sizeof(pw_gzcombcoild);

    cv_cnv_endian_pw_gzcombcoilf( data );
    data += sizeof(pw_gzcombcoilf);

    cv_cnv_endian_pw_gzcombcoil( data );
    data += sizeof(pw_gzcombcoil);

    cv_cnv_endian_res_gzcombcoil( data );
    data += sizeof(res_gzcombcoil);

    cv_cnv_endian_per_gzcombcoil( data );
    data += sizeof(per_gzcombcoil);

    cv_cnv_endian_wg_gzcombcoil( data );
    data += sizeof(wg_gzcombcoil);

    cv_cnv_endian_a_gzprcoil( data );
    data += sizeof(a_gzprcoil);

    cv_cnv_endian_a_gzprcoila( data );
    data += sizeof(a_gzprcoila);

    cv_cnv_endian_a_gzprcoilb( data );
    data += sizeof(a_gzprcoilb);

    cv_cnv_endian_ia_gzprcoil( data );
    data += sizeof(ia_gzprcoil);

    cv_cnv_endian_ia_gzprcoilwa( data );
    data += sizeof(ia_gzprcoilwa);

    cv_cnv_endian_ia_gzprcoilwb( data );
    data += sizeof(ia_gzprcoilwb);

    cv_cnv_endian_pw_gzprcoila( data );
    data += sizeof(pw_gzprcoila);

    cv_cnv_endian_pw_gzprcoild( data );
    data += sizeof(pw_gzprcoild);

    cv_cnv_endian_pw_gzprcoilf( data );
    data += sizeof(pw_gzprcoilf);

    cv_cnv_endian_pw_gzprcoil( data );
    data += sizeof(pw_gzprcoil);

    cv_cnv_endian_res_gzprcoil( data );
    data += sizeof(res_gzprcoil);

    cv_cnv_endian_per_gzprcoil( data );
    data += sizeof(per_gzprcoil);

    cv_cnv_endian_wg_gzprcoil( data );
    data += sizeof(wg_gzprcoil);

    cv_cnv_endian_a_gxwcoil( data );
    data += sizeof(a_gxwcoil);

    cv_cnv_endian_ia_gxwcoil( data );
    data += sizeof(ia_gxwcoil);

    cv_cnv_endian_pw_gxwcoila( data );
    data += sizeof(pw_gxwcoila);

    cv_cnv_endian_pw_gxwcoild( data );
    data += sizeof(pw_gxwcoild);

    cv_cnv_endian_pw_gxwcoil( data );
    data += sizeof(pw_gxwcoil);

    cv_cnv_endian_wg_gxwcoil( data );
    data += sizeof(wg_gxwcoil);

    cv_cnv_endian_filter_echo1coil( data );
    data += sizeof(filter_echo1coil);

    cv_cnv_endian_a_gx1coil( data );
    data += sizeof(a_gx1coil);

    cv_cnv_endian_a_gx1coila( data );
    data += sizeof(a_gx1coila);

    cv_cnv_endian_a_gx1coilb( data );
    data += sizeof(a_gx1coilb);

    cv_cnv_endian_ia_gx1coil( data );
    data += sizeof(ia_gx1coil);

    cv_cnv_endian_ia_gx1coilwa( data );
    data += sizeof(ia_gx1coilwa);

    cv_cnv_endian_ia_gx1coilwb( data );
    data += sizeof(ia_gx1coilwb);

    cv_cnv_endian_pw_gx1coila( data );
    data += sizeof(pw_gx1coila);

    cv_cnv_endian_pw_gx1coild( data );
    data += sizeof(pw_gx1coild);

    cv_cnv_endian_pw_gx1coilf( data );
    data += sizeof(pw_gx1coilf);

    cv_cnv_endian_pw_gx1coil( data );
    data += sizeof(pw_gx1coil);

    cv_cnv_endian_res_gx1coil( data );
    data += sizeof(res_gx1coil);

    cv_cnv_endian_per_gx1coil( data );
    data += sizeof(per_gx1coil);

    cv_cnv_endian_wg_gx1coil( data );
    data += sizeof(wg_gx1coil);

    cv_cnv_endian_a_gy1coil( data );
    data += sizeof(a_gy1coil);

    cv_cnv_endian_a_gy1coila( data );
    data += sizeof(a_gy1coila);

    cv_cnv_endian_a_gy1coilb( data );
    data += sizeof(a_gy1coilb);

    cv_cnv_endian_ia_gy1coil( data );
    data += sizeof(ia_gy1coil);

    cv_cnv_endian_ia_gy1coilwa( data );
    data += sizeof(ia_gy1coilwa);

    cv_cnv_endian_ia_gy1coilwb( data );
    data += sizeof(ia_gy1coilwb);

    cv_cnv_endian_pw_gy1coila( data );
    data += sizeof(pw_gy1coila);

    cv_cnv_endian_pw_gy1coild( data );
    data += sizeof(pw_gy1coild);

    cv_cnv_endian_pw_gy1coilf( data );
    data += sizeof(pw_gy1coilf);

    cv_cnv_endian_pw_gy1coil( data );
    data += sizeof(pw_gy1coil);

    cv_cnv_endian_res_gy1coil( data );
    data += sizeof(res_gy1coil);

    cv_cnv_endian_per_gy1coil( data );
    data += sizeof(per_gy1coil);

    cv_cnv_endian_wg_gy1coil( data );
    data += sizeof(wg_gy1coil);

    cv_cnv_endian_a_gy1rcoil( data );
    data += sizeof(a_gy1rcoil);

    cv_cnv_endian_a_gy1rcoila( data );
    data += sizeof(a_gy1rcoila);

    cv_cnv_endian_a_gy1rcoilb( data );
    data += sizeof(a_gy1rcoilb);

    cv_cnv_endian_ia_gy1rcoil( data );
    data += sizeof(ia_gy1rcoil);

    cv_cnv_endian_ia_gy1rcoilwa( data );
    data += sizeof(ia_gy1rcoilwa);

    cv_cnv_endian_ia_gy1rcoilwb( data );
    data += sizeof(ia_gy1rcoilwb);

    cv_cnv_endian_pw_gy1rcoila( data );
    data += sizeof(pw_gy1rcoila);

    cv_cnv_endian_pw_gy1rcoild( data );
    data += sizeof(pw_gy1rcoild);

    cv_cnv_endian_pw_gy1rcoilf( data );
    data += sizeof(pw_gy1rcoilf);

    cv_cnv_endian_pw_gy1rcoil( data );
    data += sizeof(pw_gy1rcoil);

    cv_cnv_endian_res_gy1rcoil( data );
    data += sizeof(res_gy1rcoil);

    cv_cnv_endian_per_gy1rcoil( data );
    data += sizeof(per_gy1rcoil);

    cv_cnv_endian_wg_gy1rcoil( data );
    data += sizeof(wg_gy1rcoil);

    cv_cnv_endian_start_gycylra( data );
    data += sizeof(start_gycylra);

    cv_cnv_endian_end_gycylra( data );
    data += sizeof(end_gycylra);

    cv_cnv_endian_ia_stgycylra( data );
    data += sizeof(ia_stgycylra);

    cv_cnv_endian_ia_endgycylra( data );
    data += sizeof(ia_endgycylra);

    cv_cnv_endian_pw_gycylra( data );
    data += sizeof(pw_gycylra);

    cv_cnv_endian_res_gycylra( data );
    data += sizeof(res_gycylra);

    cv_cnv_endian_wg_gycylra( data );
    data += sizeof(wg_gycylra);

    cv_cnv_endian_start_gzcylra( data );
    data += sizeof(start_gzcylra);

    cv_cnv_endian_end_gzcylra( data );
    data += sizeof(end_gzcylra);

    cv_cnv_endian_ia_stgzcylra( data );
    data += sizeof(ia_stgzcylra);

    cv_cnv_endian_ia_endgzcylra( data );
    data += sizeof(ia_endgzcylra);

    cv_cnv_endian_pw_gzcylra( data );
    data += sizeof(pw_gzcylra);

    cv_cnv_endian_res_gzcylra( data );
    data += sizeof(res_gzcylra);

    cv_cnv_endian_wg_gzcylra( data );
    data += sizeof(wg_gzcylra);

    cv_cnv_endian_res_rfcylr( data );
    data += sizeof(res_rfcylr);

    cv_cnv_endian_wg_rfcylr( data );
    data += sizeof(wg_rfcylr);

    cv_cnv_endian_res_thcylr( data );
    data += sizeof(res_thcylr);

    cv_cnv_endian_wg_thcylr( data );
    data += sizeof(wg_thcylr);

    cv_cnv_endian_res_gycylr( data );
    data += sizeof(res_gycylr);

    cv_cnv_endian_wg_gycylr( data );
    data += sizeof(wg_gycylr);

    cv_cnv_endian_res_gzcylr( data );
    data += sizeof(res_gzcylr);

    cv_cnv_endian_wg_gzcylr( data );
    data += sizeof(wg_gzcylr);

    cv_cnv_endian_a_gzrf1mon( data );
    data += sizeof(a_gzrf1mon);

    cv_cnv_endian_ia_gzrf1mon( data );
    data += sizeof(ia_gzrf1mon);

    cv_cnv_endian_pw_gzrf1mona( data );
    data += sizeof(pw_gzrf1mona);

    cv_cnv_endian_pw_gzrf1mond( data );
    data += sizeof(pw_gzrf1mond);

    cv_cnv_endian_pw_gzrf1mon( data );
    data += sizeof(pw_gzrf1mon);

    cv_cnv_endian_a_rf1mon( data );
    data += sizeof(a_rf1mon);

    cv_cnv_endian_ia_rf1mon( data );
    data += sizeof(ia_rf1mon);

    cv_cnv_endian_pw_rf1mon( data );
    data += sizeof(pw_rf1mon);

    cv_cnv_endian_res_rf1mon( data );
    data += sizeof(res_rf1mon);

    cv_cnv_endian_temp_res_rf1mon( data );
    data += sizeof(temp_res_rf1mon);

    cv_cnv_endian_cyc_rf1mon( data );
    data += sizeof(cyc_rf1mon);

    cv_cnv_endian_off_rf1mon( data );
    data += sizeof(off_rf1mon);

    cv_cnv_endian_alpha_rf1mon( data );
    data += sizeof(alpha_rf1mon);

    cv_cnv_endian_thk_rf1mon( data );
    data += sizeof(thk_rf1mon);

    cv_cnv_endian_gscale_rf1mon( data );
    data += sizeof(gscale_rf1mon);

    cv_cnv_endian_flip_rf1mon( data );
    data += sizeof(flip_rf1mon);

    cv_cnv_endian_wg_rf1mon( data );
    data += sizeof(wg_rf1mon);

    cv_cnv_endian_a_gyrf1mon( data );
    data += sizeof(a_gyrf1mon);

    cv_cnv_endian_ia_gyrf1mon( data );
    data += sizeof(ia_gyrf1mon);

    cv_cnv_endian_pw_gyrf1mona( data );
    data += sizeof(pw_gyrf1mona);

    cv_cnv_endian_pw_gyrf1mond( data );
    data += sizeof(pw_gyrf1mond);

    cv_cnv_endian_pw_gyrf1mon( data );
    data += sizeof(pw_gyrf1mon);

    cv_cnv_endian_wg_gyrf1mon( data );
    data += sizeof(wg_gyrf1mon);

    cv_cnv_endian_a_gz1mon( data );
    data += sizeof(a_gz1mon);

    cv_cnv_endian_ia_gz1mon( data );
    data += sizeof(ia_gz1mon);

    cv_cnv_endian_pw_gz1mona( data );
    data += sizeof(pw_gz1mona);

    cv_cnv_endian_pw_gz1mond( data );
    data += sizeof(pw_gz1mond);

    cv_cnv_endian_pw_gz1mon( data );
    data += sizeof(pw_gz1mon);

    cv_cnv_endian_wg_gz1mon( data );
    data += sizeof(wg_gz1mon);

    cv_cnv_endian_a_gy1mon( data );
    data += sizeof(a_gy1mon);

    cv_cnv_endian_ia_gy1mon( data );
    data += sizeof(ia_gy1mon);

    cv_cnv_endian_pw_gy1mona( data );
    data += sizeof(pw_gy1mona);

    cv_cnv_endian_pw_gy1mond( data );
    data += sizeof(pw_gy1mond);

    cv_cnv_endian_pw_gy1mon( data );
    data += sizeof(pw_gy1mon);

    cv_cnv_endian_wg_gy1mon( data );
    data += sizeof(wg_gy1mon);

    cv_cnv_endian_a_gyrf2mon( data );
    data += sizeof(a_gyrf2mon);

    cv_cnv_endian_ia_gyrf2mon( data );
    data += sizeof(ia_gyrf2mon);

    cv_cnv_endian_pw_gyrf2mona( data );
    data += sizeof(pw_gyrf2mona);

    cv_cnv_endian_pw_gyrf2mond( data );
    data += sizeof(pw_gyrf2mond);

    cv_cnv_endian_pw_gyrf2mon( data );
    data += sizeof(pw_gyrf2mon);

    cv_cnv_endian_a_rf2mon( data );
    data += sizeof(a_rf2mon);

    cv_cnv_endian_ia_rf2mon( data );
    data += sizeof(ia_rf2mon);

    cv_cnv_endian_pw_rf2mon( data );
    data += sizeof(pw_rf2mon);

    cv_cnv_endian_res_rf2mon( data );
    data += sizeof(res_rf2mon);

    cv_cnv_endian_temp_res_rf2mon( data );
    data += sizeof(temp_res_rf2mon);

    cv_cnv_endian_cyc_rf2mon( data );
    data += sizeof(cyc_rf2mon);

    cv_cnv_endian_off_rf2mon( data );
    data += sizeof(off_rf2mon);

    cv_cnv_endian_alpha_rf2mon( data );
    data += sizeof(alpha_rf2mon);

    cv_cnv_endian_thk_rf2mon( data );
    data += sizeof(thk_rf2mon);

    cv_cnv_endian_gscale_rf2mon( data );
    data += sizeof(gscale_rf2mon);

    cv_cnv_endian_flip_rf2mon( data );
    data += sizeof(flip_rf2mon);

    cv_cnv_endian_wg_rf2mon( data );
    data += sizeof(wg_rf2mon);

    cv_cnv_endian_a_gyrf2lmon( data );
    data += sizeof(a_gyrf2lmon);

    cv_cnv_endian_ia_gyrf2lmon( data );
    data += sizeof(ia_gyrf2lmon);

    cv_cnv_endian_pw_gyrf2lmona( data );
    data += sizeof(pw_gyrf2lmona);

    cv_cnv_endian_pw_gyrf2lmond( data );
    data += sizeof(pw_gyrf2lmond);

    cv_cnv_endian_pw_gyrf2lmon( data );
    data += sizeof(pw_gyrf2lmon);

    cv_cnv_endian_wg_gyrf2lmon( data );
    data += sizeof(wg_gyrf2lmon);

    cv_cnv_endian_a_gyrf2rmon( data );
    data += sizeof(a_gyrf2rmon);

    cv_cnv_endian_ia_gyrf2rmon( data );
    data += sizeof(ia_gyrf2rmon);

    cv_cnv_endian_pw_gyrf2rmona( data );
    data += sizeof(pw_gyrf2rmona);

    cv_cnv_endian_pw_gyrf2rmond( data );
    data += sizeof(pw_gyrf2rmond);

    cv_cnv_endian_pw_gyrf2rmon( data );
    data += sizeof(pw_gyrf2rmon);

    cv_cnv_endian_wg_gyrf2rmon( data );
    data += sizeof(wg_gyrf2rmon);

    cv_cnv_endian_a_gxwmon( data );
    data += sizeof(a_gxwmon);

    cv_cnv_endian_ia_gxwmon( data );
    data += sizeof(ia_gxwmon);

    cv_cnv_endian_pw_gxwmona( data );
    data += sizeof(pw_gxwmona);

    cv_cnv_endian_pw_gxwmond( data );
    data += sizeof(pw_gxwmond);

    cv_cnv_endian_pw_gxwmon( data );
    data += sizeof(pw_gxwmon);

    cv_cnv_endian_wg_gxwmon( data );
    data += sizeof(wg_gxwmon);

    cv_cnv_endian_a_gx1mon( data );
    data += sizeof(a_gx1mon);

    cv_cnv_endian_ia_gx1mon( data );
    data += sizeof(ia_gx1mon);

    cv_cnv_endian_pw_gx1mona( data );
    data += sizeof(pw_gx1mona);

    cv_cnv_endian_pw_gx1mond( data );
    data += sizeof(pw_gx1mond);

    cv_cnv_endian_pw_gx1mon( data );
    data += sizeof(pw_gx1mon);

    cv_cnv_endian_wg_gx1mon( data );
    data += sizeof(wg_gx1mon);

    cv_cnv_endian_a_gxfcmon( data );
    data += sizeof(a_gxfcmon);

    cv_cnv_endian_ia_gxfcmon( data );
    data += sizeof(ia_gxfcmon);

    cv_cnv_endian_pw_gxfcmona( data );
    data += sizeof(pw_gxfcmona);

    cv_cnv_endian_pw_gxfcmond( data );
    data += sizeof(pw_gxfcmond);

    cv_cnv_endian_pw_gxfcmon( data );
    data += sizeof(pw_gxfcmon);

    cv_cnv_endian_wg_gxfcmon( data );
    data += sizeof(wg_gxfcmon);

    cv_cnv_endian_filter_echo1mon( data );
    data += sizeof(filter_echo1mon);

    cv_cnv_endian_a_gzkmon( data );
    data += sizeof(a_gzkmon);

    cv_cnv_endian_ia_gzkmon( data );
    data += sizeof(ia_gzkmon);

    cv_cnv_endian_pw_gzkmona( data );
    data += sizeof(pw_gzkmona);

    cv_cnv_endian_pw_gzkmond( data );
    data += sizeof(pw_gzkmond);

    cv_cnv_endian_pw_gzkmon( data );
    data += sizeof(pw_gzkmon);

    cv_cnv_endian_wg_gzkmon( data );
    data += sizeof(wg_gzkmon);

    cv_cnv_endian_start_gycylratipup( data );
    data += sizeof(start_gycylratipup);

    cv_cnv_endian_end_gycylratipup( data );
    data += sizeof(end_gycylratipup);

    cv_cnv_endian_ia_stgycylratipup( data );
    data += sizeof(ia_stgycylratipup);

    cv_cnv_endian_ia_endgycylratipup( data );
    data += sizeof(ia_endgycylratipup);

    cv_cnv_endian_pw_gycylratipup( data );
    data += sizeof(pw_gycylratipup);

    cv_cnv_endian_res_gycylratipup( data );
    data += sizeof(res_gycylratipup);

    cv_cnv_endian_wg_gycylratipup( data );
    data += sizeof(wg_gycylratipup);

    cv_cnv_endian_start_gzcylratipup( data );
    data += sizeof(start_gzcylratipup);

    cv_cnv_endian_end_gzcylratipup( data );
    data += sizeof(end_gzcylratipup);

    cv_cnv_endian_ia_stgzcylratipup( data );
    data += sizeof(ia_stgzcylratipup);

    cv_cnv_endian_ia_endgzcylratipup( data );
    data += sizeof(ia_endgzcylratipup);

    cv_cnv_endian_pw_gzcylratipup( data );
    data += sizeof(pw_gzcylratipup);

    cv_cnv_endian_res_gzcylratipup( data );
    data += sizeof(res_gzcylratipup);

    cv_cnv_endian_wg_gzcylratipup( data );
    data += sizeof(wg_gzcylratipup);

    cv_cnv_endian_res_rfcylrtipup( data );
    data += sizeof(res_rfcylrtipup);

    cv_cnv_endian_wg_rfcylrtipup( data );
    data += sizeof(wg_rfcylrtipup);

    cv_cnv_endian_res_thcylrtipup( data );
    data += sizeof(res_thcylrtipup);

    cv_cnv_endian_wg_thcylrtipup( data );
    data += sizeof(wg_thcylrtipup);

    cv_cnv_endian_res_gycylrtipup( data );
    data += sizeof(res_gycylrtipup);

    cv_cnv_endian_wg_gycylrtipup( data );
    data += sizeof(wg_gycylrtipup);

    cv_cnv_endian_res_gzcylrtipup( data );
    data += sizeof(res_gzcylrtipup);

    cv_cnv_endian_wg_gzcylrtipup( data );
    data += sizeof(wg_gzcylrtipup);

    cv_cnv_endian_a_gyrfmontipup( data );
    data += sizeof(a_gyrfmontipup);

    cv_cnv_endian_ia_gyrfmontipup( data );
    data += sizeof(ia_gyrfmontipup);

    cv_cnv_endian_pw_gyrfmontipupa( data );
    data += sizeof(pw_gyrfmontipupa);

    cv_cnv_endian_pw_gyrfmontipupd( data );
    data += sizeof(pw_gyrfmontipupd);

    cv_cnv_endian_pw_gyrfmontipup( data );
    data += sizeof(pw_gyrfmontipup);

    cv_cnv_endian_a_rfmontipup( data );
    data += sizeof(a_rfmontipup);

    cv_cnv_endian_ia_rfmontipup( data );
    data += sizeof(ia_rfmontipup);

    cv_cnv_endian_pw_rfmontipup( data );
    data += sizeof(pw_rfmontipup);

    cv_cnv_endian_res_rfmontipup( data );
    data += sizeof(res_rfmontipup);

    cv_cnv_endian_temp_res_rfmontipup( data );
    data += sizeof(temp_res_rfmontipup);

    cv_cnv_endian_cyc_rfmontipup( data );
    data += sizeof(cyc_rfmontipup);

    cv_cnv_endian_off_rfmontipup( data );
    data += sizeof(off_rfmontipup);

    cv_cnv_endian_alpha_rfmontipup( data );
    data += sizeof(alpha_rfmontipup);

    cv_cnv_endian_thk_rfmontipup( data );
    data += sizeof(thk_rfmontipup);

    cv_cnv_endian_gscale_rfmontipup( data );
    data += sizeof(gscale_rfmontipup);

    cv_cnv_endian_flip_rfmontipup( data );
    data += sizeof(flip_rfmontipup);

    cv_cnv_endian_wg_rfmontipup( data );
    data += sizeof(wg_rfmontipup);

    cv_cnv_endian_a_gzkmontipup( data );
    data += sizeof(a_gzkmontipup);

    cv_cnv_endian_ia_gzkmontipup( data );
    data += sizeof(ia_gzkmontipup);

    cv_cnv_endian_pw_gzkmontipupa( data );
    data += sizeof(pw_gzkmontipupa);

    cv_cnv_endian_pw_gzkmontipupd( data );
    data += sizeof(pw_gzkmontipupd);

    cv_cnv_endian_pw_gzkmontipup( data );
    data += sizeof(pw_gzkmontipup);

    cv_cnv_endian_wg_gzkmontipup( data );
    data += sizeof(wg_gzkmontipup);

    cv_cnv_endian__lastcv( data );
    data += sizeof(_lastcv);

    cv_cnv_endian_rsp_info( data );
    data += sizeof(rsp_info);

    cv_cnv_endian_rsprot( data );
    data += sizeof(rsprot);

    cv_cnv_endian_rsptrigger( data );
    data += sizeof(rsptrigger);

    cv_cnv_endian_ipg_alloc_instr( data );
    data += sizeof(ipg_alloc_instr);

    cv_cnv_endian_asrsp_info( data );
    data += sizeof(asrsp_info);

    cv_cnv_endian_sat_rot_matrices( data );
    data += sizeof(sat_rot_matrices);

    cv_cnv_endian_sat_rot_ex_indices( data );
    data += sizeof(sat_rot_ex_indices);

    cv_cnv_endian_phygrd( data );
    data += sizeof(phygrd);

    cv_cnv_endian_loggrd( data );
    data += sizeof(loggrd);

    cv_cnv_endian_satloggrd( data );
    data += sizeof(satloggrd);

    cv_cnv_endian_asloggrd( data );
    data += sizeof(asloggrd);

    cv_cnv_endian_asscan_info( data );
    data += sizeof(asscan_info);

    cv_cnv_endian_PSrot( data );
    data += sizeof(PSrot);

    cv_cnv_endian_PSrot_mod( data );
    data += sizeof(PSrot_mod);

    cv_cnv_endian_phase_off( data );
    data += sizeof(phase_off);

    cv_cnv_endian_yres_phase( data );
    data += sizeof(yres_phase);

    cv_cnv_endian_yoffs1( data );
    data += sizeof(yoffs1);

    cv_cnv_endian_off_rfcsz_base( data );
    data += sizeof(off_rfcsz_base);

    cv_cnv_endian_scan_info_base( data );
    data += sizeof(scan_info_base);

    cv_cnv_endian_xyz_base( data );
    data += sizeof(xyz_base);

    cv_cnv_endian_rsprot_base( data );
    data += sizeof(rsprot_base);

    cv_cnv_endian_rtia_first_scan_flag( data );
    data += sizeof(rtia_first_scan_flag);

    cv_cnv_endian_rsp_psc_info( data );
    data += sizeof(rsp_psc_info);

    cv_cnv_endian_coilInfo_tgt( data );
    data += sizeof(coilInfo_tgt);

    cv_cnv_endian_volRecCoilInfo_tgt( data );
    data += sizeof(volRecCoilInfo_tgt);

    cv_cnv_endian_fullRecCoilInfo_tgt( data );
    data += sizeof(fullRecCoilInfo_tgt);

    cv_cnv_endian_txCoilInfo_tgt( data );
    data += sizeof(txCoilInfo_tgt);

    cv_cnv_endian_cframpdir_tgt( data );
    data += sizeof(cframpdir_tgt);

    cv_cnv_endian_chksum_rampdir_tgt( data );
    data += sizeof(chksum_rampdir_tgt);

    cv_cnv_endian_seqcfginfo( data );
    data += sizeof(seqcfginfo);

    cv_cnv_endian_PSfreq_offset( data );
    data += sizeof(PSfreq_offset);

    cv_cnv_endian_cfl_tdaq( data );
    data += sizeof(cfl_tdaq);

    cv_cnv_endian_cfh_tdaq( data );
    data += sizeof(cfh_tdaq);

    cv_cnv_endian_rcvn_tdaq( data );
    data += sizeof(rcvn_tdaq);

    cv_cnv_endian_rsp_PSrot( data );
    data += sizeof(rsp_PSrot);

    cv_cnv_endian_rsp_rcvnrot( data );
    data += sizeof(rsp_rcvnrot);

    cv_cnv_endian_rsrsprot( data );
    data += sizeof(rsrsprot);

    cv_cnv_endian_dtgrsprot( data );
    data += sizeof(dtgrsprot);

    cv_cnv_endian_calrsprot( data );
    data += sizeof(calrsprot);

    cv_cnv_endian_coilrsprot( data );
    data += sizeof(coilrsprot);

    cv_cnv_endian_min_ssp( data );
    data += sizeof(min_ssp);

    cv_cnv_endian_rsrsp_info( data );
    data += sizeof(rsrsp_info);

    cv_cnv_endian_dtgrsp_info( data );
    data += sizeof(dtgrsp_info);

    cv_cnv_endian_calrsp_info( data );
    data += sizeof(calrsp_info);

    cv_cnv_endian_coilrsp_info( data );
    data += sizeof(coilrsp_info);

    cv_cnv_endian_cal_zyindex( data );
    data += sizeof(cal_zyindex);

    cv_cnv_endian_coil_zyindex( data );
    data += sizeof(coil_zyindex);

    cv_cnv_endian_presscfh_info( data );
    data += sizeof(presscfh_info);

    cv_cnv_endian_cflloggrd( data );
    data += sizeof(cflloggrd);

    cv_cnv_endian_ps1loggrd( data );
    data += sizeof(ps1loggrd);

    cv_cnv_endian_cfhloggrd( data );
    data += sizeof(cfhloggrd);

    cv_cnv_endian_rcvnloggrd( data );
    data += sizeof(rcvnloggrd);

    cv_cnv_endian_rsloggrd( data );
    data += sizeof(rsloggrd);

    cv_cnv_endian_dtgloggrd( data );
    data += sizeof(dtgloggrd);

    cv_cnv_endian_calloggrd( data );
    data += sizeof(calloggrd);

    cv_cnv_endian_coilloggrd( data );
    data += sizeof(coilloggrd);

    cv_cnv_endian_maptgloggrd( data );
    data += sizeof(maptgloggrd);

    cv_cnv_endian_original_pgrd( data );
    data += sizeof(original_pgrd);

    cv_cnv_endian_read_axis( data );
    data += sizeof(read_axis);

    cv_cnv_endian_killer_axis( data );
    data += sizeof(killer_axis);

    cv_cnv_endian_tg_killer_axis( data );
    data += sizeof(tg_killer_axis);

    cv_cnv_endian_tg_read_axis( data );
    data += sizeof(tg_read_axis);

    cv_cnv_endian_z_to_omscale( data );
    data += sizeof(z_to_omscale);

    cv_cnv_endian_y_to_omscale( data );
    data += sizeof(y_to_omscale);

    cv_cnv_endian_shift_to_omscale( data );
    data += sizeof(shift_to_omscale);

    cv_cnv_endian_runtime_rf_waveform_rf1( data );
    data += sizeof(runtime_rf_waveform_rf1);

    cv_cnv_endian_runtime_rf_waveform_rf1a( data );
    data += sizeof(runtime_rf_waveform_rf1a);

    cv_cnv_endian_runtime_rf_waveform_rf1b( data );
    data += sizeof(runtime_rf_waveform_rf1b);

    cv_cnv_endian_runtime_rf_waveform_rf1c( data );
    data += sizeof(runtime_rf_waveform_rf1c);

    cv_cnv_endian_runtime_rf_waveform_rf1d( data );
    data += sizeof(runtime_rf_waveform_rf1d);

    cv_cnv_endian_runtime_rf_waveform_rf1e( data );
    data += sizeof(runtime_rf_waveform_rf1e);

    cv_cnv_endian_runtime_rf_waveform_rf1f( data );
    data += sizeof(runtime_rf_waveform_rf1f);

    cv_cnv_endian_runtime_rf_waveform_rf1g( data );
    data += sizeof(runtime_rf_waveform_rf1g);

    cv_cnv_endian_runtime_rf_waveform_rf1h( data );
    data += sizeof(runtime_rf_waveform_rf1h);

    cv_cnv_endian_runtime_rf_waveform_rf1i( data );
    data += sizeof(runtime_rf_waveform_rf1i);

    cv_cnv_endian_slloc2sltime( data );
    data += sizeof(slloc2sltime);

    cv_cnv_endian_sltime2slloc( data );
    data += sizeof(sltime2slloc);

    cv_cnv_endian_f_sltime2slloc( data );
    data += sizeof(f_sltime2slloc);

    cv_cnv_endian_act_slquant1( data );
    data += sizeof(act_slquant1);

    cv_cnv_endian_rsprot_unscaled( data );
    data += sizeof(rsprot_unscaled);

    cv_cnv_endian_inversRR( data );
    data += sizeof(inversRR);

    cv_cnv_endian_D( data );
    data += sizeof(D);

    cv_cnv_endian_log_incdifx( data );
    data += sizeof(log_incdifx);

    cv_cnv_endian_log_incdify( data );
    data += sizeof(log_incdify);

    cv_cnv_endian_log_incdifz( data );
    data += sizeof(log_incdifz);

    cv_cnv_endian_diff_ampx2( data );
    data += sizeof(diff_ampx2);

    cv_cnv_endian_diff_ampy2( data );
    data += sizeof(diff_ampy2);

    cv_cnv_endian_diff_ampz2( data );
    data += sizeof(diff_ampz2);

    cv_cnv_endian_off_rfcsz( data );
    data += sizeof(off_rfcsz);

    cv_cnv_endian_dwigcor( data );
    data += sizeof(dwigcor);

    cv_cnv_endian_dwibcor( data );
    data += sizeof(dwibcor);

    cv_cnv_endian_dwikcor( data );
    data += sizeof(dwikcor);

    cv_cnv_endian_dwi_hoec_gcor_XonX( data );
    data += sizeof(dwi_hoec_gcor_XonX);

    cv_cnv_endian_dwi_hoec_gcor_YonX( data );
    data += sizeof(dwi_hoec_gcor_YonX);

    cv_cnv_endian_dwi_hoec_gcor_ZonX( data );
    data += sizeof(dwi_hoec_gcor_ZonX);

    cv_cnv_endian_dwi_hoec_gcor_XonY( data );
    data += sizeof(dwi_hoec_gcor_XonY);

    cv_cnv_endian_dwi_hoec_gcor_YonY( data );
    data += sizeof(dwi_hoec_gcor_YonY);

    cv_cnv_endian_dwi_hoec_gcor_ZonY( data );
    data += sizeof(dwi_hoec_gcor_ZonY);

    cv_cnv_endian_dwi_hoec_bcor_XonB0( data );
    data += sizeof(dwi_hoec_bcor_XonB0);

    cv_cnv_endian_dwi_hoec_bcor_YonB0( data );
    data += sizeof(dwi_hoec_bcor_YonB0);

    cv_cnv_endian_dwi_hoec_bcor_ZonB0( data );
    data += sizeof(dwi_hoec_bcor_ZonB0);

    cv_cnv_endian_diff_ampx( data );
    data += sizeof(diff_ampx);

    cv_cnv_endian_diff_ampy( data );
    data += sizeof(diff_ampy);

    cv_cnv_endian_diff_ampz( data );
    data += sizeof(diff_ampz);

    cv_cnv_endian_diff_bv_weight( data );
    data += sizeof(diff_bv_weight);

    cv_cnv_endian_epiphygrd( data );
    data += sizeof(epiphygrd);

    cv_cnv_endian_epiloggrd( data );
    data += sizeof(epiloggrd);

    cv_cnv_endian_orthphygrd( data );
    data += sizeof(orthphygrd);

    cv_cnv_endian_orthloggrd( data );
    data += sizeof(orthloggrd);

    cv_cnv_endian_rfpulseInfo( data );
    data += sizeof(rfpulseInfo);

    cv_cnv_endian_delay_buffer( data );
    data += sizeof(delay_buffer);

    cv_cnv_endian_dither_buffer( data );
    data += sizeof(dither_buffer);

    cv_cnv_endian_ccinx( data );
    data += sizeof(ccinx);

    cv_cnv_endian_cciny( data );
    data += sizeof(cciny);

    cv_cnv_endian_ccinz( data );
    data += sizeof(ccinz);

    cv_cnv_endian_fesp_in( data );
    data += sizeof(fesp_in);

    cv_cnv_endian_esp_in( data );
    data += sizeof(esp_in);

    cv_cnv_endian_g0( data );
    data += sizeof(g0);

    cv_cnv_endian_num_elements( data );
    data += sizeof(num_elements);

    cv_cnv_endian_file_exist( data );
    data += sizeof(file_exist);

    cv_cnv_endian_taratio_arr( data );
    data += sizeof(taratio_arr);

    cv_cnv_endian_totarea_arr( data );
    data += sizeof(totarea_arr);

    cv_cnv_endian_agxdif_tmp( data );
    data += sizeof(agxdif_tmp);

    cv_cnv_endian_agydif_tmp( data );
    data += sizeof(agydif_tmp);

    cv_cnv_endian_agzdif_tmp( data );
    data += sizeof(agzdif_tmp);

    cv_cnv_endian_difnextab_rsp( data );
    data += sizeof(difnextab_rsp);

    cv_cnv_endian_ctlend_last( data );
    data += sizeof(ctlend_last);

    cv_cnv_endian_ctlend_fill( data );
    data += sizeof(ctlend_fill);

    cv_cnv_endian_ctlend_unfill( data );
    data += sizeof(ctlend_unfill);

    cv_cnv_endian_t1flair_slice_info_enh( data );
    data += sizeof(t1flair_slice_info_enh);

    cv_cnv_endian_t1flair_slice_info_reg( data );
    data += sizeof(t1flair_slice_info_reg);

    cv_cnv_endian_ssrffile( data );
    data += sizeof(ssrffile);

    cv_cnv_endian_ssgzfile( data );
    data += sizeof(ssgzfile);

    cv_cnv_endian_hgzssfn( data );
    data += sizeof(hgzssfn);

    cv_cnv_endian_ss_psd_slthick( data );
    data += sizeof(ss_psd_slthick);

    cv_cnv_endian_mon_rsp_info( data );
    data += sizeof(mon_rsp_info);

    cv_cnv_endian_mon_rsp_info2( data );
    data += sizeof(mon_rsp_info2);

    cv_cnv_endian_monloggrd( data );
    data += sizeof(monloggrd);

    cv_cnv_endian_monphygrd( data );
    data += sizeof(monphygrd);

    cv_cnv_endian_rsprot_monitor( data );
    data += sizeof(rsprot_monitor);

    cv_cnv_endian_mcbias_info( data );
    data += sizeof(mcbias_info);

    cv_cnv_endian_arcPhIndex( data );
    data += sizeof(arcPhIndex);

    cv_cnv_endian_arcSlIndex( data );
    data += sizeof(arcSlIndex);

#endif /* PSD_HW */
    return;
}

/*
 * Names of CVs and TGT Export variables to copy.  The order must be the
 * same as cvcopy_table[]
 */
static const char * cvcopy_table_names[] = {
    "psd_annefact_level", 
    "rhpsd_annefact_level", 
    "psd_relative_excited_volume_freq", 
    "psd_relative_excited_volume_phase", 
    "psd_relative_excited_volume_slice", 
    "psd_relative_encoded_volume_freq", 
    "psd_relative_encoded_volume_phase", 
    "psd_relative_encoded_volume_slice", 
    "opresearch", 
    "opweight", 
    "oplandmark", 
    "optabent", 
    "opentry", 
    "oppos", 
    "opplane", 
    "opphysplane", 
    "opobplane", 
    "opimode", 
    "oppseq", 
    "opgradmode", 
    "opanatomy", 
    "piimgoptlist", 
    "opcgate", 
    "opexor", 
    "opcmon", 
    "opfcomp", 
    "opgrx", 
    "opgrxroi", 
    "opnopwrap", 
    "opptsize", 
    "oppomp", 
    "opscic", 
    "oprect", 
    "opsquare", 
    "opvbw", 
    "opblim", 
    "opfast", 
    "opcs", 
    "opdeprep", 
    "opirprep", 
    "opsrprep", 
    "opmph", 
    "opdynaplan", 
    "opdynaplan_mask_phase", 
    "opbsp", 
    "oprealtime", 
    "opfluorotrigger", 
    "opET", 
    "opmultistation", 
    "opepi", 
    "opflair", 
    "opt1flair", 
    "opt2flair", 
    "opdoubleir", 
    "optissuet1", 
    "opautotissuet1", 
    "optlrdrf", 
    "opfulltrain", 
    "opirmode", 
    "opmt", 
    "opzip512", 
    "opzip1024", 
    "opslzip2", 
    "opslzip4", 
    "opsmartprep", 
    "opssrf", 
    "opt2prep", 
    "opspiral", 
    "opnav", 
    "opfmri", 
    "opectricks", 
    "optricksdel", 
    "optrickspause", 
    "opfr", 
    "opcube", 
    "ophydro", 
    "opphasecycle", 
    "oplava", 
    "op3dcine_fiesta", 
    "op3dcine_spgr", 
    "op4dflow", 
    "opbrava", 
    "opcosmic", 
    "opvibrant", 
    "opbravo", 
    "opdisco", 
    "opmprage", 
    "oppromo", 
    "opprop", 
    "opdwprop", 
    "opdwpropduo", 
    "opmuse", 
    "opallowedrescantime", 
    "opbreastmrs", 
    "opjrmode", 
    "opssfse", 
    "t1flair_flag", 
    "opphsen", 
    "opbc", 
    "opfatwater", 
    "oprtbc", 
    "opnseg", 
    "opnnex", 
    "opsilent", 
    "opsilentlevel", 
    "opmerge", 
    "opswan", 
    "opphaseimage", 
    "opdixon", 
    "opdixproc", 
    "opmedal", 
    "opquickstep", 
    "opidealiq", 
    "opsilentmr", 
    "opmagic", 
    "opzoom_fov_xy", 
    "opzoom_fov_z", 
    "opzoom_dist_ax", 
    "opzoom_dist_cor", 
    "opzoom_dist_sag", 
    "app_grad_type", 
    "opzoom_coil_ind", 
    "pizoom_index", 
    "opsat", 
    "opsatx", 
    "opsaty", 
    "opsatz", 
    "opsatxloc1", 
    "opsatxloc2", 
    "opsatyloc1", 
    "opsatyloc2", 
    "opsatzloc1", 
    "opsatzloc2", 
    "opsatxthick", 
    "opsatythick", 
    "opsatzthick", 
    "opsatmask", 
    "opfat", 
    "opwater", 
    "opccsat", 
    "opfatcl", 
    "opspecir", 
    "opexsatmask", 
    "opexsathick1", 
    "opexsathick2", 
    "opexsathick3", 
    "opexsathick4", 
    "opexsathick5", 
    "opexsathick6", 
    "opexsatloc1", 
    "opexsatloc2", 
    "opexsatloc3", 
    "opexsatloc4", 
    "opexsatloc5", 
    "opexsatloc6", 
    "opexsatparal", 
    "opexsatoff1", 
    "opexsatoff2", 
    "opexsatoff3", 
    "opexsatoff4", 
    "opexsatoff5", 
    "opexsatoff6", 
    "opexsatlen1", 
    "opexsatlen2", 
    "opexsatlen3", 
    "opexsatlen4", 
    "opexsatlen5", 
    "opexsatlen6", 
    "opdfsathick1", 
    "opdfsathick2", 
    "opdfsathick3", 
    "opdfsathick4", 
    "opdfsathick5", 
    "opdfsathick6", 
    "exsat1_normth_R", 
    "exsat1_normth_A", 
    "exsat1_normth_S", 
    "exsat2_normth_R", 
    "exsat2_normth_A", 
    "exsat2_normth_S", 
    "exsat3_normth_R", 
    "exsat3_normth_A", 
    "exsat3_normth_S", 
    "exsat4_normth_R", 
    "exsat4_normth_A", 
    "exsat4_normth_S", 
    "exsat5_normth_R", 
    "exsat5_normth_A", 
    "exsat5_normth_S", 
    "exsat6_normth_R", 
    "exsat6_normth_A", 
    "exsat6_normth_S", 
    "exsat1_dist", 
    "exsat2_dist", 
    "exsat3_dist", 
    "exsat4_dist", 
    "exsat5_dist", 
    "exsat6_dist", 
    "pigirscrn", 
    "piautoirbands", 
    "pigirdefthick", 
    "pinumgir", 
    "opnumgir", 
    "pigirmode", 
    "opgirmode", 
    "optagging", 
    "optagspc", 
    "optagangle", 
    "opvenc", 
    "opflaxx", 
    "opflaxy", 
    "opflaxz", 
    "opflaxall", 
    "opproject", 
    "opcollapse", 
    "oprlflow", 
    "opapflow", 
    "opsiflow", 
    "opmagc", 
    "opflrecon", 
    "oprampdir", 
    "project", 
    "vas_ovrhd", 
    "slice_col", 
    "phase_col", 
    "read_col", 
    "mag_mask", 
    "phase_cor", 
    "extras", 
    "mag_create", 
    "rl_flow", 
    "ap_flow", 
    "si_flow", 
    "imagenum", 
    "motsa_ovrhd", 
    "opslinky", 
    "opinhance", 
    "opmavric", 
    "opinhsflow", 
    "opmsde", 
    "opvest", 
    "opmsdeaxx", 
    "opmsdeaxy", 
    "opmsdeaxz", 
    "opbreathhold", 
    "opautosubtract", 
    "opsepseries", 
    "pititle", 
    "opuser0", 
    "opuser1", 
    "opuser2", 
    "opuser3", 
    "opuser4", 
    "opuser5", 
    "opuser6", 
    "opuser7", 
    "opuser8", 
    "opuser9", 
    "opuser10", 
    "opuser11", 
    "opuser12", 
    "opuser13", 
    "opuser14", 
    "opuser15", 
    "opuser16", 
    "opuser17", 
    "opuser18", 
    "opuser19", 
    "opuser20", 
    "opuser21", 
    "opuser22", 
    "opuser23", 
    "opuser24", 
    "opuser25", 
    "opuser26", 
    "opuser27", 
    "opuser28", 
    "opuser29", 
    "opuser30", 
    "opuser31", 
    "opuser32", 
    "opuser33", 
    "opuser34", 
    "opuser35", 
    "opuser36", 
    "opuser37", 
    "opuser38", 
    "opuser39", 
    "opuser40", 
    "opuser41", 
    "opuser42", 
    "opuser43", 
    "opuser44", 
    "opuser45", 
    "opuser46", 
    "opuser47", 
    "opuser48", 
    "opnostations", 
    "opstation", 
    "oploadprotocol", 
    "opmask", 
    "opvenous", 
    "opprotRxMode", 
    "opacqo", 
    "opfphases", 
    "opsldelay", 
    "avminsldelay", 
    "optphases", 
    "opdynaplan_nphases", 
    "opvsphases", 
    "opdiffuse", 
    "opsavedf", 
    "opmintedif", 
    "opseparatesynb", 
    "opdfaxx", 
    "opdfaxy", 
    "opdfaxz", 
    "opdfaxall", 
    "opdfaxtetra", 
    "opdfax3in1", 
    "opbval", 
    "opnumbvals", 
    "opautonumbvals", 
    "opnumsynbvals", 
    "opdifnext2", 
    "opautodifnext2", 
    "optensor", 
    "opdifnumdirs", 
    "opdifnumt2", 
    "opautodifnumt2", 
    "opdualspinecho", 
    "opdifproctype", 
    "opdifnumbvalues", 
    "dti_plus_flag", 
    "optouch", 
    "optouchfreq", 
    "optouchmegfreq", 
    "optouchamp", 
    "optouchtphases", 
    "optouchcyc", 
    "optouchax", 
    "opaslprep", 
    "opasl", 
    "oppostlabeldelay", 
    "rhchannel_combine_method", 
    "rhasl_perf_weighted_scale", 
    "cfslew_artmedium", 
    "cfgmax_artmedium", 
    "cfslew_arthigh", 
    "cfgmax_arthigh", 
    "cfnumartlevels", 
    "pinumartlevels", 
    "cfslew_artmediumopt", 
    "cfgmax_artmediumopt", 
    "oprep_active", 
    "oprep_rest", 
    "opdda", 
    "opinit_state", 
    "opfMRIPDTYPE", 
    "opview_order", 
    "opslice_order", 
    "oppsd_trig", 
    "oppdgm_str", 
    "opbwrt", 
    "cont_flag", 
    "opautonecho", 
    "opnecho", 
    "opnshots", 
    "opautote", 
    "opte", 
    "opte2", 
    "optefw", 
    "opti", 
    "opbspti", 
    "opautoti", 
    "opautobti", 
    "optrecovery", 
    "optlabel", 
    "opt2prepte", 
    "opautotr", 
    "opnspokes", 
    "opoversamplingfactor", 
    "opacs", 
    "opharmonize", 
    "pieffbladewidth", 
    "opinrangetr", 
    "opinrangetrmin", 
    "opinrangetrmax", 
    "optr", 
    "opflip", 
    "opautoflip", 
    "opautoetl", 
    "opetl", 
    "opautorbw", 
    "oprbw", 
    "oprbw2", 
    "opfov", 
    "opphasefov", 
    "opnpwfactor", 
    "opfreqfov", 
    "opautoslquant", 
    "opslquant", 
    "opsllocs", 
    "opslthick", 
    "opslspace", 
    "opileave", 
    "opcoax", 
    "opvthick", 
    "opvquant", 
    "opovl", 
    "oplenrl", 
    "oplenap", 
    "oplensi", 
    "oplocrl", 
    "oplocap", 
    "oplocsi", 
    "oprlcsiis", 
    "opapcsiis", 
    "opsicsiis", 
    "opmonfov", 
    "opmonthick", 
    "opinittrigdelay", 
    "opxres", 
    "opyres", 
    "opautonex", 
    "opnex", 
    "opslicecnt", 
    "opnbh", 
    "opspf", 
    "opcfsel", 
    "opfcaxis", 
    "opphcor", 
    "opdose", 
    "opcontrast", 
    "opchrate", 
    "opcphases", 
    "opaphases", 
    "opclocs", 
    "ophrate", 
    "oparr", 
    "ophrep", 
    "opautotdel1", 
    "optdel1", 
    "optseq", 
    "opphases", 
    "opcardseq", 
    "opmphases", 
    "oparrmon", 
    "opvps", 
    "opautovps", 
    "opcgatetype", 
    "opadvgate", 
    "opfcine", 
    "opcineir", 
    "opstress", 
    "opnrr", 
    "opnrr_dda", 
    "oprtcgate", 
    "oprtrate", 
    "oprtrep", 
    "oprttdel1", 
    "oprttseq", 
    "oprtcardseq", 
    "oprtarr", 
    "oprtpoint", 
    "opnavrrmeas", 
    "opnavrrmeastime", 
    "opnavrrmeasrr", 
    "opnavsltrack", 
    "opnavautoaccwin", 
    "opnavaccwin", 
    "opnavautotrigtime", 
    "opnavpsctime", 
    "opnavmaxinterval", 
    "opnavtype", 
    "opnavpscpause", 
    "opnavsigenhance", 
    "opasset", 
    "opassetcal", 
    "opassetscan", 
    "rhcoilno", 
    "rhcal_options", 
    "rhasset", 
    "rhasset_calthresh", 
    "rhasset_R", 
    "rhasset_phases", 
    "rhscancent", 
    "rhasset_alt_cal", 
    "rhasset_torso", 
    "rhasset_localTx", 
    "rhasset_TuningFactor", 
    "rhasset_SnrMin", 
    "rhasset_SnrMax", 
    "rhasset_SnrScalar", 
    "oppure", 
    "rhpure", 
    "oppurecal", 
    "rhpurechannel", 
    "rhpurefilter", 
    "rhpure_scale_factor", 
    "cfpure_filtering_mode", 
    "rhpure_filtering_mode", 
    "rhpure_lambda", 
    "rhpure_tuning_factor_surface", 
    "rhpure_tuning_factor_body", 
    "rhpure_derived_cal_fraction", 
    "rhpure_cal_reapodization", 
    "opcalrequired", 
    "rhpure_blur_enable", 
    "rhpure_blur", 
    "rhpure_mix_lambda", 
    "rhpure_mix_tuning_factor_surface", 
    "rhpure_mix_tuning_factor_body", 
    "rhpure_mix_blur_enable", 
    "rhpure_mix_blur", 
    "rhpure_mix_alpha", 
    "rhpure_mix_otsu_class_qty", 
    "rhpure_mix_exp_wt", 
    "rhpure_mix_erode_dist", 
    "rhpure_mix_dilate_dist", 
    "rhpure_mix_aniso_blur", 
    "rhpure_mix_aniso_erode_dist", 
    "rhpure_mix_aniso_dilate_dist", 
    "opcalmode", 
    "rhcalmode", 
    "opcaldelay", 
    "rhcal_pass_set_vector", 
    "rhcal_nex_vector", 
    "rhcal_weight_vector", 
    "sifsetwokey", 
    "opautosldelay", 
    "specnuc", 
    "specpts", 
    "specwidth", 
    "specnavs", 
    "specnex", 
    "specdwells", 
    "acquire_type", 
    "pixmtband", 
    "pibbandfilt", 
    "opwarmup", 
    "pscahead", 
    "opprescanopt", 
    "autoadvtoscn", 
    "opapa", 
    "oppscapa", 
    "PSslice_ind", 
    "oppscshimtg", 
    "opdyntg", 
    "dynTG_fov", 
    "dynTG_slquant", 
    "dynTG_flipangle", 
    "dynTG_slthick", 
    "dynTG_xres", 
    "dynTG_yres", 
    "dynTG_baseline", 
    "dynTG_ptsize", 
    "dynTG_b1factor", 
    "rfshim_fov", 
    "rfshim_slquant", 
    "rfshim_flipangle", 
    "rfshim_slthick", 
    "rfshim_xres", 
    "rfshim_yres", 
    "rfshim_baseline", 
    "rfshim_ptsize", 
    "rfshim_b1factor", 
    "cal_xres", 
    "cal_yres", 
    "cal_slq", 
    "cal_nex", 
    "cal_interleave", 
    "cal_fov", 
    "cal_slthick", 
    "cal_pass", 
    "coil_xres", 
    "coil_yres", 
    "coil_slq", 
    "coil_nex", 
    "coil_fov", 
    "coil_slthick", 
    "coil_pass", 
    "coil_interleave", 
    "asfov", 
    "asslquant", 
    "asflip", 
    "asslthick", 
    "asxres", 
    "asyres", 
    "asbaseline", 
    "asrhblank", 
    "asptsize", 
    "opascalcfov", 
    "tgfov", 
    "tgcap", 
    "tgwindow", 
    "oppscvquant", 
    "opdrivemode", 
    "pidrivemodenub", 
    "opexcitemode", 
    "lp_stretch", 
    "lp_mode", 
    "derateb1_body_factor", 
    "SAR_bodyNV_weight_lim", 
    "derateb1_NV_factor", 
    "jstd_multiplier_body", 
    "jstd_multiplier_NV", 
    "jstd_exponent_body", 
    "jstd_exponent_NV", 
    "pidiffmode", 
    "pifmriscrn", 
    "piresol", 
    "pioverlap", 
    "piforkvrgf", 
    "pinofreqoffset", 
    "pirepactivenub", 
    "pireprestnub", 
    "piddanub", 
    "piinitstatnub", 
    "piviewordernub", 
    "pisliceordnub", 
    "pipsdtrignub", 
    "pispssupnub", 
    "pi_neg_sp", 
    "piisvaldef", 
    "pi2dmde", 
    "pidmode", 
    "piviews", 
    "piclckcnt", 
    "avmintscan", 
    "pitslice", 
    "pitscan", 
    "pimscan", 
    "pivsscan", 
    "pireconlag", 
    "pitres", 
    "pitres2", 
    "pisaveinter", 
    "pivextras", 
    "pinecho", 
    "piscancenter", 
    "pilandmark", 
    "pitableposition", 
    "pismode", 
    "pishldctrl", 
    "pinolr", 
    "pinoadc", 
    "pimixtime", 
    "pishim2", 
    "pi1stshimb", 
    "pifractecho", 
    "nope", 
    "opuser_usage_tag", 
    "rhuser_usage_tag", 
    "rhFillMapMSW", 
    "rhFillMapLSW", 
    "rhbline", 
    "rhblank", 
    "rhnex", 
    "rhnavs", 
    "rhnslices", 
    "rhnrefslices", 
    "rhnframes", 
    "rhfrsize", 
    "rhnecho", 
    "rhnphases", 
    "rhmphasetype", 
    "rhtrickstype", 
    "rhtype", 
    "rhtype1", 
    "rhformat", 
    "rhptsize", 
    "rhnpomp", 
    "rhrcctrl", 
    "rhdacqctrl", 
    "rhexecctrl", 
    "rhfdctrl", 
    "rhxoff", 
    "rhyoff", 
    "rhrecon", 
    "rhdatacq", 
    "rhvquant", 
    "rhslblank", 
    "rhhnover", 
    "rhfeextra", 
    "rhheover", 
    "rhoscans", 
    "rhddaover", 
    "rhzeroph", 
    "rhalpha", 
    "rhnwin", 
    "rhntran", 
    "rhherawflt", 
    "rhherawflt_befnwin", 
    "rhherawflt_befntran", 
    "rhherawflt_befamp", 
    "rhherawflt_hpfamp", 
    "rhfermw", 
    "rhfermr", 
    "rhferme", 
    "rhclipmin", 
    "rhclipmax", 
    "rhdoffset", 
    "rhudasave", 
    "rhsspsave", 
    "rh2dscale", 
    "rh3dscale", 
    "rhnpasses", 
    "rhincrpass", 
    "rhinitpass", 
    "rhmethod", 
    "rhdaxres", 
    "rhdayres", 
    "rhrcxres", 
    "rhrcyres", 
    "rhimsize", 
    "rhnoncart_dual_traj", 
    "rhnoncart_traj_kmax_ratio", 
    "rhnspokes_lowres", 
    "rhnspokes_highres", 
    "rhnoncart_traj_merge_start", 
    "rhnoncart_traj_merge_end", 
    "rhoversamplingfactor", 
    "rhnoncart_grid_factor", 
    "rhnoncart_traj_mode", 
    "rhviewSharing3D", 
    "rhdaviewsPerBlade", 
    "rhrotationThreshold", 
    "rhshiftThreshold", 
    "rhcorrelationThreshold", 
    "rhphaseCorrFiltFreqRadius", 
    "rhphaseCorrFiltPhaseRadius", 
    "rhnpwfactor", 
    "rhuser0", 
    "rhuser1", 
    "rhuser2", 
    "rhuser3", 
    "rhuser4", 
    "rhuser5", 
    "rhuser6", 
    "rhuser7", 
    "rhuser8", 
    "rhuser9", 
    "rhuser10", 
    "rhuser11", 
    "rhuser12", 
    "rhuser13", 
    "rhuser14", 
    "rhuser15", 
    "rhuser16", 
    "rhuser17", 
    "rhuser18", 
    "rhuser19", 
    "rhuser20", 
    "rhuser21", 
    "rhuser22", 
    "rhuser23", 
    "rhuser24", 
    "rhuser25", 
    "rhuser26", 
    "rhuser27", 
    "rhuser28", 
    "rhuser29", 
    "rhuser30", 
    "rhuser31", 
    "rhuser32", 
    "rhuser33", 
    "rhuser34", 
    "rhuser35", 
    "rhuser36", 
    "rhuser37", 
    "rhuser38", 
    "rhuser39", 
    "rhuser40", 
    "rhuser41", 
    "rhuser42", 
    "rhuser43", 
    "rhuser44", 
    "rhuser45", 
    "rhuser46", 
    "rhuser47", 
    "rhuser48", 
    "rhdab0s", 
    "rhdab0e", 
    "rhctr", 
    "rhcrrtime", 
    "rhcphases", 
    "rhaphases", 
    "rhovl", 
    "rhvtype", 
    "rhvenc", 
    "rhvcoefxa", 
    "rhvcoefxb", 
    "rhvcoefxc", 
    "rhvcoefxd", 
    "rhvcoefya", 
    "rhvcoefyb", 
    "rhvcoefyc", 
    "rhvcoefyd", 
    "rhvcoefza", 
    "rhvcoefzb", 
    "rhvcoefzc", 
    "rhvcoefzd", 
    "rhvmcoef1", 
    "rhvmcoef2", 
    "rhvmcoef3", 
    "rhvmcoef4", 
    "rhphasescale", 
    "rhfreqscale", 
    "rawmode", 
    "rhileaves", 
    "rhkydir", 
    "rhalt", 
    "rhreps", 
    "rhref", 
    "rhpcthrespts", 
    "rhpcthrespct", 
    "rhpcdiscbeg", 
    "rhpcdiscmid", 
    "rhpcdiscend", 
    "rhpcileave", 
    "rhpcextcorr", 
    "rhrefframes", 
    "rhpcsnore", 
    "rhpcspacial", 
    "rhpctemporal", 
    "rhpcbestky", 
    "rhhdbestky", 
    "rhpcinvft", 
    "rhpcctrl", 
    "rhpctest", 
    "rhpcgraph", 
    "rhpclin", 
    "rhpclinnorm", 
    "rhpclinnpts", 
    "rhpclinorder", 
    "rhpclinfitwt", 
    "rhpclinavg", 
    "rhpccon", 
    "rhpcconnorm", 
    "rhpcconnpts", 
    "rhpcconorder", 
    "rhpcconfitwt", 
    "rhvrgfxres", 
    "rhvrgf", 
    "rhbp_corr", 
    "rhrecv_freq_s", 
    "rhrecv_freq_e", 
    "rhhniter", 
    "rhfast_rec", 
    "rhgridcontrol", 
    "rhb0map", 
    "rhtediff", 
    "rhradiusa", 
    "rhradiusb", 
    "rhmaxgrad", 
    "rhslewmax", 
    "rhscanfov", 
    "rhtsamp", 
    "rhdensityfactor", 
    "rhdispfov", 
    "rhmotioncomp", 
    "grid_fov_factor", 
    "rhte", 
    "rhte2", 
    "rhdfm", 
    "rhdfmnavsperpass", 
    "rhdfmnavsperview", 
    "rhdfmrbw", 
    "rhdfmptsize", 
    "rhdfmxres", 
    "rhdfmdebug", 
    "rhdfmthreshold", 
    "rh_rc_enhance_enable", 
    "rh_ime_scic_enable", 
    "rh_ime_scic_edge", 
    "rh_ime_scic_smooth", 
    "rh_ime_scic_focus", 
    "rh_ime_clariview_type", 
    "rh_ime_clariview_edge", 
    "rh_ime_clariview_smooth", 
    "rh_ime_clariview_focus", 
    "rh_ime_definefilter_nr", 
    "rh_ime_definefilter_sh", 
    "rh_ime_scic_reduction", 
    "rh_ime_scic_gauss", 
    "rh_ime_scic_threshold", 
    "rh_ime_scic_contrast", 
    "cfscic_allowed", 
    "cfscic_edge", 
    "cfscic_smooth", 
    "cfscic_focus", 
    "cfscic_reduction", 
    "cfscic_gauss", 
    "cfscic_threshold", 
    "cfscic_contrast", 
    "piscic", 
    "cfscenic", 
    "piscenic", 
    "opscenic", 
    "rhscenic_type", 
    "cfn4_allowed", 
    "cfn4_slice_down_sample_rate", 
    "cfn4_inplane_down_sample_rate", 
    "cfn4_num_levels_max", 
    "cfn4_num_iterations_max", 
    "cfn4_convergence_threshold", 
    "cfn4_gain_clamp_mode", 
    "cfn4_gain_clamp_value", 
    "rhn4_slice_down_sample_rate", 
    "rhn4_inplane_down_sample_rate", 
    "rhn4_num_levels_max", 
    "rhn4_num_iterations_max", 
    "rhn4_convergence_threshold", 
    "rhn4_gain_clamp_mode", 
    "rhn4_gain_clamp_value", 
    "rhpure_gain_clamp_mode", 
    "rhpure_gain_clamp_value", 
    "rhphsen_pixel_offset", 
    "rhapp", 
    "rhapp_option", 
    "rhncoilsel", 
    "rhncoillimit", 
    "rhrefframep", 
    "rhscnframe", 
    "rhpasframe", 
    "rhpcfitorig", 
    "rhpcshotfirst", 
    "rhpcshotlast", 
    "rhpcmultegrp", 
    "rhpclinfix", 
    "rhpclinslope", 
    "rhpcconfix", 
    "rhpcconslope", 
    "rhpccoil", 
    "rhmaxcoef1a", 
    "rhmaxcoef1b", 
    "rhmaxcoef1c", 
    "rhmaxcoef1d", 
    "rhmaxcoef2a", 
    "rhmaxcoef2b", 
    "rhmaxcoef2c", 
    "rhmaxcoef2d", 
    "rhmaxcoef3a", 
    "rhmaxcoef3b", 
    "rhmaxcoef3c", 
    "rhmaxcoef3d", 
    "rhdptype", 
    "rhnumbvals", 
    "rhdifnext2", 
    "rhnumdifdirs", 
    "rhutctrl", 
    "rhzipfact", 
    "rhfcinemode", 
    "rhfcinearw", 
    "rhvps", 
    "rhvvsaimgs", 
    "rhvvstr", 
    "rhvvsgender", 
    "rhgradmode", 
    "rhfatwater", 
    "rhfiesta", 
    "rhlcfiesta", 
    "rhlcfiesta_phase", 
    "rhdwnavview", 
    "rhdwnavcorecho", 
    "rhdwnavsview", 
    "rhdwnaveview", 
    "rhdwnavsshot", 
    "rhdwnaveshot", 
    "rhdwnavcoeff", 
    "rhdwnavcor", 
    "rhassetsl_R", 
    "rhasset_slwrap", 
    "rh3dwintype", 
    "rh3dwina", 
    "rh3dwinq", 
    "rhectricks_num_regions", 
    "rhectricks_input_regions", 
    "rhretro_control", 
    "rhetl", 
    "rhleft_blank", 
    "rhright_blank", 
    "rhspecwidth", 
    "rhspeccsidims", 
    "rhspecrescsix", 
    "rhspecrescsiy", 
    "rhspecrescsiz", 
    "rhspecroilenx", 
    "rhspecroileny", 
    "rhspecroilenz", 
    "rhspecroilocx", 
    "rhspecroilocy", 
    "rhspecroilocz", 
    "rhexciterusage", 
    "rhexciterfreqs", 
    "rhwiener", 
    "rhwienera", 
    "rhwienerb", 
    "rhwienert2", 
    "rhwieneresp", 
    "rhflipfilter", 
    "rhdbgrecon", 
    "rhech2skip", 
    "rhrcideal", 
    "rhrcdixproc", 
    "rhrcidealctrl", 
    "rhdf", 
    "rhmedal_mode", 
    "rhmedal_nstack_size", 
    "rhmedal_echo_order", 
    "rhmedal_up_kernel_size", 
    "rhmedal_down_kernel_size", 
    "rhmedal_smooth_kernel_size", 
    "rhmedal_starting_slice", 
    "rhmedal_ending_slice", 
    "rhmedal_param", 
    "rhvibrant", 
    "rhkacq_uid", 
    "rhnex_unacquired", 
    "rhdiskacqctrl", 
    "rhechopc_extra_bot", 
    "rhechopc_ylines", 
    "rhechopc_primary_yfirst", 
    "rhechopc_reverse_yfirst", 
    "rhechopc_zlines", 
    "rhechopc_yxfitorder", 
    "rhechopc_ctrl", 
    "rhchannel_combine_filter_type", 
    "rhchannel_combine_filter_width", 
    "rhchannel_combine_filter_beta", 
    "rh_low_pass_nex_filter_width", 
    "rh3dgw_interptype", 
    "rhrc3dcinectrl", 
    "rhncycles_cine", 
    "rhnvircchannel", 
    "rhrc_cardt1map_ctrl", 
    "rhrc_moco_ctrl", 
    "rhrc_algorithm_ctrl", 
    "ihtr", 
    "ihti", 
    "ihtdel1", 
    "ihnex", 
    "ihflip", 
    "ihte1", 
    "ihte2", 
    "ihte3", 
    "ihte4", 
    "ihte5", 
    "ihte6", 
    "ihte7", 
    "ihte8", 
    "ihte9", 
    "ihte10", 
    "ihte11", 
    "ihte12", 
    "ihte13", 
    "ihte14", 
    "ihte15", 
    "ihte16", 
    "ihdixonte", 
    "ihdixonipte", 
    "ihdixonoopte", 
    "ihvbw1", 
    "ihvbw2", 
    "ihvbw3", 
    "ihvbw4", 
    "ihvbw5", 
    "ihvbw6", 
    "ihvbw7", 
    "ihvbw8", 
    "ihvbw9", 
    "ihvbw10", 
    "ihvbw11", 
    "ihvbw12", 
    "ihvbw13", 
    "ihvbw14", 
    "ihvbw15", 
    "ihvbw16", 
    "ihnegscanspacing", 
    "ihoffsetfreq", 
    "ihbsoffsetfreq", 
    "iheesp", 
    "ihfcineim", 
    "ihfcinent", 
    "ihbspti", 
    "ihtagfa", 
    "ihtagor", 
    "ih_idealdbg_cv1", 
    "ih_idealdbg_cv2", 
    "ih_idealdbg_cv3", 
    "ih_idealdbg_cv4", 
    "ih_idealdbg_cv5", 
    "ih_idealdbg_cv6", 
    "ih_idealdbg_cv7", 
    "ih_idealdbg_cv8", 
    "ih_idealdbg_cv9", 
    "ih_idealdbg_cv10", 
    "ih_idealdbg_cv11", 
    "ih_idealdbg_cv12", 
    "ih_idealdbg_cv13", 
    "ih_idealdbg_cv14", 
    "ih_idealdbg_cv15", 
    "ih_idealdbg_cv16", 
    "ih_idealdbg_cv17", 
    "ih_idealdbg_cv18", 
    "ih_idealdbg_cv19", 
    "ih_idealdbg_cv20", 
    "ih_idealdbg_cv21", 
    "ih_idealdbg_cv22", 
    "ih_idealdbg_cv23", 
    "ih_idealdbg_cv24", 
    "ih_idealdbg_cv25", 
    "ih_idealdbg_cv26", 
    "ih_idealdbg_cv27", 
    "ih_idealdbg_cv28", 
    "ih_idealdbg_cv29", 
    "ih_idealdbg_cv30", 
    "ih_idealdbg_cv31", 
    "ih_idealdbg_cv32", 
    "ihlabeltime", 
    "ihpostlabeldelay", 
    "ihnew_series", 
    "ihcardt1map_hb_pattern", 
    "dbdt_option_key_status", 
    "dbdt_mode", 
    "opsarmode", 
    "cfdbdttype", 
    "cfrinf", 
    "cfrfact", 
    "cfdbdtper_norm", 
    "cfdbdtper_cont", 
    "cfdbdtper_max", 
    "cfnumicn", 
    "cfdppericn", 
    "cfgradcoil", 
    "cfswgut", 
    "cfswrfut", 
    "cfswssput", 
    "cfhwgut", 
    "cfhwrfut", 
    "cfhwssput", 
    "cfoption", 
    "cfrfboardtype", 
    "psd_board_type", 
    "opdfm", 
    "opdfmprescan", 
    "cfdfm", 
    "cfdfmTG", 
    "cfdfmR1", 
    "cfdfmDX", 
    "derate_ACGD", 
    "rhextra_frames_top", 
    "rhextra_frames_bot", 
    "rhpc_ref_start", 
    "rhpc_ref_stop", 
    "rhpc_ref_skip", 
    "opaxial_slice", 
    "opsagittal_slice", 
    "opcoronal_slice", 
    "opvrg", 
    "opmart", 
    "piassetscrn", 
    "opseriessave", 
    "opt1map", 
    "opt2map", 
    "opmer2", 
    "rhnew_wnd_level_flag", 
    "rhwnd_image_hist_area", 
    "rhwnd_high_hist", 
    "rhwnd_lower_hist", 
    "rhrcmavric_control", 
    "rhrcmavric_image", 
    "rhrcmavric_bin_separation", 
    "cfrfupa", 
    "cfrfupd", 
    "cfrfminblank", 
    "cfrfminunblk", 
    "cfrfminblanktorcv", 
    "cfrfampftconst", 
    "cfrfampftlinear", 
    "cfrfampftquadratic", 
    "opradialrx", 
    "cfsupportreceivefreqbands", 
    "cfcntfreefreqlow", 
    "cfcntfreefreqhigh", 
    "optracq", 
    "opswift", 
    "rhswiftenable", 
    "rhnumCoilConfigs", 
    "rhnumslabs", 
    "opncoils", 
    "rtsar_first_series_flag", 
    "rtsar_enable_flag", 
    "measured_TG", 
    "predicted_TG", 
    "sar_correction_factor", 
    "gradHeatMethod", 
    "gradHeatFile", 
    "gradCoilMethod", 
    "gradHeatFlag", 
    "xgd_optimization", 
    "gradChokeFlag", 
    "piburstmode", 
    "opburstmode", 
    "burstreps", 
    "piburstcooltime", 
    "opaccel_ph_stride", 
    "opaccel_sl_stride", 
    "opaccel_t_stride", 
    "opaccel_mb_stride", 
    "opmb", 
    "rhmb_factor", 
    "rhmb_slice_fov_shift_factor", 
    "rhmb_slice_order_sign", 
    "rhmuse", 
    "rhmuse_nav", 
    "rhmuse_nav_accel", 
    "rhmuse_nav_hnover", 
    "rhmuse_nav_yres", 
    "opaccel_cs_stride", 
    "opcompressedsensing", 
    "rhcs_factor", 
    "rhcs_flag", 
    "rhcs_maxiter", 
    "rhcs_consistency", 
    "rhcs_ph_stride", 
    "rhcs_sl_stride", 
    "oparc", 
    "opaccel_kt_stride", 
    "rhkt_factor", 
    "rhkt_cal_factor", 
    "rhkt_calwidth_ph", 
    "rhkt_calwidth_sl", 
    "opab1", 
    "op3dgradwarp", 
    "opauto3dgradwarp", 
    "cfmaxtransmitoffsetfreq", 
    "cfreceiveroffsetfreq", 
    "cfcoilswitchmethod", 
    "TG_record", 
    "ab1_enable", 
    "cfreceivertype", 
    "cfreceiverswitchtype", 
    "cfEllipticDriveEnable", 
    "pi3dgradwarpnub", 
    "cfDualDriveCapable", 
    "optrip", 
    "oprtb0", 
    "pirtb0vis", 
    "pirtb0nub", 
    "ophoecc", 
    "rhhoecc", 
    "rhhoec_fit_order", 
    "opdistcorr", 
    "pidistcorrnub", 
    "pidistcorrdefval", 
    "rhdistcorr_ctrl", 
    "rhdistcorr_B0_filter_size", 
    "rhdistcorr_B0_filter_std_dev", 
    "ihdistcorr", 
    "rhtensor_file_number", 
    "ihpepolar", 
    "rhesp", 
    "viewshd_num", 
    "grad_intensity_thres", 
    "anne_mask_dilation_length", 
    "anne_intensity_thres", 
    "anne_channel_percentage", 
    "ec3_iterations", 
    "combined_coil_map_thres", 
    "coil_map_smooth_factor", 
    "coil_map_2_filter_width", 
    "ec3_iteration_method", 
    "edr_support", 
    "recon_bandwidth_factor", 
    "dacq_data_type", 
    "rawmode_scaling", 
    "rawmode_scaling_factor", 
    "oprgcalmode", 
    "opnumgroups", 
    "opsarburst", 
    "opheadscout", 
    "rhposition_detection", 
    "opfus", 
    "opexamnum", 
    "opseriesnum", 
    "vol_shift_type", 
    "vol_shift_constraint_type", 
    "vol_scale_type", 
    "vol_scale_constraint_type", 
    "rhsnrnoise", 
    "rhvircpolicy", 
    "rhvirsenstype", 
    "rhvircoiltype", 
    "rhvircoilunif", 
    "rhvircoilchannels", 
    "cffield", 
    "act_field_strength", 
    "enableReceiveFreqBands", 
    "offsetReceiveFreqLower", 
    "offsetReceiveFreqHigher", 
    "cfrfamptyp", 
    "cfssctype", 
    "cfbodycoiltype", 
    "cfptxcapable", 
    "cfbdcabletglimit", 
    "cfcablefreq", 
    "cfcabletg", 
    "cfcablebw", 
    "opgradshim", 
    "track_flag", 
    "prevent_scan_under_emul", 
    "acqs", 
    "avround", 
    "baseline", 
    "nex", 
    "trunex", 
    "isOddNexGreaterThanOne", 
    "isNonIntNexGreaterThanOne", 
    "fn", 
    "enablfracdec", 
    "npw_flag", 
    "nop", 
    "acq_type", 
    "seq_type", 
    "num_images", 
    "recon_mag_image", 
    "recon_pha_image", 
    "recon_imag_image", 
    "recon_qmag_image", 
    "slquant1", 
    "psd_grd_wait", 
    "psd_rf_wait", 
    "pos_moment_start", 
    "mps1rf1_inst", 
    "scanrf1_inst", 
    "cfcarddelay", 
    "psd_card_hdwr_delay", 
    "GAM", 
    "off90", 
    "TR_SLOP", 
    "TR_PASS", 
    "TR_PASS3D", 
    "csweight", 
    "exnex", 
    "truenex", 
    "eg_phaseres", 
    "sp_satcard_loc", 
    "min_rfdycc", 
    "min_rfavgpow", 
    "min_rfrmsb1", 
    "coll_prefls", 
    "maxGradRes", 
    "dfg", 
    "pg_beta", 
    "split_dab", 
    "freq_scale", 
    "numrecv", 
    "pe_on", 
    "psd_targetscale", 
    "psd_zero", 
    "lx_pwmtime", 
    "ly_pwmtime", 
    "lz_pwmtime", 
    "px_pwmtime", 
    "py_pwmtime", 
    "pz_pwmtime", 
    "min_seqgrad", 
    "min_seqrfamp", 
    "xa2s", 
    "ya2s", 
    "za2s", 
    "minseqcoil_t", 
    "minseqcoilx_t", 
    "minseqcoily_t", 
    "minseqcoilz_t", 
    "minseqcoilburst_t", 
    "minseqcoilvrms_t", 
    "minseqgram_t", 
    "minseqchoke_t", 
    "minseqcable_t", 
    "minseqcable_maxpow_t", 
    "minseqcableburst_t", 
    "minseqbusbar_t", 
    "minseqps_t", 
    "minseqpdu_t", 
    "minseqpdubreaker_t", 
    "minseqcoilcool_t", 
    "minseqsyscool_t", 
    "minseqccucool_t", 
    "minseqxfmr_t", 
    "minseqresist_t", 
    "minseqgrddrv_t", 
    "minseqgrddrv_case_t", 
    "minseqgrddrvx_t", 
    "minseqgrddrvy_t", 
    "minseqgrddrvz_t", 
    "powerx", 
    "powery", 
    "powerz", 
    "pospowerx", 
    "pospowery", 
    "pospowerz", 
    "negpowerx", 
    "negpowery", 
    "negpowerz", 
    "amptrans_lx", 
    "amptrans_ly", 
    "amptrans_lz", 
    "amptrans_px", 
    "amptrans_py", 
    "amptrans_pz", 
    "abspower_lx", 
    "abspower_ly", 
    "abspower_lz", 
    "abspower_px", 
    "abspower_py", 
    "abspower_pz", 
    "minseqpwm_x", 
    "minseqpwm_y", 
    "minseqpwm_z", 
    "minseqgpm_t", 
    "minseqgpm_maxpow_t", 
    "vol_ratio_est_req", 
    "skip_waveform_rotmat_check", 
    "set_realtime_rotmat", 
    "skip_rotmat_search", 
    "enforce_minseqseg", 
    "enforce_dbdtopt", 
    "skip_minseqseg", 
    "skip_initialize_dbdtopt", 
    "time_pgen", 
    "cont_debug", 
    "maxpc_cor", 
    "maxpc_debug", 
    "maxpc_points", 
    "pass_thru_mode", 
    "tmin", 
    "tmin_total", 
    "psd_tol_value", 
    "bd_index", 
    "use_ermes", 
    "fieldstrength", 
    "asymmatrix", 
    "psddebugcode", 
    "psddebugcode2", 
    "serviceMode", 
    "upmxdisable", 
    "tsamp", 
    "seg_debug", 
    "CompositeRMS_method", 
    "gradDriverMethod", 
    "gradDCsafeMethod", 
    "stopwatchFlag", 
    "seqEntryIndex", 
    "dbdt_debug", 
    "reilly_mode", 
    "dbdt_disable", 
    "use_dbdt_opt", 
    "srderate", 
    "config_update_mode", 
    "phys_record_flag", 
    "phys_rec_resolution", 
    "phys_record_channelsel", 
    "rotateflag", 
    "rhpcspacial_dynamic", 
    "rhpc_rationalscale", 
    "rhpcmag", 
    "mild_note_support", 
    "save_grad_spec_flag", 
    "grad_spec_change_flag", 
    "value_system_flag", 
    "rectfov_npw_support", 
    "pigeosrot", 
    "minseqrf_cal", 
    "min_rfampcpblty", 
    "b1derate_flag", 
    "oblmethod_dbdt_flag", 
    "minseqcoil_esp", 
    "aspir_flag", 
    "rhrawsizeview", 
    "chksum_scaninfo_view", 
    "chksum_rhdacqctrl_view", 
    "fnecho_lim", 
    "psdcrucial_debug", 
    "b1max_scale", 
    "disable_exciter_unblank", 
    "TGlimit", 
    "sat_TGlimit", 
    "autoparams_debug", 
    "num_autotr_cveval_iter", 
    "apx_cveval_counter", 
    "enforce_inrangetr", 
    "passtime", 
    "retropc_extra", 
    "esp", 
    "echoint", 
    "arc_flag", 
    "arc_ph_calwidth", 
    "arc_sl_calwidth", 
    "vrgfsamp", 
    "srate_x", 
    "glimit_x", 
    "srate_y", 
    "glimit_y", 
    "srate_z", 
    "glimit_z", 
    "act_srate_x", 
    "act_srate_y", 
    "act_srate_z", 
    "mkgspec_x_sr_flag", 
    "mkgspec_x_gmax_flag", 
    "mkgspec_y_sr_flag", 
    "mkgspec_y_gmax_flag", 
    "mkgspec_z_sr_flag", 
    "mkgspec_z_gmax_flag", 
    "mkgspec_flag", 
    "mkgspec_epi2_flag", 
    "pfkz_total", 
    "fov_freq_scale", 
    "fov_phase_scale", 
    "slthick_scale", 
    "silent_mode", 
    "silent_slew_rate", 
    "rhpropellerCtrl", 
    "prop_act_npwfactor", 
    "prop_act_oversamplingfactor", 
    "navtrig_wait_before_imaging", 
    "xtg_volRecCoil", 
    "minseqseg_max_full", 
    "sphericalGradient", 
    "minseqcoil_option", 
    "minseqgrad_option", 
    "rtp_bodyCoilCombine", 
    "ntxchannels", 
    "napptxchannels", 
    "seqcfgdebug", 
    "enable_acoustic_model", 
    "acoustic_seq_repeat_time", 
    "avgSPL_non_weighted", 
    "noisecal_in_scan_flag", 
    "cs_sat", 
    "cs_satstart", 
    "cs_sattime", 
    "a_rfcssatcfh", 
    "flip_rfcssatcfh", 
    "pw_rfcssatcfh", 
    "ia_rfcssatcfh", 
    "ChemSatPulse", 
    "area_gxkcs", 
    "area_gykcs", 
    "area_gyakcs", 
    "area_gzkcs", 
    "csk_derate_factor", 
    "pw_rfcssat", 
    "pw_omega_hs_rfcssat", 
    "off_rfcssat", 
    "ia_rfcssat", 
    "ia_omega_hs_rfcssat", 
    "cyc_rfcssat", 
    "a_rfcssat", 
    "a_omega_hs_rfcssat", 
    "alpha_rfcssat", 
    "gscale_rfcssat", 
    "flip_rfcssat", 
    "a_gzrfcssat", 
    "ia_gzrfcssat", 
    "pw_gzrfcssat", 
    "res_gzrfcssat", 
    "a_gzrfcssat_wrf", 
    "a_thetarfcssat", 
    "ia_thetarfcssat", 
    "pw_thetarfcssat", 
    "res_thetarfcssat", 
    "off_thetarfcssat", 
    "bw_rfcssat", 
    "selectiveChemsat", 
    "selectiveChemsatBWscaler", 
    "offset_rfchemsat", 
    "num_gzrfcssat_lobe", 
    "pw_gzrfcssat_lobe", 
    "pw_gzrfcssat_constant", 
    "pw_gzrfcssat_rampz", 
    "num_gzrfcssat_lobe_norf", 
    "pw_gzrfcssat_lobe_norf", 
    "pw_gzrfcssat_constant_norf", 
    "pw_gzrfcssat_rampz_norf", 
    "ext_pw_rfcssat", 
    "ext_res_rfcssat", 
    "ext_isodelay", 
    "ext_water_freq_flag", 
    "ext_pw_grad_sub_lobe", 
    "ext_pw_grad_sub_lobe_ramp", 
    "ext_num_grad_sub_lobe", 
    "ext_pw_grad_sub_lobe_norf", 
    "ext_pw_grad_sub_lobe_ramp_norf", 
    "ext_num_grad_sub_lobe_norf", 
    "ext_abswidth", 
    "ext_effwidth", 
    "ext_area", 
    "ext_dtycyc", 
    "ext_maxpw", 
    "ext_max_b1", 
    "ext_max_int_b1_sq", 
    "ext_max_rms_b1", 
    "ext_nom_fa", 
    "ext_nom_pw", 
    "ext_nom_bw", 
    "ext_gzrfcssat_scale_fac", 
    "ext_fatsat_min_slthick", 
    "duo_cs_flag", 
    "w_debug_flag", 
    "n_cspulses", 
    "flip_final_1", 
    "flip_final_2", 
    "killer_scale", 
    "delay_time_bkp", 
    "tetime_bkp", 
    "rc_time_bkp", 
    "slquant_bkp", 
    "tr_time_bkp", 
    "sattime_bkp", 
    "flip_final_1_bkp", 
    "flip_final_2_bkp", 
    "fatsat_factor_bkp", 
    "phantom_test_flag", 
    "phantom_fat_T1", 
    "DB_flag", 
    "DB_shift_ratio", 
    "DB_ChemShift", 
    "DBgrad_flag", 
    "DB_Buffer_X", 
    "DB_Buffer_Y", 
    "DB_Chemical_Shift", 
    "dbcenterlocx1", 
    "dbcenterlocx2", 
    "dbcenterlocy1", 
    "dbcenterlocy2", 
    "dbcenterlocz1", 
    "dbcenterlocz2", 
    "dbsatthickx", 
    "dbsatthicky", 
    "dbsatthickz", 
    "dbbandlocx1", 
    "dbbandlocx2", 
    "dbbandlocy1", 
    "dbbandlocy2", 
    "dbbandlocz1", 
    "dbbandlocz2", 
    "off_rfcssat1", 
    "off_rfcssat2", 
    "bw_rfcssat_nom", 
    "bw_rfcssat_ramp", 
    "bw_ramp", 
    "fatsat_factor", 
    "csat_rfupa", 
    "csat_sys_type", 
    "aspir_delay", 
    "aspir_cfoffset", 
    "aspir_minti", 
    "aspir_T1", 
    "aspir_TI", 
    "aspir_TI_null", 
    "aspir_TI_extra", 
    "aspir_TI_min", 
    "aspir_eff", 
    "fatFlag", 
    "cs_isodelay", 
    "cs_delay", 
    "recovery_time", 
    "flip_sat", 
    "flip_satcfh", 
    "fStrength", 
    "use_spsp_fatsat", 
    "debug_spsp_fatsat", 
    "spsp_fatsat_slthick", 
    "spsp_fatsat_pulse_extra_time", 
    "spsp_fatsat_spatial_mode", 
    "spsp_fatsat_spatial_offset", 
    "spsp_fatsat_pulse_override", 
    "spsp_fatsat_omega_scale", 
    "max_aspir_fa", 
    "fa_scale_debug", 
    "cs_tr", 
    "cs_slquant", 
    "cs_dda_per_trig_flag", 
    "psd_chemsat_seq_flag", 
    "cs_dda_flip", 
    "ccs_dead", 
    "ccs_relaxers", 
    "ccs_relaxtime", 
    "ccs_relaxseqtime", 
    "SatRelaxers", 
    "gsat_scale", 
    "cyc_rfs", 
    "pw_rfs", 
    "pw_satrampx", 
    "pw_satrampy", 
    "pw_satrampz", 
    "sat_rot_ex_num", 
    "sat_rot_df_num", 
    "sat_rot_index", 
    "pw_isisat", 
    "pw_rotupdate", 
    "isi_satdelay", 
    "rot_delay", 
    "isi_extra", 
    "sat_debug", 
    "spsat_host_debug", 
    "sp_first_scan", 
    "sat_obl_debug", 
    "sat_newgeo", 
    "spsat_rfupa", 
    "spsat_sys_type", 
    "xkiller_set", 
    "maxkiller_time", 
    "satgapxpos", 
    "satgapxneg", 
    "satgapypos", 
    "satgapyneg", 
    "satgapzpos", 
    "satgapzneg", 
    "satspacex1", 
    "satspacex2", 
    "satspacey1", 
    "satspacey2", 
    "satspacez1", 
    "satspacez2", 
    "satspace1", 
    "satspace2", 
    "satspace3", 
    "satspace4", 
    "satspace5", 
    "satspace6", 
    "satthickx1", 
    "satthickx2", 
    "satthickdfx", 
    "satthicky1", 
    "satthicky2", 
    "satthickdfy", 
    "satthickz1", 
    "satthickz2", 
    "satthickdfz", 
    "exsatthick1", 
    "exsatthick2", 
    "exsatthick3", 
    "exsatthick4", 
    "exsatthick5", 
    "exsatthick6", 
    "satxlocpos", 
    "satxlocneg", 
    "satylocpos", 
    "satylocneg", 
    "satzlocpos", 
    "satzlocneg", 
    "satzloca", 
    "satzlocb", 
    "satloce1", 
    "satloce2", 
    "satloce3", 
    "satloce4", 
    "satloce5", 
    "satloce6", 
    "area_rfsx1", 
    "area_rfsx2", 
    "area_rfsy1", 
    "area_rfsy2", 
    "area_rfsz1", 
    "area_rfsz2", 
    "area_rfse1", 
    "area_rfse2", 
    "area_rfse3", 
    "area_rfse4", 
    "area_rfse5", 
    "area_rfse6", 
    "area_gyksx1", 
    "area_gyksx2", 
    "area_gyksy1", 
    "area_gyksy2", 
    "area_gyksz1", 
    "area_gyksz2", 
    "area_gykse1", 
    "area_gykse2", 
    "area_gykse3", 
    "area_gykse4", 
    "area_gykse5", 
    "area_gykse6", 
    "area_gxksx1", 
    "area_gxksx2", 
    "area_gxksy1", 
    "area_gxksy2", 
    "area_gxksz1", 
    "area_gxksz2", 
    "area_gxkse1", 
    "area_gxkse2", 
    "area_gxkse3", 
    "area_gxkse4", 
    "area_gxkse5", 
    "area_gxkse6", 
    "sp_sattime", 
    "sp_satstart", 
    "vrgsat", 
    "numsatramp", 
    "had_sat", 
    "rtia3d_sat_flip", 
    "rtia3d_sat_pos", 
    "sat_pulse_type", 
    "satgap_opt_flag", 
    "autolock", 
    "blank", 
    "nograd", 
    "nofermi", 
    "rawdata", 
    "saveinter", 
    "zchop", 
    "eepf", 
    "oepf", 
    "eeff", 
    "oeff", 
    "cine_choplet", 
    "fermi_rc", 
    "fermi_wc", 
    "apodize_level_flag", 
    "fermi_r_factor", 
    "fermi_w_factor", 
    "pure_mix_tx_scale", 
    "channel_compression", 
    "optimal_channel_combine", 
    "enforce_cal_for_channel_combine", 
    "override_opcalrequired", 
    "dump_channel_comp_optimal_recon", 
    "dump_scenic_parameters", 
    "PSsr_derate_factor", 
    "PSamp_derate_factor", 
    "PSassr_derate_factor", 
    "PSasamp_derate_factor", 
    "PSTR_PASS", 
    "mpsfov", 
    "fastprescan", 
    "pre_slice", 
    "PSslice_num", 
    "xmtaddAPS1", 
    "xmtaddCFL", 
    "xmtaddCFH", 
    "xmtaddFTG", 
    "xmtadd", 
    "xmtaddRCVN", 
    "ps1scale", 
    "cflscale", 
    "cfhscale", 
    "ftgscale", 
    "extraScale", 
    "PSdebugstate", 
    "PSfield_strength", 
    "PScs_sat", 
    "PSir", 
    "PSmt", 
    "ps1_rxcoil", 
    "ps_seed", 
    "tg_1_2_pw", 
    "tg_axial", 
    "coeff_pw_tg", 
    "fov_lim_mps", 
    "TGspf", 
    "flip_rf2cfh", 
    "flip_rf3cfh", 
    "flip_rf4cfh", 
    "ps1_tr", 
    "cfl_tr", 
    "cfh_tr", 
    "rcvn_tr", 
    "cfh_ec_position", 
    "cfl_dda", 
    "cfl_nex", 
    "cfh_dda", 
    "cfh_nex", 
    "rcvn_dda", 
    "rcvn_nex", 
    "local_tg", 
    "fov_scaling", 
    "flip_rf1xtg", 
    "gscale_rf1xtg", 
    "init_xtg_deadtime", 
    "flip_rf1mps1", 
    "gscale_rf1mps1", 
    "presscfh_override", 
    "presscfh", 
    "presscfh_ctrl", 
    "presscfh_outrange", 
    "presscfh_cgate", 
    "presscfh_debug", 
    "presscfh_wait_rf12", 
    "presscfh_wait_rf23", 
    "presscfh_wait_rf34", 
    "presscfh_minte", 
    "presscfh_fov", 
    "presscfh_fov_ratio", 
    "presscfh_pfov_ratio", 
    "presscfh_slab_ratio", 
    "presscfh_pfov", 
    "presscfh_slthick", 
    "presscfh_slice", 
    "presscfh_ir_slthick", 
    "presscfh_ir_noselect", 
    "presscfh_minfov_ratio", 
    "cfh_steam_flag", 
    "steam_pg_gap", 
    "area_gykcfl", 
    "area_gykcfh", 
    "area_xtgzkiller", 
    "area_xtgykiller", 
    "PSoff90", 
    "dummy_pw", 
    "min180te", 
    "PStloc", 
    "PSrloc", 
    "PSphasoff", 
    "PStrigger", 
    "PStloc_mod", 
    "PSrloc_mod", 
    "PSphasoff_mod", 
    "thickPS_mod", 
    "asx_killer_area", 
    "asz_killer_area", 
    "cfhir_killer_area", 
    "ps_crusher_area", 
    "cfh_crusher_area", 
    "target_cfh_crusher", 
    "target_cfh_crusher2", 
    "cfh_newmode", 
    "cfh_rf1freq", 
    "cfh_rf2freq", 
    "cfh_rf3freq", 
    "cfh_rf4freq", 
    "cfh_fov", 
    "cfh_ti", 
    "eff_cfh_te", 
    "PScfh_shimvol_debug", 
    "debug_shimvol_slice", 
    "wg_cfh_rf3", 
    "wg_cfh_rf4", 
    "FTGslthk", 
    "FTGopslthickz1", 
    "FTGopslthickz2", 
    "FTGopslthickz3", 
    "ftgtr", 
    "FTGfov", 
    "FTGau", 
    "FTGtecho", 
    "FTGtau1", 
    "FTGtau2", 
    "FTGacq1", 
    "FTGacq2", 
    "epi_ir_on", 
    "ssfse_ir_on", 
    "ftg_dda", 
    "FTGecho1bw", 
    "FTGtestpulse", 
    "FTGxres", 
    "FTGxmtadd", 
    "pw_gxw2ftgleft", 
    "xtgtr", 
    "XTGtau1", 
    "XTGfov", 
    "pw_bsrf", 
    "xtg_offres_freq", 
    "XTGecho1bw", 
    "XTGxres", 
    "xmtaddXTG", 
    "xtgscale", 
    "xtg_dda", 
    "XTGacq1", 
    "TGopslthick", 
    "TGopslthickx", 
    "TGopslthicky", 
    "XTG_minimizeYKillerGap", 
    "dynTG_etl", 
    "dtg_iso_delay", 
    "dtg_off90", 
    "dtg_dda", 
    "rf1dtg_type", 
    "echo1bwdtg", 
    "dtgt_exa", 
    "dtgt_exb", 
    "tleaddtg", 
    "td0dtg", 
    "dtgphorder", 
    "dtgspgr_flag", 
    "pw_rf1dtg", 
    "a_rf1dtg", 
    "min_dtgte", 
    "dtg_esp", 
    "tr_dtg", 
    "time_ssidtg", 
    "rsaxial_flag", 
    "rsspgr_flag", 
    "multi_channel", 
    "minph_iso_delay", 
    "rs_off90", 
    "rs_iso_delay", 
    "echo1bwrs", 
    "rsphorder", 
    "rs_dda", 
    "rst_exa", 
    "rst_exb", 
    "tleadrs", 
    "td0rs", 
    "pw_rf1rs", 
    "ia_rf1rs", 
    "a_rf1rs", 
    "rf1rs_type", 
    "gscale_rf1rs", 
    "flip_rf1rs", 
    "flip_rfbrs", 
    "cyc_rf1rs", 
    "flip_rf1dtg", 
    "flip_rfbdtg", 
    "cyc_rf1dtg", 
    "gscale_rf1dtg", 
    "ia_rf1dtg", 
    "rf1rs_scale", 
    "rf1dtg_scale", 
    "xmtaddrs", 
    "xmtadddtg", 
    "pw_acqrs1", 
    "pw_acqdtg1", 
    "min_rste", 
    "rs_esp", 
    "tr_rs", 
    "tr_prep_rs", 
    "rd_ext_rs", 
    "rd_ext_dtg", 
    "fast_xtr", 
    "attenlen", 
    "tns_len", 
    "e2_delay_rs", 
    "e2_delay_dtg", 
    "time_ssirs", 
    "rfshim_etl", 
    "B1Cal_mode", 
    "DD_delay", 
    "DD_channels", 
    "DD_nCh", 
    "DD_debug", 
    "endview_iamprs", 
    "endview_iampdtg", 
    "endview_scalers", 
    "endview_scaledtg", 
    "echo1bwcal", 
    "cal_dda", 
    "cal_delay", 
    "cal_delay_dda", 
    "calspgr_flag", 
    "cal_tr_interleave", 
    "cal_nex_interleave", 
    "cal_xfov", 
    "cal_yfov", 
    "cal_vthick", 
    "cal_btw_rf_rba_ssp", 
    "cal_grd_rf_delays", 
    "tleadcal", 
    "td0cal", 
    "calt_exa", 
    "calt_exb", 
    "tacq_cal", 
    "te_cal", 
    "tr_cal", 
    "flip_rf1cal", 
    "cal_iso_delay", 
    "endview_iampcal", 
    "endviewz_iampcal", 
    "endview_scalecal", 
    "endviewz_scalecal", 
    "a_combcal", 
    "a_endcal", 
    "a_combcal2", 
    "a_endcal2", 
    "time_ssical", 
    "xmtaddcal", 
    "cal_amplimit", 
    "cal_slewrate", 
    "cal_freq_scale", 
    "cal_phase_scale", 
    "area_gzkcal", 
    "cal_ampscale", 
    "cal_pfkr_flag", 
    "cal_pfkr_fraction", 
    "cal_sampledPts", 
    "echo1bwcoil", 
    "coil_dda", 
    "coilspgr_flag", 
    "coil_nex_interleave", 
    "coil_xfov", 
    "coil_yfov", 
    "coil_vthick", 
    "tleadcoil", 
    "td0coil", 
    "coilt_exa", 
    "coilt_exb", 
    "tacq_coil", 
    "te_coil", 
    "tr_coil", 
    "flip_rf1coil", 
    "coil_iso_delay", 
    "endview_iampcoil", 
    "endviewz_iampcoil", 
    "endview_scalecoil", 
    "endviewz_scalecoil", 
    "a_combcoil", 
    "a_endcoil", 
    "a_combcoil2", 
    "a_endcoil2", 
    "time_ssicoil", 
    "xmtaddcoil", 
    "coil_amplimit", 
    "coil_slewrate", 
    "coil_freq_scale", 
    "coil_phase_scale", 
    "coil_pfkr_flag", 
    "coil_pfkr_fraction", 
    "coil_sampledPts", 
    "CFLxres", 
    "CFHxres", 
    "echo1bwcfl", 
    "echo1bwcfh", 
    "echo1bwrcvn", 
    "rcvn_xres", 
    "rcvn_loops", 
    "pw_grdtrig", 
    "wait_time_before_cfh", 
    "echo1bwas", 
    "off90as", 
    "td0as", 
    "t_exaas", 
    "time_ssias", 
    "tleadas", 
    "te_as", 
    "tr_as", 
    "as_dda", 
    "pw_isislice", 
    "pw_rotslice", 
    "isi_sliceextra", 
    "rgfeature_enable", 
    "enableMapTg", 
    "aslenap", 
    "aslenrl", 
    "aslensi", 
    "aslocap", 
    "aslocrl", 
    "aslocsi", 
    "area_gxwas", 
    "area_gz1as", 
    "area_readrampas", 
    "avail_pwgx1as", 
    "avail_pwgz1as", 
    "bw_rf1as", 
    "flip_pctas", 
    "dix_timeas", 
    "xmtaddas", 
    "xmtlogas", 
    "ps1obl_debug", 
    "asobl_debug", 
    "ps1_newgeo", 
    "as_newgeo", 
    "pw_gy1as_tot", 
    "endview_iampas", 
    "endview_scaleas", 
    "cfh_newgeo", 
    "cfhobl_debug", 
    "deltf", 
    "IRinCFH", 
    "cfh_each", 
    "cfh_slquant", 
    "noswitch_slab_psc", 
    "noswitch_coil_psc", 
    "PStest_slab", 
    "pimrsapsflg", 
    "pimrsaps1", 
    "pimrsaps2", 
    "pimrsaps3", 
    "pimrsaps4", 
    "pimrsaps5", 
    "pimrsaps6", 
    "pimrsaps7", 
    "pimrsaps8", 
    "pimrsaps9", 
    "pimrsaps10", 
    "pimrsaps11", 
    "pimrsaps12", 
    "pimrsaps13", 
    "pimrsaps14", 
    "pimrsaps15", 
    "pw_contrfhubsel", 
    "delay_rfhubsel", 
    "pw_contrfsel", 
    "csw_tr", 
    "csw_wait_sethubindeximm", 
    "csw_wait_setrcvportimm", 
    "csw_wait_before", 
    "csw_time_ssi", 
    "area_gxkrcvn", 
    "area_gykrcvn", 
    "area_gzkrcvn", 
    "pre_rcvn_tr", 
    "rcvn_flag", 
    "psd_startta_override", 
    "psd_psctg", 
    "psd_pscshim", 
    "psd_pscall", 
    "bw_rf1cal", 
    "bw_rf1coil", 
    "yk0_killer_area", 
    "ir_on", 
    "ir_start", 
    "irk_start", 
    "ir_grad_time", 
    "ir_time", 
    "ir_time_total", 
    "ext_ir_pulse", 
    "rf0_phase", 
    "irslquant", 
    "pos_ir_start", 
    "bw_rf0", 
    "hrf0", 
    "ir_index", 
    "csf_fact", 
    "ir_fa_scaling_flag", 
    "inner_spacing", 
    "post_spacing", 
    "invseqlen", 
    "ir_rfupa", 
    "ir_sys_type", 
    "invThickOpt", 
    "invThickOpt_seqtime", 
    "t2flair_extra_ir_flag", 
    "packs", 
    "ir_fa_scale_debug", 
    "ss_rf1", 
    "fat_flag", 
    "fat_delta", 
    "fat_offset", 
    "sszchop", 
    "pw_gzrf1lobe", 
    "pw_constant", 
    "num_rf1lobe", 
    "gradient_mode", 
    "ss_rf_wait", 
    "pw_ss_rampz", 
    "ss_override", 
    "whichss", 
    "nbw_ssrf", 
    "ss_min_slthk", 
    "ss_maxoff", 
    "ss_minslthk1", 
    "ss_convolution_flag", 
    "breast_spsp_flag", 
    "ss_fa_scaling_flag", 
    "ss_fa_scale_debug", 
    "max_ss_fa", 
    "ss_maxoffex", 
    "off90minor", 
    "omega_amp", 
    "gz1_zero_moment", 
    "gz1_first_moment", 
    "a_gzrf1_ss_max", 
    "freqSign", 
    "cv_rfupa", 
    "system_type", 
    "cvlock", 
    "psd_taps", 
    "fix_fermi", 
    "grad_spec_ctrl", 
    "srate", 
    "glimit", 
    "save_gmax", 
    "save_srate", 
    "save_cfxfull", 
    "save_cfyfull", 
    "save_cfzfull", 
    "save_cfxipeak", 
    "save_cfyipeak", 
    "save_cfzipeak", 
    "save_ramptime", 
    "debug_grad_spec", 
    "act_srate", 
    "val15_lock", 
    "avecrushpepowscale_for_SBM_XFD", 
    "dbdt_model", 
    "dbdtper_new", 
    "esprange_check", 
    "espamp_check", 
    "espopt", 
    "espincway", 
    "epigradopt_debug", 
    "epigradopt_output", 
    "disable_crc_check_for_esp", 
    "dbdtperx", 
    "dbdtpery", 
    "dbdtperz", 
    "max_dbdtper_hb_zblips", 
    "scale_ramp", 
    "debugTensor", 
    "tensor_flag", 
    "num_tensor", 
    "validTensorFile", 
    "validTensorFileAndEntry", 
    "num_B0", 
    "sep_time", 
    "min180_echo_tim", 
    "min180_echo_tim2", 
    "calc_bmatrix_flag", 
    "bmax_fixed", 
    "pgen_calc_bval_flag", 
    "tensor_host_sort_flag", 
    "tensor_host_sort_debug", 
    "sse_manualte_derating", 
    "sse_manualte_derating_debug", 
    "spherical_derating_limit", 
    "collect_six_sigma", 
    "per_err_orig_x", 
    "per_err_orig_y", 
    "per_err_orig_z", 
    "per_err_corr_x", 
    "per_err_corr_y", 
    "per_err_corr_z", 
    "sse_enh", 
    "optimizedTEFlag", 
    "act_numdir_clinical", 
    "maxwell_flag", 
    "maxwell_blip", 
    "B0_field", 
    "pw_gxw_MAX_l", 
    "pw_gxw_MAX_r", 
    "pw_gyb_MAX_l", 
    "pw_gyb_MAX_r", 
    "max_debug", 
    "nodelay", 
    "nodelayesp", 
    "b0dither_new", 
    "nob0dither", 
    "nob0dither_interpo", 
    "nobcfile", 
    "number_of_bc_files", 
    "activeReceivers", 
    "flagWarning", 
    "rfov_flag", 
    "rfov_type", 
    "rfov_override", 
    "rfov_cmplx_avg_flag", 
    "debug_rfov", 
    "psminfov", 
    "psminslthick", 
    "temp_slthick", 
    "rfov_maxnslices", 
    "rfov_fa_scaling_flag", 
    "max_rfov_fa", 
    "rfov_dbdtper", 
    "rfov_dbdt_debug", 
    "start_rf1", 
    "thky_rf1", 
    "a_gyrf1", 
    "ia_gyrf1", 
    "pw_gyrf1", 
    "pw_gyrf1a", 
    "pw_gyrf1d", 
    "res_gyrf1", 
    "ia_thrf1", 
    "addrfdel", 
    "area_gyex1", 
    "pw_gyex1_tot", 
    "ex_res", 
    "ex_pw", 
    "ex_ttipdown", 
    "ex_nom_flip", 
    "ex_abswidth", 
    "ex_effwidth", 
    "ex_area", 
    "ex_dtycyc", 
    "ex_maxpw", 
    "ex_max_b1", 
    "ex_max_int_b1_sqr", 
    "ex_max_rms_b1", 
    "ex_a_gzs", 
    "ex_nom_thkz", 
    "ex_a_gys", 
    "ex_nom_thky", 
    "ex_maxnslices", 
    "ex_num_gylobe", 
    "ex_num_gzlobe", 
    "ex_pw_gyrf1lobe", 
    "ex_pw_rampy", 
    "ex_pw_rampz", 
    "ex_pw_constanty", 
    "ex_pw_constantz", 
    "ex_refocus_ratioy", 
    "ex_refocus_ratioz", 
    "ex_tbwy", 
    "ex_tbwz", 
    "freqSign_ex", 
    "shift_to_freq", 
    "y_shift", 
    "y_to_freq", 
    "z_shift", 
    "z_to_freq", 
    "type1_support", 
    "type1_flag", 
    "homogeneity_flag", 
    "ex_a_gys_pos", 
    "a_gys_pos", 
    "ia_gys_pos", 
    "ex_pw_rampy_pos", 
    "ex_pw_constanty_pos", 
    "excite_ratio", 
    "walk_sat_flag", 
    "pw_wksat_tot", 
    "a_gyrfwk", 
    "ia_gyrfwk", 
    "pw_gyrfwk", 
    "pw_gyrfwka", 
    "pw_gyrfwkd", 
    "pw_gwksp", 
    "pw_gwkspa", 
    "pw_gwkspd", 
    "a_gwksp", 
    "pos_sp_wk", 
    "walk_sat_cycle", 
    "wg_rfwk", 
    "res_rfwk_orig", 
    "res_rfwk", 
    "pw_rfwk", 
    "hrfwka", 
    "hrfwkb", 
    "flip_rfwk", 
    "bw_rfwk", 
    "cyc_rfwk", 
    "a_rfwk", 
    "ia_rfwk", 
    "ia_thrfwk", 
    "pos_rfwk", 
    "off_rfwk", 
    "off_thrfwk", 
    "loc_satcen_cm", 
    "loc_satcen_Hz", 
    "sat_thk_factor", 
    "sep_sat_ratio", 
    "rfov_max_freq_shift", 
    "mux_flag", 
    "mux_phase_step", 
    "thetarf2_flag", 
    "use_omegatheta", 
    "omegatheta_pol", 
    "rf2_isodelay", 
    "mux_slquant", 
    "res_thetarf2", 
    "res_gzrf2", 
    "pw_thetarf2", 
    "ia_thetarf2", 
    "ia_thetarf2left", 
    "ia_thetarf2right", 
    "pw_thetarf2a", 
    "pw_thetarf2d", 
    "pw_thetarf2left", 
    "pw_thetarf2lefta", 
    "pw_thetarf2leftd", 
    "pw_thetarf2right", 
    "pw_thetarf2righta", 
    "pw_thetarf2rightd", 
    "verse_rf2", 
    "sltune_rf2", 
    "mux_slices_rf2", 
    "phase_cycle_rf2", 
    "mux_band_gap_warning_flag", 
    "tbwp_rf1", 
    "window_type_rf1", 
    "gauss_width_rf1", 
    "mux_slices_rf1", 
    "mux_slice_shift_mm_rf1", 
    "save_res_rf1", 
    "save_tbwp_rf1", 
    "save_window_type_rf1", 
    "save_gauss_width_rf1", 
    "save_mux_slices_rf1", 
    "save_mux_slice_shift_mm_rf1", 
    "save_thk_rf1", 
    "save_mux_mode_rf1", 
    "dwell_rf_rf1", 
    "debug_mux_rf", 
    "multiband_fa_scaling_flag", 
    "max_multiband_rf1_fa", 
    "max_multiband_rf2_fa", 
    "mux_rf1_scale", 
    "mux_rf2_scale", 
    "slice_fov_shift", 
    "use_slice_fov_shift_blips", 
    "slice_fov_shift_area", 
    "slice_fov_shift_cycles", 
    "slice_fov_shift_blip_start", 
    "slice_fov_shift_blip_inc", 
    "factor_gz1", 
    "gzb_amp", 
    "slice_fov_shift_extra_gap", 
    "slice_fov_shift_calc_new_esp", 
    "slice_fov_shift_extra_gap_flag", 
    "mux_min_verserf2_slthk", 
    "seqtime_t1flair", 
    "act_ti", 
    "dda_t1flair", 
    "dummyslices", 
    "autoti_model", 
    "t1flair_autotr_flag", 
    "t2flair_autotr_flag", 
    "t1flair_seqtime_method", 
    "tmin_total_acq_seq", 
    "tmin_total_ir", 
    "dtr1_tolerance", 
    "dtr2_tolerance", 
    "max_slice_num_reduction", 
    "t1flair_mint1", 
    "t1flair_mint2", 
    "avminti_t1flair", 
    "avmaxti_t1flair", 
    "debug_t1flairenh", 
    "t1flair_chop_flag", 
    "req_edge_slice_enh_flag", 
    "act_edge_slice_enh_flag", 
    "t1flair_slice_uniformity_flag", 
    "force_odd_even_slquant", 
    "enht2flairacqs", 
    "enht2flair_highsort", 
    "avmintr_autotr_t1flair", 
    "incinv", 
    "slquant_in_ti", 
    "act_esp", 
    "autotr_flair_debug", 
    "T1FLAIR_MIN_TI", 
    "T1FLAIR_MAX_TI", 
    "ir_prep_manual_tr_mode", 
    "asset_factor", 
    "assetsl_factor", 
    "assetph_flag", 
    "assetsl_flag", 
    "asset_supported_direction", 
    "fov_advisory_ignore_mslices", 
    "arc_research_flag", 
    "arc_split_method", 
    "arc_fullbam_flag", 
    "arc_extCal", 
    "arc_ph_flag", 
    "arc_ph_factor", 
    "arc_ph_maxstride", 
    "arc_ph_recstride", 
    "arc_ph_userstride", 
    "arc_ph_stride", 
    "arc_ph_maxnetaccel", 
    "arc_ph_recnetaccel", 
    "arc_ph_acs", 
    "arc_ph_acs_min", 
    "arc_ph_fullencode", 
    "arc_ph_spanned", 
    "arc_ph_acquired", 
    "arc_ph_intaccel", 
    "arc_ph_halfnex", 
    "arc_ph_hnover", 
    "arc_ph_minover", 
    "arc_sl_flag", 
    "arc_sl_factor", 
    "arc_sl_maxstride", 
    "arc_sl_recstride", 
    "arc_sl_userstride", 
    "arc_sl_stride", 
    "arc_sl_maxnetaccel", 
    "arc_sl_recnetaccel", 
    "arc_sl_acs", 
    "arc_sl_acs_min", 
    "arc_sl_fullencode", 
    "arc_sl_spanned", 
    "arc_sl_acquired", 
    "arc_sl_intaccel", 
    "arc_sl_halfnex", 
    "arc_sl_hnover", 
    "arc_sl_minover", 
    "arc_sl_fn", 
    "arc_kx_peak_pos", 
    "arc_ky_peak_pos", 
    "arc_syn_pts", 
    "ARCKey", 
    "readmonloc", 
    "loopdelay", 
    "loopdelay2", 
    "navgs", 
    "sigma1", 
    "sigma2", 
    "savedata", 
    "max_avg_time", 
    "monloc_shift", 
    "tracker_quant", 
    "acq_data_only", 
    "mon_tr", 
    "smartprep_flag", 
    "min_delay_time", 
    "num_audibles", 
    "audible_loop", 
    "data_type", 
    "save_fft", 
    "swap_monplane", 
    "swap_mon_zy", 
    "detector_mode", 
    "fov_factor", 
    "nav_angle_adj", 
    "mon_angle", 
    "nav_tipup_ratio", 
    "cylr_rf_type", 
    "pw_rfcylr", 
    "ia_rfcylr", 
    "a_rfcylr", 
    "pw_thcylr", 
    "ia_thcylr", 
    "a_thcylr", 
    "pw_gycylr", 
    "ia_gycylr", 
    "a_gycylr", 
    "pw_gzcylr", 
    "ia_gzcylr", 
    "a_gzcylr", 
    "pw_rfcylrtipup", 
    "ia_rfcylrtipup", 
    "a_rfcylrtipup", 
    "pw_thcylrtipup", 
    "ia_thcylrtipup", 
    "a_thcylrtipup", 
    "pw_gycylrtipup", 
    "ia_gycylrtipup", 
    "a_gycylrtipup", 
    "pw_gzcylrtipup", 
    "ia_gzcylrtipup", 
    "a_gzcylrtipup", 
    "min_delay_sec", 
    "delay_dda", 
    "delay_quiet_dda", 
    "total_quiet_dda", 
    "rtpend_quiet_dda", 
    "delay_quiet_time", 
    "debug_monrot", 
    "debug_monrotphi", 
    "debug_monloc", 
    "transpose_monloc", 
    "write_spinfo", 
    "oblique_monplane", 
    "monitor_axis", 
    "theta", 
    "ta_180sp", 
    "tb_180sp", 
    "te_180sp", 
    "min_montr", 
    "tlead_monitor", 
    "tlead_montipup", 
    "mon_ssi_time", 
    "non_tetime_mon", 
    "tmin_mon", 
    "tmin_montipup", 
    "rda_mon", 
    "minseqcoilmon_t", 
    "minseqgrddrvmon_t", 
    "minseqgrddrvxmon_t", 
    "minseqgrddrvymon_t", 
    "minseqgrddrvzmon_t", 
    "minseqcablemon_t", 
    "minseqbusbarmon_t", 
    "max_seqsarmon", 
    "min_seqrfampmon", 
    "monnewgeo", 
    "monobl_debug", 
    "monobl_method", 
    "monitor_page", 
    "monave_sar", 
    "monpeak_sar", 
    "moncave_sar", 
    "mon_xres", 
    "rf1mon_shift", 
    "rf2mon_shift", 
    "bw_rf1mon", 
    "bw_rf2mon", 
    "bw_rfmontipup", 
    "mon_fov", 
    "mon_acqfov", 
    "echo1monbw", 
    "mon_vthickz", 
    "mon_vthicky", 
    "mon_vthick", 
    "area_gzkmon", 
    "area_gzkmontipup", 
    "mon_fcomp", 
    "fnecho_frac", 
    "monitor_test", 
    "get_fullecho", 
    "numpts2pass", 
    "reverse_views", 
    "mon_trigger_delay", 
    "smartprep_was_on", 
    "scanclocktime", 
    "mon_dabdelay", 
    "xres2use", 
    "num_avg_bline", 
    "num_throwaways", 
    "num_baseline_pts", 
    "tmpbw1", 
    "debug_sp_rtp", 
    "debug_sp_agp", 
    "cerdtype", 
    "mon_run_setrcvportimm", 
    "sprep_save_raw_data", 
    "sprep_debug_flag", 
    "sprep_timing_flag", 
    "rtpresultwait", 
    "navend_time", 
    "nav_dual_mode", 
    "nav_irprep_flag", 
    "nav_tseq_irprep", 
    "nav_min_tseq_irprep", 
    "pw_nomcyl", 
    "a_nomcyl", 
    "smartPrepEdrFlag", 
    "slabtracking_flag", 
    "corr_mode", 
    "corr_factor_z", 
    "corr_factor_y", 
    "corr_factor_x", 
    "corr_x", 
    "corr_y", 
    "corr_z", 
    "fixed_acqs_debug", 
    "sl_acq", 
    "sl_acq_val2", 
    "sl_acq_val3", 
    "sl_acq_val4", 
    "tr_acq", 
    "tr_acq_val2", 
    "tr_acq_val3", 
    "tr_acq_val4", 
    "tr_limit", 
    "temp_trval", 
    "temp_tmin_total", 
    "keep_opti", 
    "rtb0_flag", 
    "rtb0_enable", 
    "rtb0_support", 
    "rtb0_first_skip", 
    "rtb0_last_skip", 
    "rtb0_movAvg", 
    "rtb0_min_points", 
    "rtb0DebugFlag", 
    "rtb0SaveRaw", 
    "rtb0_phase_method", 
    "rtb0_coil_combine", 
    "rtb0_timing_flag", 
    "rtb0dummy_time", 
    "rtb0fittingwaittime", 
    "rtb0resultwaittime", 
    "rtb0fittingwaittimeLoop", 
    "rtb0dummyseq", 
    "rtb0_comp_flag", 
    "rtb0_acq_delay", 
    "rtb0_minintervalb4acq", 
    "rtb0_r1_delta", 
    "pw_dynr1", 
    "rtb0_filter_cf_flag", 
    "rtb0_recvphase_comp_flag", 
    "rtb0_comp_debug_flag", 
    "rtb0_cfoffset_debug", 
    "rtb0_slice_shift", 
    "cf_interpolation", 
    "rtb0_max_range", 
    "rtb0_rejectnoise", 
    "rtb0_smooth_kernel_size", 
    "rtb0_smooth_cf_flag", 
    "rtb0_median_kernel_size", 
    "rtb0_min_kernel_keep_edge", 
    "rtb0_max_kernel_percent", 
    "rtb0_max_kernel_keep_edge", 
    "rtb0_confidence_method", 
    "rtb0_cfstddev_threshold", 
    "rtb0_cfresidual_threshold", 
    "rtb0_confidence_thresh_val", 
    "rtb0_gzrf0_off", 
    "rtb0_spsp_flag", 
    "rtb0_dda", 
    "rtb0_debug", 
    "rtb0_midsliceindex", 
    "rtb0_outlier_threshold", 
    "rtb0_outlier_duration", 
    "rtb0_outlier_nTRs", 
    "focus_eval_oscil", 
    "focus_eval_oscil_hist", 
    "isPredownload", 
    "keep_focus_eval_oscil", 
    "reset_oscil_in_eval", 
    "force_acqs", 
    "force_avmaxslquant", 
    "oscil_eval_count", 
    "optr_save", 
    "opslquant_save", 
    "save_avmintr", 
    "save_pitracqval4", 
    "res_gd1", 
    "res_gd2", 
    "pw_gd1", 
    "pw_gd2", 
    "a_gxdl", 
    "a_gxdr", 
    "ia_gxdl", 
    "ia_gxdr", 
    "res_gxdl", 
    "res_gxdr", 
    "pw_gxdr", 
    "pw_gxdl", 
    "wg_gxdr", 
    "wg_gxdl", 
    "a_gydl", 
    "a_gydr", 
    "ia_gydl", 
    "ia_gydr", 
    "res_gydl", 
    "res_gydr", 
    "pw_gydr", 
    "pw_gydl", 
    "wg_gydr", 
    "wg_gydl", 
    "a_gzdl", 
    "a_gzdr", 
    "ia_gzdl", 
    "ia_gzdr", 
    "res_gzdl", 
    "res_gzdr", 
    "pw_gzdr", 
    "pw_gzdl", 
    "wg_gzdr", 
    "wg_gzdl", 
    "a_gxdla", 
    "a_gxdld", 
    "a_gxdra", 
    "a_gxdrd", 
    "ia_gxdla", 
    "ia_gxdld", 
    "ia_gxdra", 
    "ia_gxdrd", 
    "pw_gxdla", 
    "pw_gxdld", 
    "pw_gxdra", 
    "pw_gxdrd", 
    "a_gydla", 
    "a_gydld", 
    "a_gydra", 
    "a_gydrd", 
    "ia_gydla", 
    "ia_gydld", 
    "ia_gydra", 
    "ia_gydrd", 
    "pw_gydla", 
    "pw_gydld", 
    "pw_gydra", 
    "pw_gydrd", 
    "a_gzdla", 
    "a_gzdld", 
    "a_gzdra", 
    "a_gzdrd", 
    "ia_gzdla", 
    "ia_gzdld", 
    "ia_gzdra", 
    "ia_gzdrd", 
    "pw_gzdla", 
    "pw_gzdld", 
    "pw_gzdra", 
    "pw_gzdrd", 
    "num_passdelay", 
    "use_maxloggrad", 
    "max_grad", 
    "scale_dif", 
    "debug_core", 
    "debug_unitTest", 
    "taratio", 
    "rampopt", 
    "totarea", 
    "actratio", 
    "dpc_flag", 
    "sndpc_flag", 
    "iref_etl", 
    "iref_frames", 
    "tot_etl", 
    "pw_gxiref1_tot", 
    "pw_gxiref_tot", 
    "pw_gxirefr_tot", 
    "MinFram2FramTime", 
    "maxslice_per_ti", 
    "invseqtime", 
    "false_acqs", 
    "false_slquant1", 
    "max_slice_ti", 
    "flair_min_tr", 
    "dda_packb", 
    "dda_pack", 
    "dda_packe", 
    "dda_passb", 
    "dda_pass", 
    "deadlast", 
    "tmp_deadlast", 
    "phase_dither", 
    "spgr_flag", 
    "rhhnover_max", 
    "rhhnover_min", 
    "rhhnover_min_per_ilv", 
    "newyres", 
    "num_overscan", 
    "smart_numoverscan", 
    "avmintefull", 
    "cvrefindex1", 
    "gx1_area", 
    "avmintetemp", 
    "fast_rec", 
    "bl_acq_tr1", 
    "bl_acq_tr2", 
    "fecho_factor", 
    "tsp", 
    "intleaves", 
    "ky_dir", 
    "kx_dir", 
    "dc_chop", 
    "etot", 
    "emid", 
    "e1st", 
    "seq_data", 
    "msamp", 
    "dsamp", 
    "delpw", 
    "num_dif", 
    "incr", 
    "df_encode", 
    "i_bval", 
    "df_refscn", 
    "dwi_fphases", 
    "max_slice_dfaxall", 
    "dualspinecho_flag", 
    "derate_amp", 
    "scale_difx", 
    "scale_dify", 
    "scale_difz", 
    "unbalanceCrusher", 
    "crusherFactorLeft", 
    "crusherFactorRight", 
    "invertSliceSelectZ", 
    "invertSliceSelectZ2", 
    "xygradRightCrusherFlag", 
    "xygradLeftCrusherFlag", 
    "xygradCrusherFlag", 
    "invertCrusherXY", 
    "ssgr_mux", 
    "ssgr_flag", 
    "ssgr_bw_update", 
    "freqSign_rf2right", 
    "freqSign_rf2left", 
    "freqSign_rf2", 
    "fat_cs", 
    "rf1_bw_ratio", 
    "rf2_bw_ratio", 
    "b0_offset", 
    "RightCrusherLSlop", 
    "RightCrusherRSlop", 
    "LeftCrusherLSlop", 
    "LeftCrusherRSlop", 
    "CrusherRSlop", 
    "CrusherLSlop", 
    "epi2spec_mode", 
    "weighted_avg_grad", 
    "weighted_avg_debug", 
    "DELTAx", 
    "DELTAy", 
    "DELTAz", 
    "deltax", 
    "deltay", 
    "deltaz", 
    "a_gx_dwi", 
    "a_gy_dwi", 
    "a_gz_dwi", 
    "freq_dwi", 
    "phase_dwi", 
    "ia_gx_dwi", 
    "ia_gy_dwi", 
    "ia_gz_dwi", 
    "dwicntrl", 
    "dwidebug", 
    "tmp_ileave", 
    "tmp_ygrad_sw", 
    "t4_tmp", 
    "incdifx", 
    "incdify", 
    "incdifz", 
    "ia_incdifx", 
    "ia_incdify", 
    "ia_incdifz", 
    "waveform_type", 
    "ide_max_bval", 
    "sde_max_bval", 
    "bincr", 
    "invthick", 
    "xerror", 
    "yerror", 
    "zerror", 
    "obl_3in1_opt_debug", 
    "obl_3in1_opt", 
    "norot_incdifx", 
    "norot_incdify", 
    "norot_incdifz", 
    "target_mpg_inv", 
    "target_mpg", 
    "amp_difx_bverify", 
    "amp_dify_bverify", 
    "amp_difz_bverify", 
    "different_mpg_amp_flag", 
    "act_acqs", 
    "min_acqs", 
    "maxslq_titime", 
    "maxslq_ilir", 
    "epi_flair", 
    "flair_flag", 
    "dda_fact", 
    "reps", 
    "pass_reps", 
    "max_dsht", 
    "avg_at_loc", 
    "filtfix", 
    "rf_chop", 
    "rftype", 
    "thetatype", 
    "gztype", 
    "hsdab", 
    "slice_num", 
    "rep_num", 
    "endview_iamp", 
    "endview_scale", 
    "gx1pos", 
    "gy1pos", 
    "eosxkiller", 
    "eosykiller", 
    "eoszkiller", 
    "eoskillers", 
    "eosrhokiller", 
    "gyctrl", 
    "gxctrl", 
    "gzctrl", 
    "ygmn_type", 
    "zgmn_type", 
    "rampsamp", 
    "final_xres", 
    "autovrgf", 
    "vrgf_targ", 
    "vrgf_reorder", 
    "fbhw", 
    "osamp", 
    "etl", 
    "eesp", 
    "nblips", 
    "blips2cent", 
    "ep_alt", 
    "tia_gx1", 
    "tia_gxw", 
    "tia_gxk", 
    "tia_gxiref1", 
    "tia_gxirefr", 
    "ta_gxwn", 
    "rbw", 
    "avminxa", 
    "avminxb", 
    "avminx", 
    "avminya", 
    "avminyb", 
    "avminy", 
    "avminza", 
    "avminzb", 
    "avminz", 
    "avminssp", 
    "avminfovx", 
    "avminfovy", 
    "hrdwr_period", 
    "samp_period", 
    "pwmin_gap", 
    "frqx", 
    "frqy", 
    "dacq_offset", 
    "pepolar", 
    "rpg_flag", 
    "rpg_in_scan_flag", 
    "rpg_in_scan_num", 
    "tdaqhxa", 
    "tdaqhxb", 
    "xdiff_time1", 
    "xdiff_time2", 
    "ydiff_time1", 
    "ydiff_time2", 
    "zdiff_time1", 
    "zdiff_time2", 
    "delt", 
    "T1eff", 
    "bcoeff", 
    "aspir_auto_ti_model", 
    "tfon", 
    "fract_ky", 
    "ky_offset", 
    "gy1_offset", 
    "satdelay", 
    "sp_sattype", 
    "td0", 
    "t_exa", 
    "te_time", 
    "pos_start", 
    "pos_start_init", 
    "post_echo_time", 
    "psd_tseq", 
    "time_ssi", 
    "dacq_adjust", 
    "watchdogcount", 
    "dabdelay", 
    "tlead", 
    "act_tr", 
    "rfconf", 
    "ctlend", 
    "dda", 
    "debug", 
    "debug_dbdt", 
    "debugipg", 
    "debugepc", 
    "debugdither", 
    "debugdelay", 
    "dex", 
    "gating", 
    "ipg_trigtest", 
    "gxktime", 
    "gyktime", 
    "gzktime", 
    "gktime", 
    "gkdelay", 
    "scanbw", 
    "scanslot", 
    "a_lcrush_cfh", 
    "area_gxw", 
    "area_gx1", 
    "area_readramp", 
    "area_r1", 
    "area_gz1", 
    "area_gzrf2l1", 
    "area_r1_cfh", 
    "area_std", 
    "area_stde", 
    "avail_pwgz1", 
    "prescan1_tr", 
    "ps2_dda", 
    "avail_pwgx1", 
    "avail_image_time", 
    "beg_nontetime", 
    "pos_start_rf0", 
    "beg_nontitime", 
    "avail_se_time", 
    "avail_tdaqhxa", 
    "full_irtime", 
    "avail_yflow_time", 
    "avail_zflow_time", 
    "nviews", 
    "test_getecg", 
    "premid_rf90", 
    "c1_scale", 
    "c2_scale", 
    "crusher_cycles", 
    "max_seqtime", 
    "max_slicesar", 
    "max_seqsar", 
    "myrloc", 
    "other_slice_limit", 
    "target_area", 
    "start_amp", 
    "end_amp", 
    "pre_pass", 
    "nreps", 
    "xmtaddScan", 
    "rfscale", 
    "rfExIso", 
    "frq2sync_dly", 
    "rf1_phase", 
    "rf2_phase", 
    "hrf1a", 
    "hrf1b", 
    "hrf2a", 
    "hrf2b", 
    "innerVol", 
    "ivslthick", 
    "psd_mantrig", 
    "trig_mps2", 
    "trig_aps2", 
    "trig_scan", 
    "trig_prescan", 
    "read_truncate", 
    "tmin_flair", 
    "trigger_time", 
    "use_myscan", 
    "t_postreadout", 
    "initnewgeo", 
    "obl_debug", 
    "obl_method", 
    "debug_order", 
    "debug_tdel", 
    "debug_scan", 
    "postsat", 
    "order_routine", 
    "scan_offset", 
    "dither_control", 
    "dither_value", 
    "slquant_per_trig", 
    "non_tetime", 
    "slice_size", 
    "max_bamslice", 
    "rf2PulseType", 
    "bw_rf1", 
    "bw_rf2", 
    "a_gx1", 
    "ia_gx1", 
    "pw_gx1a", 
    "pw_gx1d", 
    "pw_gx1", 
    "single_ramp_gx1d", 
    "area_gy1", 
    "area_gyb", 
    "a_omega", 
    "ia_omega", 
    "bline_time", 
    "scan_time", 
    "t1flair_disdaq_time", 
    "pw_gx1_tot", 
    "pw_gy1_tot", 
    "pw_gymn1_tot", 
    "pw_gymn2_tot", 
    "gyb_tot_0thmoment", 
    "gyb_tot_1stmoment", 
    "pw_gz1_tot", 
    "pw_gzrf2l1_tot", 
    "pw_gzrf2r1_tot", 
    "pw_gzrf2l1_tot_bval", 
    "pw_gzrf2l2_tot_bval", 
    "pw_gzrf2r1_tot_bval", 
    "pw_gzrf2r2_tot_bval", 
    "dab_offset", 
    "xtr_offset", 
    "rcvr_ub_off", 
    "temprhfrsize", 
    "pw_wgxdl", 
    "pw_wgxdr", 
    "pw_wgydl", 
    "pw_wgydr", 
    "pw_wgzdl", 
    "pw_wgzdr", 
    "pw_wgxdl1", 
    "pw_wgxdr1", 
    "pw_wgydl1", 
    "pw_wgydr1", 
    "pw_wgzdl1", 
    "pw_wgzdr1", 
    "pw_wgxdl2", 
    "pw_wgxdr2", 
    "pw_wgydl2", 
    "pw_wgydr2", 
    "pw_wgzdl2", 
    "pw_wgzdr2", 
    "zeromoment", 
    "firstmoment", 
    "zeromomentsum", 
    "firstmomentsum", 
    "pulsepos", 
    "invertphase", 
    "xtarg", 
    "ytarg", 
    "ztarg", 
    "ditheron", 
    "dx", 
    "dy", 
    "dz", 
    "b0calmode", 
    "slice_reset", 
    "slice_loc", 
    "delayon", 
    "gxdelay", 
    "gydelay", 
    "gldelayx", 
    "gldelayy", 
    "gldelayz", 
    "pckeeppct", 
    "pkt_delay", 
    "mph_flag", 
    "acqmode", 
    "max_phases", 
    "opslquant_old", 
    "piphases", 
    "reqesp", 
    "autogap", 
    "minesp", 
    "fft_xsize", 
    "fft_ysize", 
    "image_size", 
    "xtr_rba_time", 
    "frtime", 
    "readpolar", 
    "blippolar", 
    "ref_mode", 
    "refnframes", 
    "ref_with_xoffset", 
    "noRefPrePhase", 
    "setDataAcqDelays", 
    "refSliceNum", 
    "core_shots", 
    "disdaq_shots", 
    "pass_shots", 
    "passr_shots", 
    "pass_time", 
    "scan_deadtime", 
    "pw_gxwl1", 
    "pw_gxwl2", 
    "pw_gxwr1", 
    "pw_gxwr2", 
    "pw_gxw_total", 
    "pass_delay", 
    "nshots_locks", 
    "min_nshots", 
    "max_nshots", 
    "da_gyboc", 
    "oc_fact", 
    "oblcorr_on", 
    "oblcorr_perslice", 
    "debug_oblcorr", 
    "bc_delx", 
    "bc_dely", 
    "bc_delz", 
    "cvxfull", 
    "cvyfull", 
    "cvzfull", 
    "bw_flattop", 
    "area_usedramp", 
    "pw_usedramp", 
    "area_usedtotal", 
    "EZflag", 
    "omega_scale", 
    "rba_act_start", 
    "aps2_rspslq", 
    "aps2_rspslqb", 
    "ghost_check", 
    "gck_offset_fov", 
    "irprep_flag", 
    "irprep_support", 
    "enhanced_fat_suppression", 
    "global_shim_method", 
    "d_cf", 
    "rt_opphases", 
    "debugileave", 
    "rup_factor", 
    "min_phasefov", 
    "core_time", 
    "override_fatsat_high_weight", 
    "scale_all", 
    "default_bvalue", 
    "default_difnex", 
    "use_phygrad", 
    "total_difnex", 
    "max_difnex", 
    "max_nex", 
    "max_bval", 
    "gradopt_diffall", 
    "ADC_warning_flag", 
    "edwi_extra_time", 
    "bigpat_warning_flag", 
    "avg_bval", 
    "max_difnex_limit", 
    "syndwi_flag", 
    "prescribed_max_bval", 
    "prescribed_min_bval", 
    "prescribed_bval_range", 
    "fullk_nframes", 
    "xfd_power_limit", 
    "xfd_temp_limit", 
    "TGenh", 
    "vrgf_bwctrl", 
    "ref_in_scan_flag", 
    "refless_option", 
    "ref_dda", 
    "scan_dda", 
    "pc_enh", 
    "ref_volrecvcoil_flag", 
    "hopc_flag", 
    "diff_order_flag", 
    "diff_order_debug", 
    "diff_order_verify", 
    "diff_order_nslices", 
    "diff_order_size", 
    "diff_pass_counter", 
    "diff_pass_counter_save", 
    "skip_ir", 
    "num_iters", 
    "dti_dse_ecoon_scaling_factor", 
    "dti_sse_ecoon_scaling_factor", 
    "dti_sse_ecooff_scaling_factor", 
    "dwi_single_all_dse_ecoon_scaling_factor", 
    "dwi_single_all_sse_ecoon_scaling_factor", 
    "dwi_3in1_dse_ecoon_scaling_factor", 
    "k15_system_flag", 
    "hoecc_flag", 
    "hoecc_psd_flag", 
    "hoecc_recon_flag", 
    "hoecc_debug", 
    "hoecc_support", 
    "hoecc_enable", 
    "necho_before_te", 
    "psd_per_echo_corr", 
    "read_corr_option", 
    "psd_debug_echo_index", 
    "psd_echo_for_debug", 
    "psd_ileave_for_debug", 
    "psd_slice_for_debug", 
    "hoec_cal_data_sign", 
    "hoecc_manual_mode_warning_flag", 
    "hoecc_manual_mode_psd_override_flag", 
    "muse_flag", 
    "muse_support", 
    "epi_srderate_factor", 
    "epi_loggrd_glim_flag", 
    "epi_loggrd_glim", 
    "adaptive_mpg_glim_flag", 
    "adaptive_mpg_glim", 
    "avmaxpasses", 
    "nav_image_interval", 
    "focus_B0_robust_mode", 
    "focus_unwanted_delta_f", 
    "eco_mpg_support", 
    "eco_mpg_flag", 
    "mpg_opt_flag", 
    "dse_enh_flag", 
    "dse_opt_flag", 
    "bval_arbitrary_flag", 
    "pw_d1", 
    "pw_d2", 
    "b_tol", 
    "mpg_opt_margin", 
    "mpg_opt_derate", 
    "mpg_opt_glimit_orig", 
    "fskillercycling", 
    "nav_type", 
    "nav_sr", 
    "nav_window", 
    "navigator_flag", 
    "nav_ss", 
    "nav_dda", 
    "nav_pause_after_prescan", 
    "enhanced_nav_flag", 
    "skip_navigator_prescan", 
    "nav_test", 
    "nav_alg", 
    "nav_dir", 
    "nav_channel", 
    "nav_coilsel_index", 
    "nav_normalization", 
    "mon_navgs", 
    "hist_wait_time", 
    "nav_dump_time", 
    "curr_eff", 
    "monrot_phi", 
    "navtrig_flag", 
    "navgate_flag", 
    "calc_rate", 
    "num_slice_rr", 
    "nav_prescan_tr", 
    "nav_coilsel_tr", 
    "mon_tr_nav", 
    "mon_tr_wait", 
    "navtrig_target_tr", 
    "navgate_target_tr", 
    "wait_pts", 
    "navtrig_waittime", 
    "navtrig_factor", 
    "nav_scantime_refresh", 
    "nav_scantime_refresh_pts", 
    "nav_save_raw_data", 
    "nav_debug_flag", 
    "nav_timing_flag", 
    "navigatorCYL_flag", 
    "tlead_cylnav", 
    "navsat_flag", 
    "flip_rfcylr_navsat", 
    "flip_rfmon_navsat", 
    "navscale", 
    "flip_rfcylr", 
    "flip_rfcylrtipup", 
    "cylr_xoff", 
    "cylr_yoff", 
    "cylr_manoff", 
    "cylr_skew", 
    "cylr_dtheta", 
    "act_te_cylr", 
    "t_exa_cylr", 
    "t_exb_cylr", 
    "t_rdb_cylr", 
    "rtp_mode_for_nav_dynaplan", 
    "a_gxwksp", 
    "ia_gxwksp", 
    "pw_gxwkspa", 
    "pw_gxwkspd", 
    "pw_gxwksp", 
    "wg_gxwksp", 
    "a_gywksp", 
    "ia_gywksp", 
    "pw_gywkspa", 
    "pw_gywkspd", 
    "pw_gywksp", 
    "wg_gywksp", 
    "a_gzwksp", 
    "ia_gzwksp", 
    "pw_gzwkspa", 
    "pw_gzwkspd", 
    "pw_gzwksp", 
    "wg_gzwksp", 
    "a_gyex1", 
    "ia_gyex1", 
    "pw_gyex1a", 
    "pw_gyex1d", 
    "pw_gyex1", 
    "wg_gyex1", 
    "res_omthrf2", 
    "res_omthrf2left", 
    "res_omthrf2right", 
    "res_rf2_gradient_waveform", 
    "wg_rf2_gradient_waveform", 
    "ia_dynr1", 
    "pw_x_td0", 
    "wg_x_td0", 
    "pw_y_td0", 
    "wg_y_td0", 
    "pw_z_td0", 
    "wg_z_td0", 
    "pw_rho_td0", 
    "wg_rho_td0", 
    "pw_theta_td0", 
    "wg_theta_td0", 
    "pw_omega_td0", 
    "wg_omega_td0", 
    "pw_ssp_td0", 
    "wg_ssp_td0", 
    "a_gzrf1", 
    "ia_gzrf1", 
    "pw_gzrf1a", 
    "pw_gzrf1d", 
    "pw_gzrf1", 
    "res_gzrf1", 
    "a_rf1", 
    "ia_rf1", 
    "pw_rf1", 
    "res_rf1", 
    "cyc_rf1", 
    "off_rf1", 
    "alpha_rf1", 
    "thk_rf1", 
    "gscale_rf1", 
    "flip_rf1", 
    "a_thetarf1", 
    "ia_thetarf1", 
    "pw_thetarf1", 
    "res_thetarf1", 
    "off_thetarf1", 
    "wg_rf1", 
    "a_gzrf2", 
    "ia_gzrf2", 
    "pw_gzrf2a", 
    "pw_gzrf2d", 
    "pw_gzrf2", 
    "a_rf2", 
    "ia_rf2", 
    "pw_rf2", 
    "res_rf2", 
    "cyc_rf2", 
    "off_rf2", 
    "alpha_rf2", 
    "thk_rf2", 
    "gscale_rf2", 
    "flip_rf2", 
    "wg_rf2", 
    "a_gzrf2left", 
    "ia_gzrf2left", 
    "pw_gzrf2lefta", 
    "pw_gzrf2leftd", 
    "pw_gzrf2left", 
    "a_rf2left", 
    "ia_rf2left", 
    "pw_rf2left", 
    "res_rf2left", 
    "cyc_rf2left", 
    "off_rf2left", 
    "alpha_rf2left", 
    "thk_rf2left", 
    "gscale_rf2left", 
    "flip_rf2left", 
    "wg_rf2left", 
    "a_gzrf2right", 
    "ia_gzrf2right", 
    "pw_gzrf2righta", 
    "pw_gzrf2rightd", 
    "pw_gzrf2right", 
    "a_rf2right", 
    "ia_rf2right", 
    "pw_rf2right", 
    "res_rf2right", 
    "cyc_rf2right", 
    "off_rf2right", 
    "alpha_rf2right", 
    "thk_rf2right", 
    "gscale_rf2right", 
    "flip_rf2right", 
    "wg_rf2right", 
    "res_rf2se1b4", 
    "wg_rf2se1b4", 
    "a_gyrf2iv", 
    "ia_gyrf2iv", 
    "pw_gyrf2iva", 
    "pw_gyrf2ivd", 
    "pw_gyrf2iv", 
    "wg_gyrf2iv", 
    "a_gzrf2l1", 
    "ia_gzrf2l1", 
    "pw_gzrf2l1a", 
    "pw_gzrf2l1d", 
    "pw_gzrf2l1", 
    "wg_gzrf2l1", 
    "a_gzrf2r1", 
    "ia_gzrf2r1", 
    "pw_gzrf2r1a", 
    "pw_gzrf2r1d", 
    "pw_gzrf2r1", 
    "wg_gzrf2r1", 
    "a_xgradCrusherL", 
    "ia_xgradCrusherL", 
    "pw_xgradCrusherLa", 
    "pw_xgradCrusherLd", 
    "pw_xgradCrusherL", 
    "wg_xgradCrusherL", 
    "a_xgradCrusherR", 
    "ia_xgradCrusherR", 
    "pw_xgradCrusherRa", 
    "pw_xgradCrusherRd", 
    "pw_xgradCrusherR", 
    "wg_xgradCrusherR", 
    "a_ygradCrusherL", 
    "ia_ygradCrusherL", 
    "pw_ygradCrusherLa", 
    "pw_ygradCrusherLd", 
    "pw_ygradCrusherL", 
    "wg_ygradCrusherL", 
    "a_ygradCrusherR", 
    "ia_ygradCrusherR", 
    "pw_ygradCrusherRa", 
    "pw_ygradCrusherRd", 
    "pw_ygradCrusherR", 
    "wg_ygradCrusherR", 
    "a_gzrf2leftl1", 
    "ia_gzrf2leftl1", 
    "pw_gzrf2leftl1a", 
    "pw_gzrf2leftl1d", 
    "pw_gzrf2leftl1", 
    "wg_gzrf2leftl1", 
    "a_gzrf2leftr1", 
    "ia_gzrf2leftr1", 
    "pw_gzrf2leftr1a", 
    "pw_gzrf2leftr1d", 
    "pw_gzrf2leftr1", 
    "wg_gzrf2leftr1", 
    "a_gzrf2rightl1", 
    "ia_gzrf2rightl1", 
    "pw_gzrf2rightl1a", 
    "pw_gzrf2rightl1d", 
    "pw_gzrf2rightl1", 
    "wg_gzrf2rightl1", 
    "a_gzrf2rightr1", 
    "ia_gzrf2rightr1", 
    "pw_gzrf2rightr1a", 
    "pw_gzrf2rightr1d", 
    "pw_gzrf2rightr1", 
    "wg_gzrf2rightr1", 
    "a_xgradRightCrusherL", 
    "ia_xgradRightCrusherL", 
    "pw_xgradRightCrusherLa", 
    "pw_xgradRightCrusherLd", 
    "pw_xgradRightCrusherL", 
    "wg_xgradRightCrusherL", 
    "a_xgradRightCrusherR", 
    "ia_xgradRightCrusherR", 
    "pw_xgradRightCrusherRa", 
    "pw_xgradRightCrusherRd", 
    "pw_xgradRightCrusherR", 
    "wg_xgradRightCrusherR", 
    "a_ygradRightCrusherL", 
    "ia_ygradRightCrusherL", 
    "pw_ygradRightCrusherLa", 
    "pw_ygradRightCrusherLd", 
    "pw_ygradRightCrusherL", 
    "wg_ygradRightCrusherL", 
    "a_ygradRightCrusherR", 
    "ia_ygradRightCrusherR", 
    "pw_ygradRightCrusherRa", 
    "pw_ygradRightCrusherRd", 
    "pw_ygradRightCrusherR", 
    "wg_ygradRightCrusherR", 
    "a_xgradLeftCrusherL", 
    "ia_xgradLeftCrusherL", 
    "pw_xgradLeftCrusherLa", 
    "pw_xgradLeftCrusherLd", 
    "pw_xgradLeftCrusherL", 
    "wg_xgradLeftCrusherL", 
    "a_xgradLeftCrusherR", 
    "ia_xgradLeftCrusherR", 
    "pw_xgradLeftCrusherRa", 
    "pw_xgradLeftCrusherRd", 
    "pw_xgradLeftCrusherR", 
    "wg_xgradLeftCrusherR", 
    "a_ygradLeftCrusherL", 
    "ia_ygradLeftCrusherL", 
    "pw_ygradLeftCrusherLa", 
    "pw_ygradLeftCrusherLd", 
    "pw_ygradLeftCrusherL", 
    "wg_ygradLeftCrusherL", 
    "a_ygradLeftCrusherR", 
    "ia_ygradLeftCrusherR", 
    "pw_ygradLeftCrusherRa", 
    "pw_ygradLeftCrusherRd", 
    "pw_ygradLeftCrusherR", 
    "wg_ygradLeftCrusherR", 
    "a_gxcl", 
    "a_gxw", 
    "a_gxcr", 
    "a_gyb", 
    "a_gzb", 
    "ia_gxcl", 
    "ia_gxw", 
    "ia_gxcr", 
    "ia_gyb", 
    "ia_gzb", 
    "pw_gxcla", 
    "pw_gxcl", 
    "pw_gxcld", 
    "pw_gxwl", 
    "pw_gxw", 
    "pw_gxwr", 
    "pw_gxwad", 
    "pw_gxgap", 
    "pw_gxcra", 
    "pw_gxcr", 
    "pw_gxcrd", 
    "pw_gyba", 
    "pw_gyb", 
    "pw_gybd", 
    "pw_gzba", 
    "pw_gzb", 
    "pw_gzbd", 
    "pw_iref_gxwait", 
    "ia_rec_unblank", 
    "ia_rec_unblank3", 
    "filter_rtb0echo", 
    "ia_rec_unblank2", 
    "a_gxiref1", 
    "ia_gxiref1", 
    "pw_gxiref1a", 
    "pw_gxiref1d", 
    "pw_gxiref1", 
    "wg_gxiref1", 
    "a_gxirefr", 
    "ia_gxirefr", 
    "pw_gxirefra", 
    "pw_gxirefrd", 
    "pw_gxirefr", 
    "wg_gxirefr", 
    "a_gy1", 
    "a_gy1a", 
    "a_gy1b", 
    "ia_gy1", 
    "ia_gy1wa", 
    "ia_gy1wb", 
    "pw_gy1a", 
    "pw_gy1d", 
    "pw_gy1", 
    "wg_gy1", 
    "a_gymn2", 
    "ia_gymn2", 
    "pw_gymn2a", 
    "pw_gymn2d", 
    "pw_gymn2", 
    "wg_gymn2", 
    "a_gymn1", 
    "ia_gymn1", 
    "pw_gymn1a", 
    "pw_gymn1d", 
    "pw_gymn1", 
    "wg_gymn1", 
    "a_gz1", 
    "ia_gz1", 
    "pw_gz1a", 
    "pw_gz1d", 
    "pw_gz1", 
    "wg_gz1", 
    "a_gzmn", 
    "ia_gzmn", 
    "pw_gzmna", 
    "pw_gzmnd", 
    "pw_gzmn", 
    "wg_gzmn", 
    "res_rf2se1", 
    "wg_rf2se1", 
    "a_gxdl1", 
    "ia_gxdl1", 
    "pw_gxdl1a", 
    "pw_gxdl1d", 
    "pw_gxdl1", 
    "wg_gxdl1", 
    "a_gxdr1", 
    "ia_gxdr1", 
    "pw_gxdr1a", 
    "pw_gxdr1d", 
    "pw_gxdr1", 
    "wg_gxdr1", 
    "a_gxdl2", 
    "ia_gxdl2", 
    "pw_gxdl2a", 
    "pw_gxdl2d", 
    "pw_gxdl2", 
    "wg_gxdl2", 
    "a_gxdr2", 
    "ia_gxdr2", 
    "pw_gxdr2a", 
    "pw_gxdr2d", 
    "pw_gxdr2", 
    "wg_gxdr2", 
    "a_gxk", 
    "ia_gxk", 
    "pw_gxka", 
    "pw_gxkd", 
    "pw_gxk", 
    "wg_gxk", 
    "a_gydl1", 
    "ia_gydl1", 
    "pw_gydl1a", 
    "pw_gydl1d", 
    "pw_gydl1", 
    "wg_gydl1", 
    "a_gydr1", 
    "ia_gydr1", 
    "pw_gydr1a", 
    "pw_gydr1d", 
    "pw_gydr1", 
    "wg_gydr1", 
    "a_gydl2", 
    "ia_gydl2", 
    "pw_gydl2a", 
    "pw_gydl2d", 
    "pw_gydl2", 
    "wg_gydl2", 
    "a_gydr2", 
    "ia_gydr2", 
    "pw_gydr2a", 
    "pw_gydr2d", 
    "pw_gydr2", 
    "wg_gydr2", 
    "a_gyk", 
    "ia_gyk", 
    "pw_gyka", 
    "pw_gykd", 
    "pw_gyk", 
    "wg_gyk", 
    "a_gzdl1", 
    "ia_gzdl1", 
    "pw_gzdl1a", 
    "pw_gzdl1d", 
    "pw_gzdl1", 
    "wg_gzdl1", 
    "a_gzdr1", 
    "ia_gzdr1", 
    "pw_gzdr1a", 
    "pw_gzdr1d", 
    "pw_gzdr1", 
    "wg_gzdr1", 
    "a_gzdl2", 
    "ia_gzdl2", 
    "pw_gzdl2a", 
    "pw_gzdl2d", 
    "pw_gzdl2", 
    "wg_gzdl2", 
    "a_gzdr2", 
    "ia_gzdr2", 
    "pw_gzdr2a", 
    "pw_gzdr2d", 
    "pw_gzdr2", 
    "wg_gzdr2", 
    "a_gzk", 
    "ia_gzk", 
    "pw_gzka", 
    "pw_gzkd", 
    "pw_gzk", 
    "wg_gzk", 
    "pw_wgx", 
    "wg_wgx", 
    "pw_wgy", 
    "wg_wgy", 
    "pw_wgz", 
    "wg_wgz", 
    "pw_wssp", 
    "wg_wssp", 
    "pw_sspdelay", 
    "wg_sspdelay", 
    "pw_omegadelay", 
    "wg_omegadelay", 
    "pw_womega", 
    "wg_womega", 
    "pw_sspshift", 
    "wg_sspshift", 
    "pw_ssp_pass_delay", 
    "wg_ssp_pass_delay", 
    "a_gzrf0", 
    "ia_gzrf0", 
    "pw_gzrf0a", 
    "pw_gzrf0d", 
    "pw_gzrf0", 
    "res_gzrf0", 
    "a_rf0", 
    "ia_rf0", 
    "pw_rf0", 
    "res_rf0", 
    "cyc_rf0", 
    "off_rf0", 
    "alpha_rf0", 
    "thk_rf0", 
    "gscale_rf0", 
    "flip_rf0", 
    "wg_rf0", 
    "a_omegarf0", 
    "ia_omegarf0", 
    "pw_omegarf0", 
    "res_omegarf0", 
    "off_omegarf0", 
    "rfslot_omegarf0", 
    "gscale_omegarf0", 
    "n_omegarf0", 
    "wg_omegarf0", 
    "a_gyk0", 
    "ia_gyk0", 
    "pw_gyk0a", 
    "pw_gyk0d", 
    "pw_gyk0", 
    "wg_gyk0", 
    "ia_bline_unblank", 
    "filter_blineacq1", 
    "res_rfcssat", 
    "wg_rfcssat", 
    "a_dbgxrfcssat", 
    "ia_dbgxrfcssat", 
    "pw_dbgxrfcssata", 
    "pw_dbgxrfcssatd", 
    "pw_dbgxrfcssat", 
    "wg_dbgxrfcssat", 
    "a_dbgyrfcssat", 
    "ia_dbgyrfcssat", 
    "pw_dbgyrfcssata", 
    "pw_dbgyrfcssatd", 
    "pw_dbgyrfcssat", 
    "wg_dbgyrfcssat", 
    "a_dbgzrfcssat", 
    "ia_dbgzrfcssat", 
    "pw_dbgzrfcssata", 
    "pw_dbgzrfcssatd", 
    "pw_dbgzrfcssat", 
    "wg_dbgzrfcssat", 
    "res_omega_hs_rfcssat", 
    "wg_omega_hs_rfcssat", 
    "a_gzrfcs", 
    "ia_gzrfcs", 
    "pw_gzrfcsa", 
    "pw_gzrfcsd", 
    "pw_gzrfcs", 
    "wg_gzrfcs", 
    "a_gykcs", 
    "ia_gykcs", 
    "pw_gykcsa", 
    "pw_gykcsd", 
    "pw_gykcs", 
    "wg_gykcs", 
    "a_gxkcs", 
    "ia_gxkcs", 
    "pw_gxkcsa", 
    "pw_gxkcsd", 
    "pw_gxkcs", 
    "wg_gxkcs", 
    "a_gzkcs", 
    "ia_gzkcs", 
    "pw_gzkcsa", 
    "pw_gzkcsd", 
    "pw_gzkcs", 
    "wg_gzkcs", 
    "pw_isi_cardiacsat", 
    "wg_isi_cardiacsat", 
    "pw_rot_update_cardiacsat", 
    "wg_rot_update_cardiacsat", 
    "a_gzrfse1", 
    "ia_gzrfse1", 
    "pw_gzrfse1a", 
    "pw_gzrfse1d", 
    "pw_gzrfse1", 
    "a_rfse1", 
    "ia_rfse1", 
    "pw_rfse1", 
    "res_rfse1", 
    "temp_res_rfse1", 
    "cyc_rfse1", 
    "off_rfse1", 
    "alpha_rfse1", 
    "thk_rfse1", 
    "gscale_rfse1", 
    "flip_rfse1", 
    "wg_rfse1", 
    "pw_isi_sate1", 
    "wg_isi_sate1", 
    "pw_rot_update_e1", 
    "wg_rot_update_e1", 
    "a_gykse1", 
    "ia_gykse1", 
    "pw_gykse1a", 
    "pw_gykse1d", 
    "pw_gykse1", 
    "wg_gykse1", 
    "a_gxkse1", 
    "ia_gxkse1", 
    "pw_gxkse1a", 
    "pw_gxkse1d", 
    "pw_gxkse1", 
    "wg_gxkse1", 
    "pw_isi_satek1", 
    "wg_isi_satek1", 
    "pw_rot_update_ek1", 
    "wg_rot_update_ek1", 
    "a_gzrfse2", 
    "ia_gzrfse2", 
    "pw_gzrfse2a", 
    "pw_gzrfse2d", 
    "pw_gzrfse2", 
    "a_rfse2", 
    "ia_rfse2", 
    "pw_rfse2", 
    "res_rfse2", 
    "temp_res_rfse2", 
    "cyc_rfse2", 
    "off_rfse2", 
    "alpha_rfse2", 
    "thk_rfse2", 
    "gscale_rfse2", 
    "flip_rfse2", 
    "wg_rfse2", 
    "pw_isi_sate2", 
    "wg_isi_sate2", 
    "pw_rot_update_e2", 
    "wg_rot_update_e2", 
    "a_gykse2", 
    "ia_gykse2", 
    "pw_gykse2a", 
    "pw_gykse2d", 
    "pw_gykse2", 
    "wg_gykse2", 
    "a_gxkse2", 
    "ia_gxkse2", 
    "pw_gxkse2a", 
    "pw_gxkse2d", 
    "pw_gxkse2", 
    "wg_gxkse2", 
    "pw_isi_satek2", 
    "wg_isi_satek2", 
    "pw_rot_update_ek2", 
    "wg_rot_update_ek2", 
    "a_gzrfse3", 
    "ia_gzrfse3", 
    "pw_gzrfse3a", 
    "pw_gzrfse3d", 
    "pw_gzrfse3", 
    "a_rfse3", 
    "ia_rfse3", 
    "pw_rfse3", 
    "res_rfse3", 
    "temp_res_rfse3", 
    "cyc_rfse3", 
    "off_rfse3", 
    "alpha_rfse3", 
    "thk_rfse3", 
    "gscale_rfse3", 
    "flip_rfse3", 
    "wg_rfse3", 
    "pw_isi_sate3", 
    "wg_isi_sate3", 
    "pw_rot_update_e3", 
    "wg_rot_update_e3", 
    "a_gykse3", 
    "ia_gykse3", 
    "pw_gykse3a", 
    "pw_gykse3d", 
    "pw_gykse3", 
    "wg_gykse3", 
    "a_gxkse3", 
    "ia_gxkse3", 
    "pw_gxkse3a", 
    "pw_gxkse3d", 
    "pw_gxkse3", 
    "wg_gxkse3", 
    "pw_isi_satek3", 
    "wg_isi_satek3", 
    "pw_rot_update_ek3", 
    "wg_rot_update_ek3", 
    "a_gzrfse4", 
    "ia_gzrfse4", 
    "pw_gzrfse4a", 
    "pw_gzrfse4d", 
    "pw_gzrfse4", 
    "a_rfse4", 
    "ia_rfse4", 
    "pw_rfse4", 
    "res_rfse4", 
    "temp_res_rfse4", 
    "cyc_rfse4", 
    "off_rfse4", 
    "alpha_rfse4", 
    "thk_rfse4", 
    "gscale_rfse4", 
    "flip_rfse4", 
    "wg_rfse4", 
    "pw_isi_sate4", 
    "wg_isi_sate4", 
    "pw_rot_update_e4", 
    "wg_rot_update_e4", 
    "a_gykse4", 
    "ia_gykse4", 
    "pw_gykse4a", 
    "pw_gykse4d", 
    "pw_gykse4", 
    "wg_gykse4", 
    "a_gxkse4", 
    "ia_gxkse4", 
    "pw_gxkse4a", 
    "pw_gxkse4d", 
    "pw_gxkse4", 
    "wg_gxkse4", 
    "pw_isi_satek4", 
    "wg_isi_satek4", 
    "pw_rot_update_ek4", 
    "wg_rot_update_ek4", 
    "a_gzrfse5", 
    "ia_gzrfse5", 
    "pw_gzrfse5a", 
    "pw_gzrfse5d", 
    "pw_gzrfse5", 
    "a_rfse5", 
    "ia_rfse5", 
    "pw_rfse5", 
    "res_rfse5", 
    "temp_res_rfse5", 
    "cyc_rfse5", 
    "off_rfse5", 
    "alpha_rfse5", 
    "thk_rfse5", 
    "gscale_rfse5", 
    "flip_rfse5", 
    "wg_rfse5", 
    "pw_isi_sate5", 
    "wg_isi_sate5", 
    "pw_rot_update_e5", 
    "wg_rot_update_e5", 
    "a_gykse5", 
    "ia_gykse5", 
    "pw_gykse5a", 
    "pw_gykse5d", 
    "pw_gykse5", 
    "wg_gykse5", 
    "a_gxkse5", 
    "ia_gxkse5", 
    "pw_gxkse5a", 
    "pw_gxkse5d", 
    "pw_gxkse5", 
    "wg_gxkse5", 
    "pw_isi_satek5", 
    "wg_isi_satek5", 
    "pw_rot_update_ek5", 
    "wg_rot_update_ek5", 
    "a_gzrfse6", 
    "ia_gzrfse6", 
    "pw_gzrfse6a", 
    "pw_gzrfse6d", 
    "pw_gzrfse6", 
    "a_rfse6", 
    "ia_rfse6", 
    "pw_rfse6", 
    "res_rfse6", 
    "temp_res_rfse6", 
    "cyc_rfse6", 
    "off_rfse6", 
    "alpha_rfse6", 
    "thk_rfse6", 
    "gscale_rfse6", 
    "flip_rfse6", 
    "wg_rfse6", 
    "pw_isi_sate6", 
    "wg_isi_sate6", 
    "pw_rot_update_e6", 
    "wg_rot_update_e6", 
    "a_gykse6", 
    "ia_gykse6", 
    "pw_gykse6a", 
    "pw_gykse6d", 
    "pw_gykse6", 
    "wg_gykse6", 
    "a_gxkse6", 
    "ia_gxkse6", 
    "pw_gxkse6a", 
    "pw_gxkse6d", 
    "pw_gxkse6", 
    "wg_gxkse6", 
    "pw_isi_satek6", 
    "wg_isi_satek6", 
    "pw_rot_update_ek6", 
    "wg_rot_update_ek6", 
    "a_gxrfsx1", 
    "ia_gxrfsx1", 
    "pw_gxrfsx1a", 
    "pw_gxrfsx1d", 
    "pw_gxrfsx1", 
    "a_rfsx1", 
    "ia_rfsx1", 
    "pw_rfsx1", 
    "res_rfsx1", 
    "temp_res_rfsx1", 
    "cyc_rfsx1", 
    "off_rfsx1", 
    "alpha_rfsx1", 
    "gscale_rfsx1", 
    "thk_rfsx1", 
    "flip_rfsx1", 
    "wg_rfsx1", 
    "pw_isi_satx1", 
    "wg_isi_satx1", 
    "pw_rot_update_x1", 
    "wg_rot_update_x1", 
    "a_gyksx1", 
    "ia_gyksx1", 
    "pw_gyksx1a", 
    "pw_gyksx1d", 
    "pw_gyksx1", 
    "wg_gyksx1", 
    "a_gxksx1", 
    "ia_gxksx1", 
    "pw_gxksx1a", 
    "pw_gxksx1d", 
    "pw_gxksx1", 
    "wg_gxksx1", 
    "pw_isi_satxk1", 
    "wg_isi_satxk1", 
    "pw_rot_update_xk1", 
    "wg_rot_update_xk1", 
    "a_gxrfsx2", 
    "ia_gxrfsx2", 
    "pw_gxrfsx2a", 
    "pw_gxrfsx2d", 
    "pw_gxrfsx2", 
    "a_rfsx2", 
    "ia_rfsx2", 
    "pw_rfsx2", 
    "res_rfsx2", 
    "temp_res_rfsx2", 
    "cyc_rfsx2", 
    "off_rfsx2", 
    "alpha_rfsx2", 
    "gscale_rfsx2", 
    "thk_rfsx2", 
    "flip_rfsx2", 
    "wg_rfsx2", 
    "pw_isi_satx2", 
    "wg_isi_satx2", 
    "pw_rot_update_x2", 
    "wg_rot_update_x2", 
    "a_gyksx2", 
    "ia_gyksx2", 
    "pw_gyksx2a", 
    "pw_gyksx2d", 
    "pw_gyksx2", 
    "wg_gyksx2", 
    "a_gxksx2", 
    "ia_gxksx2", 
    "pw_gxksx2a", 
    "pw_gxksx2d", 
    "pw_gxksx2", 
    "wg_gxksx2", 
    "pw_isi_satxk2", 
    "wg_isi_satxk2", 
    "pw_rot_update_xk2", 
    "wg_rot_update_xk2", 
    "a_gyrfsy1", 
    "ia_gyrfsy1", 
    "pw_gyrfsy1a", 
    "pw_gyrfsy1d", 
    "pw_gyrfsy1", 
    "a_rfsy1", 
    "ia_rfsy1", 
    "pw_rfsy1", 
    "res_rfsy1", 
    "temp_res_rfsy1", 
    "cyc_rfsy1", 
    "off_rfsy1", 
    "alpha_rfsy1", 
    "thk_rfsy1", 
    "gscale_rfsy1", 
    "flip_rfsy1", 
    "wg_rfsy1", 
    "pw_isi_saty1", 
    "wg_isi_saty1", 
    "pw_rot_update_y1", 
    "wg_rot_update_y1", 
    "a_gyksy1", 
    "ia_gyksy1", 
    "pw_gyksy1a", 
    "pw_gyksy1d", 
    "pw_gyksy1", 
    "wg_gyksy1", 
    "a_gxksy1", 
    "ia_gxksy1", 
    "pw_gxksy1a", 
    "pw_gxksy1d", 
    "pw_gxksy1", 
    "wg_gxksy1", 
    "pw_isi_satyk1", 
    "wg_isi_satyk1", 
    "pw_rot_update_yk1", 
    "wg_rot_update_yk1", 
    "a_gyrfsy2", 
    "ia_gyrfsy2", 
    "pw_gyrfsy2a", 
    "pw_gyrfsy2d", 
    "pw_gyrfsy2", 
    "a_rfsy2", 
    "ia_rfsy2", 
    "pw_rfsy2", 
    "res_rfsy2", 
    "temp_res_rfsy2", 
    "cyc_rfsy2", 
    "off_rfsy2", 
    "alpha_rfsy2", 
    "thk_rfsy2", 
    "gscale_rfsy2", 
    "flip_rfsy2", 
    "wg_rfsy2", 
    "pw_isi_saty2", 
    "wg_isi_saty2", 
    "pw_rot_update_y2", 
    "wg_rot_update_y2", 
    "a_gyksy2", 
    "ia_gyksy2", 
    "pw_gyksy2a", 
    "pw_gyksy2d", 
    "pw_gyksy2", 
    "wg_gyksy2", 
    "a_gxksy2", 
    "ia_gxksy2", 
    "pw_gxksy2a", 
    "pw_gxksy2d", 
    "pw_gxksy2", 
    "wg_gxksy2", 
    "pw_isi_satyk2", 
    "wg_isi_satyk2", 
    "pw_rot_update_yk2", 
    "wg_rot_update_yk2", 
    "a_gzrfsz1", 
    "ia_gzrfsz1", 
    "pw_gzrfsz1a", 
    "pw_gzrfsz1d", 
    "pw_gzrfsz1", 
    "a_rfsz1", 
    "ia_rfsz1", 
    "pw_rfsz1", 
    "res_rfsz1", 
    "temp_res_rfsz1", 
    "cyc_rfsz1", 
    "off_rfsz1", 
    "alpha_rfsz1", 
    "thk_rfsz1", 
    "gscale_rfsz1", 
    "flip_rfsz1", 
    "wg_rfsz1", 
    "pw_isi_satz1", 
    "wg_isi_satz1", 
    "pw_rot_update_z1", 
    "wg_rot_update_z1", 
    "a_gyksz1", 
    "ia_gyksz1", 
    "pw_gyksz1a", 
    "pw_gyksz1d", 
    "pw_gyksz1", 
    "wg_gyksz1", 
    "a_gxksz1", 
    "ia_gxksz1", 
    "pw_gxksz1a", 
    "pw_gxksz1d", 
    "pw_gxksz1", 
    "wg_gxksz1", 
    "pw_isi_satzk1", 
    "wg_isi_satzk1", 
    "pw_rot_update_zk1", 
    "wg_rot_update_zk1", 
    "a_gzrfsz2", 
    "ia_gzrfsz2", 
    "pw_gzrfsz2a", 
    "pw_gzrfsz2d", 
    "pw_gzrfsz2", 
    "a_rfsz2", 
    "ia_rfsz2", 
    "pw_rfsz2", 
    "res_rfsz2", 
    "temp_res_rfsz2", 
    "cyc_rfsz2", 
    "off_rfsz2", 
    "alpha_rfsz2", 
    "thk_rfsz2", 
    "gscale_rfsz2", 
    "flip_rfsz2", 
    "wg_rfsz2", 
    "pw_isi_satz2", 
    "wg_isi_satz2", 
    "pw_rot_update_z2", 
    "wg_rot_update_z2", 
    "a_gyksz2", 
    "ia_gyksz2", 
    "pw_gyksz2a", 
    "pw_gyksz2d", 
    "pw_gyksz2", 
    "wg_gyksz2", 
    "a_gxksz2", 
    "ia_gxksz2", 
    "pw_gxksz2a", 
    "pw_gxksz2d", 
    "pw_gxksz2", 
    "wg_gxksz2", 
    "pw_isi_satzk2", 
    "wg_isi_satzk2", 
    "pw_rot_update_zk2", 
    "wg_rot_update_zk2", 
    "pw_y_ccs_null", 
    "wg_y_ccs_null", 
    "a_rf1mps1", 
    "ia_rf1mps1", 
    "pw_rf1mps1", 
    "res_rf1mps1", 
    "cyc_rf1mps1", 
    "off_rf1mps1", 
    "alpha_rf1mps1", 
    "wg_rf1mps1", 
    "a_gyrf1mps1", 
    "ia_gyrf1mps1", 
    "pw_gyrf1mps1a", 
    "pw_gyrf1mps1d", 
    "pw_gyrf1mps1", 
    "wg_gyrf1mps1", 
    "a_gy1mps1", 
    "ia_gy1mps1", 
    "pw_gy1mps1a", 
    "pw_gy1mps1d", 
    "pw_gy1mps1", 
    "wg_gy1mps1", 
    "a_gzrf1mps1", 
    "ia_gzrf1mps1", 
    "pw_gzrf1mps1a", 
    "pw_gzrf1mps1d", 
    "pw_gzrf1mps1", 
    "wg_gzrf1mps1", 
    "a_gz1mps1", 
    "ia_gz1mps1", 
    "pw_gz1mps1a", 
    "pw_gz1mps1d", 
    "pw_gz1mps1", 
    "wg_gz1mps1", 
    "a_gx1mps1", 
    "ia_gx1mps1", 
    "pw_gx1mps1a", 
    "pw_gx1mps1d", 
    "pw_gx1mps1", 
    "wg_gx1mps1", 
    "a_gzrf2mps1", 
    "ia_gzrf2mps1", 
    "pw_gzrf2mps1a", 
    "pw_gzrf2mps1d", 
    "pw_gzrf2mps1", 
    "a_rf2mps1", 
    "ia_rf2mps1", 
    "pw_rf2mps1", 
    "res_rf2mps1", 
    "temp_res_rf2mps1", 
    "cyc_rf2mps1", 
    "off_rf2mps1", 
    "alpha_rf2mps1", 
    "thk_rf2mps1", 
    "gscale_rf2mps1", 
    "flip_rf2mps1", 
    "wg_rf2mps1", 
    "a_gzrf2lmps1", 
    "ia_gzrf2lmps1", 
    "pw_gzrf2lmps1a", 
    "pw_gzrf2lmps1d", 
    "pw_gzrf2lmps1", 
    "wg_gzrf2lmps1", 
    "a_gzrf2rmps1", 
    "ia_gzrf2rmps1", 
    "pw_gzrf2rmps1a", 
    "pw_gzrf2rmps1d", 
    "pw_gzrf2rmps1", 
    "wg_gzrf2rmps1", 
    "a_gxwmps1", 
    "ia_gxwmps1", 
    "pw_gxwmps1a", 
    "pw_gxwmps1d", 
    "pw_gxwmps1", 
    "wg_gxwmps1", 
    "filter_echo1mps1", 
    "a_gzrf1cfl", 
    "ia_gzrf1cfl", 
    "pw_gzrf1cfla", 
    "pw_gzrf1cfld", 
    "pw_gzrf1cfl", 
    "a_rf1cfl", 
    "ia_rf1cfl", 
    "pw_rf1cfl", 
    "res_rf1cfl", 
    "temp_res_rf1cfl", 
    "cyc_rf1cfl", 
    "off_rf1cfl", 
    "alpha_rf1cfl", 
    "thk_rf1cfl", 
    "gscale_rf1cfl", 
    "flip_rf1cfl", 
    "wg_rf1cfl", 
    "a_gz1cfl", 
    "ia_gz1cfl", 
    "pw_gz1cfla", 
    "pw_gz1cfld", 
    "pw_gz1cfl", 
    "wg_gz1cfl", 
    "filter_cfl_fid", 
    "a_gykcfl", 
    "ia_gykcfl", 
    "pw_gykcfla", 
    "pw_gykcfld", 
    "pw_gykcfl", 
    "wg_gykcfl", 
    "a_gxkrcvn", 
    "ia_gxkrcvn", 
    "pw_gxkrcvna", 
    "pw_gxkrcvnd", 
    "pw_gxkrcvn", 
    "wg_gxkrcvn", 
    "a_gykrcvn", 
    "ia_gykrcvn", 
    "pw_gykrcvna", 
    "pw_gykrcvnd", 
    "pw_gykrcvn", 
    "wg_gykrcvn", 
    "a_gzkrcvn", 
    "ia_gzkrcvn", 
    "pw_gzkrcvna", 
    "pw_gzkrcvnd", 
    "pw_gzkrcvn", 
    "wg_gzkrcvn", 
    "pw_grd_trig", 
    "wg_grd_trig", 
    "a_gxk2rcvn", 
    "ia_gxk2rcvn", 
    "pw_gxk2rcvna", 
    "pw_gxk2rcvnd", 
    "pw_gxk2rcvn", 
    "wg_gxk2rcvn", 
    "a_gyk2rcvn", 
    "ia_gyk2rcvn", 
    "pw_gyk2rcvna", 
    "pw_gyk2rcvnd", 
    "pw_gyk2rcvn", 
    "wg_gyk2rcvn", 
    "a_gzk2rcvn", 
    "ia_gzk2rcvn", 
    "pw_gzk2rcvna", 
    "pw_gzk2rcvnd", 
    "pw_gzk2rcvn", 
    "wg_gzk2rcvn", 
    "pw_rcvn_wait", 
    "wg_rcvn_wait", 
    "ia_rcvrbl", 
    "filter_rcvn_fid", 
    "ia_rcvrbl2", 
    "a_gzrf0cfh", 
    "ia_gzrf0cfh", 
    "pw_gzrf0cfha", 
    "pw_gzrf0cfhd", 
    "pw_gzrf0cfh", 
    "res_gzrf0cfh", 
    "a_rf0cfh", 
    "ia_rf0cfh", 
    "pw_rf0cfh", 
    "res_rf0cfh", 
    "cyc_rf0cfh", 
    "off_rf0cfh", 
    "alpha_rf0cfh", 
    "thk_rf0cfh", 
    "gscale_rf0cfh", 
    "flip_rf0cfh", 
    "wg_rf0cfh", 
    "a_omegarf0cfh", 
    "ia_omegarf0cfh", 
    "pw_omegarf0cfh", 
    "res_omegarf0cfh", 
    "off_omegarf0cfh", 
    "rfslot_omegarf0cfh", 
    "gscale_omegarf0cfh", 
    "n_omegarf0cfh", 
    "wg_omegarf0cfh", 
    "a_gyrf0kcfh", 
    "ia_gyrf0kcfh", 
    "pw_gyrf0kcfha", 
    "pw_gyrf0kcfhd", 
    "pw_gyrf0kcfh", 
    "wg_gyrf0kcfh", 
    "pw_zticfh", 
    "wg_zticfh", 
    "pw_rticfh", 
    "wg_rticfh", 
    "pw_xticfh", 
    "wg_xticfh", 
    "pw_yticfh", 
    "wg_yticfh", 
    "pw_sticfh", 
    "wg_sticfh", 
    "a_gzrf1cfh", 
    "ia_gzrf1cfh", 
    "pw_gzrf1cfha", 
    "pw_gzrf1cfhd", 
    "pw_gzrf1cfh", 
    "a_rf1cfh", 
    "ia_rf1cfh", 
    "pw_rf1cfh", 
    "res_rf1cfh", 
    "temp_res_rf1cfh", 
    "cyc_rf1cfh", 
    "off_rf1cfh", 
    "alpha_rf1cfh", 
    "thk_rf1cfh", 
    "gscale_rf1cfh", 
    "flip_rf1cfh", 
    "wg_rf1cfh", 
    "a_rf2cfh", 
    "ia_rf2cfh", 
    "pw_rf2cfh", 
    "res_rf2cfh", 
    "cyc_rf2cfh", 
    "off_rf2cfh", 
    "alpha_rf2cfh", 
    "wg_rf2cfh", 
    "a_rf3cfh", 
    "ia_rf3cfh", 
    "pw_rf3cfh", 
    "res_rf3cfh", 
    "cyc_rf3cfh", 
    "off_rf3cfh", 
    "alpha_rf3cfh", 
    "wg_rf3cfh", 
    "a_rf4cfh", 
    "ia_rf4cfh", 
    "pw_rf4cfh", 
    "res_rf4cfh", 
    "cyc_rf4cfh", 
    "off_rf4cfh", 
    "alpha_rf4cfh", 
    "wg_rf4cfh", 
    "a_gxrf2cfh", 
    "ia_gxrf2cfh", 
    "pw_gxrf2cfha", 
    "pw_gxrf2cfhd", 
    "pw_gxrf2cfh", 
    "wg_gxrf2cfh", 
    "a_gyrf2cfh", 
    "ia_gyrf2cfh", 
    "pw_gyrf2cfha", 
    "pw_gyrf2cfhd", 
    "pw_gyrf2cfh", 
    "wg_gyrf2cfh", 
    "a_gzrf2lcfh", 
    "ia_gzrf2lcfh", 
    "pw_gzrf2lcfha", 
    "pw_gzrf2lcfhd", 
    "pw_gzrf2lcfh", 
    "wg_gzrf2lcfh", 
    "a_gzrf2rcfh", 
    "ia_gzrf2rcfh", 
    "pw_gzrf2rcfha", 
    "pw_gzrf2rcfhd", 
    "pw_gzrf2rcfh", 
    "wg_gzrf2rcfh", 
    "a_gyrf3cfh", 
    "ia_gyrf3cfh", 
    "pw_gyrf3cfha", 
    "pw_gyrf3cfhd", 
    "pw_gyrf3cfh", 
    "wg_gyrf3cfh", 
    "a_gzrf3lcfh", 
    "ia_gzrf3lcfh", 
    "pw_gzrf3lcfha", 
    "pw_gzrf3lcfhd", 
    "pw_gzrf3lcfh", 
    "wg_gzrf3lcfh", 
    "a_gzrf3rcfh", 
    "ia_gzrf3rcfh", 
    "pw_gzrf3rcfha", 
    "pw_gzrf3rcfhd", 
    "pw_gzrf3rcfh", 
    "wg_gzrf3rcfh", 
    "a_gy1cfh", 
    "ia_gy1cfh", 
    "pw_gy1cfha", 
    "pw_gy1cfhd", 
    "pw_gy1cfh", 
    "wg_gy1cfh", 
    "a_gx1cfh", 
    "ia_gx1cfh", 
    "pw_gx1cfha", 
    "pw_gx1cfhd", 
    "pw_gx1cfh", 
    "wg_gx1cfh", 
    "a_gzrf4cfh", 
    "ia_gzrf4cfh", 
    "pw_gzrf4cfha", 
    "pw_gzrf4cfhd", 
    "pw_gzrf4cfh", 
    "wg_gzrf4cfh", 
    "pw_isi_slice1", 
    "wg_isi_slice1", 
    "pw_rot_slice1", 
    "wg_rot_slice1", 
    "pw_isi_slice2", 
    "wg_isi_slice2", 
    "pw_rot_slice2", 
    "wg_rot_slice2", 
    "a_gzrf4lcfh", 
    "ia_gzrf4lcfh", 
    "pw_gzrf4lcfha", 
    "pw_gzrf4lcfhd", 
    "pw_gzrf4lcfh", 
    "wg_gzrf4lcfh", 
    "a_gzrf4rcfh", 
    "ia_gzrf4rcfh", 
    "pw_gzrf4rcfha", 
    "pw_gzrf4rcfhd", 
    "pw_gzrf4rcfh", 
    "wg_gzrf4rcfh", 
    "filter_cfh_fid", 
    "a_gykcfh", 
    "ia_gykcfh", 
    "pw_gykcfha", 
    "pw_gykcfhd", 
    "pw_gykcfh", 
    "wg_gykcfh", 
    "ia_contrfhubsel", 
    "ia_contrfsel", 
    "pw_csw_wait", 
    "wg_csw_wait", 
    "a_gzrf1ftg", 
    "ia_gzrf1ftg", 
    "pw_gzrf1ftga", 
    "pw_gzrf1ftgd", 
    "pw_gzrf1ftg", 
    "a_rf1ftg", 
    "ia_rf1ftg", 
    "pw_rf1ftg", 
    "res_rf1ftg", 
    "temp_res_rf1ftg", 
    "cyc_rf1ftg", 
    "off_rf1ftg", 
    "alpha_rf1ftg", 
    "thk_rf1ftg", 
    "gscale_rf1ftg", 
    "flip_rf1ftg", 
    "wg_rf1ftg", 
    "a_gz1ftg", 
    "ia_gz1ftg", 
    "pw_gz1ftga", 
    "pw_gz1ftgd", 
    "pw_gz1ftg", 
    "wg_gz1ftg", 
    "a_gzrf2ftg", 
    "ia_gzrf2ftg", 
    "pw_gzrf2ftga", 
    "pw_gzrf2ftgd", 
    "pw_gzrf2ftg", 
    "a_rf2ftg", 
    "ia_rf2ftg", 
    "pw_rf2ftg", 
    "res_rf2ftg", 
    "temp_res_rf2ftg", 
    "cyc_rf2ftg", 
    "off_rf2ftg", 
    "alpha_rf2ftg", 
    "thk_rf2ftg", 
    "gscale_rf2ftg", 
    "flip_rf2ftg", 
    "wg_rf2ftg", 
    "a_gz2ftg", 
    "ia_gz2ftg", 
    "pw_gz2ftga", 
    "pw_gz2ftgd", 
    "pw_gz2ftg", 
    "wg_gz2ftg", 
    "a_gzrf3ftg", 
    "ia_gzrf3ftg", 
    "pw_gzrf3ftga", 
    "pw_gzrf3ftgd", 
    "pw_gzrf3ftg", 
    "a_rf3ftg", 
    "ia_rf3ftg", 
    "pw_rf3ftg", 
    "res_rf3ftg", 
    "temp_res_rf3ftg", 
    "cyc_rf3ftg", 
    "off_rf3ftg", 
    "alpha_rf3ftg", 
    "thk_rf3ftg", 
    "gscale_rf3ftg", 
    "flip_rf3ftg", 
    "wg_rf3ftg", 
    "a_gz3ftg", 
    "ia_gz3ftg", 
    "pw_gz3ftga", 
    "pw_gz3ftgd", 
    "pw_gz3ftg", 
    "wg_gz3ftg", 
    "a_gx1ftg", 
    "ia_gx1ftg", 
    "pw_gx1ftga", 
    "pw_gx1ftgd", 
    "pw_gx1ftg", 
    "wg_gx1ftg", 
    "a_gx1bftg", 
    "ia_gx1bftg", 
    "pw_gx1bftga", 
    "pw_gx1bftgd", 
    "pw_gx1bftg", 
    "wg_gx1bftg", 
    "a_gxw1ftg", 
    "ia_gxw1ftg", 
    "pw_gxw1ftga", 
    "pw_gxw1ftgd", 
    "pw_gxw1ftg", 
    "wg_gxw1ftg", 
    "a_postgxw1ftg", 
    "ia_postgxw1ftg", 
    "pw_postgxw1ftga", 
    "pw_postgxw1ftgd", 
    "pw_postgxw1ftg", 
    "wg_postgxw1ftg", 
    "filter_echo1ftg", 
    "a_gz2bftg", 
    "ia_gz2bftg", 
    "pw_gz2bftga", 
    "pw_gz2bftgd", 
    "pw_gz2bftg", 
    "wg_gz2bftg", 
    "a_gx2ftg", 
    "ia_gx2ftg", 
    "pw_gx2ftga", 
    "pw_gx2ftgd", 
    "pw_gx2ftg", 
    "wg_gx2ftg", 
    "a_gxw2ftg", 
    "ia_gxw2ftg", 
    "pw_gxw2ftga", 
    "pw_gxw2ftgd", 
    "pw_gxw2ftg", 
    "wg_gxw2ftg", 
    "a_gx2test", 
    "ia_gx2test", 
    "pw_gx2testa", 
    "pw_gx2testd", 
    "pw_gx2test", 
    "wg_gx2test", 
    "filter_echo2ftg", 
    "a_rf1xtg", 
    "ia_rf1xtg", 
    "pw_rf1xtg", 
    "res_rf1xtg", 
    "cyc_rf1xtg", 
    "off_rf1xtg", 
    "alpha_rf1xtg", 
    "wg_rf1xtg", 
    "a_gyrf1xtg", 
    "ia_gyrf1xtg", 
    "pw_gyrf1xtga", 
    "pw_gyrf1xtgd", 
    "pw_gyrf1xtg", 
    "wg_gyrf1xtg", 
    "a_gzrf1xtg", 
    "ia_gzrf1xtg", 
    "pw_gzrf1xtga", 
    "pw_gzrf1xtgd", 
    "pw_gzrf1xtg", 
    "wg_gzrf1xtg", 
    "a_gykxtgl", 
    "ia_gykxtgl", 
    "pw_gykxtgla", 
    "pw_gykxtgld", 
    "pw_gykxtgl", 
    "wg_gykxtgl", 
    "a_rf3xtg", 
    "ia_rf3xtg", 
    "pw_rf3xtg", 
    "res_rf3xtg", 
    "off_rf3xtg", 
    "alpha_rf3xtg", 
    "gscale_rf3xtg", 
    "flip_rf3xtg", 
    "ia_phs_rf3xtg", 
    "wg_rf3xtg", 
    "a_gz1xtg", 
    "ia_gz1xtg", 
    "pw_gz1xtga", 
    "pw_gz1xtgd", 
    "pw_gz1xtg", 
    "wg_gz1xtg", 
    "a_gzrf2xtg", 
    "ia_gzrf2xtg", 
    "pw_gzrf2xtga", 
    "pw_gzrf2xtgd", 
    "pw_gzrf2xtg", 
    "a_rf2xtg", 
    "ia_rf2xtg", 
    "pw_rf2xtg", 
    "res_rf2xtg", 
    "temp_res_rf2xtg", 
    "cyc_rf2xtg", 
    "off_rf2xtg", 
    "alpha_rf2xtg", 
    "thk_rf2xtg", 
    "gscale_rf2xtg", 
    "flip_rf2xtg", 
    "wg_rf2xtg", 
    "a_gz2xtg", 
    "ia_gz2xtg", 
    "pw_gz2xtga", 
    "pw_gz2xtgd", 
    "pw_gz2xtg", 
    "wg_gz2xtg", 
    "a_rf4xtg", 
    "ia_rf4xtg", 
    "pw_rf4xtg", 
    "res_rf4xtg", 
    "off_rf4xtg", 
    "alpha_rf4xtg", 
    "gscale_rf4xtg", 
    "flip_rf4xtg", 
    "ia_phs_rf4xtg", 
    "wg_rf4xtg", 
    "a_gykxtgr", 
    "ia_gykxtgr", 
    "pw_gykxtgra", 
    "pw_gykxtgrd", 
    "pw_gykxtgr", 
    "wg_gykxtgr", 
    "a_gx1bxtg", 
    "ia_gx1bxtg", 
    "pw_gx1bxtga", 
    "pw_gx1bxtgd", 
    "pw_gx1bxtg", 
    "wg_gx1bxtg", 
    "a_gxw1xtg", 
    "ia_gxw1xtg", 
    "pw_gxw1xtga", 
    "pw_gxw1xtgd", 
    "pw_gxw1xtg", 
    "wg_gxw1xtg", 
    "filter_echo1xtg", 
    "a_gzrf1as", 
    "ia_gzrf1as", 
    "pw_gzrf1asa", 
    "pw_gzrf1asd", 
    "pw_gzrf1as", 
    "a_rf1as", 
    "ia_rf1as", 
    "pw_rf1as", 
    "res_rf1as", 
    "temp_res_rf1as", 
    "cyc_rf1as", 
    "off_rf1as", 
    "alpha_rf1as", 
    "thk_rf1as", 
    "gscale_rf1as", 
    "flip_rf1as", 
    "wg_rf1as", 
    "a_gz1as", 
    "ia_gz1as", 
    "pw_gz1asa", 
    "pw_gz1asd", 
    "pw_gz1as", 
    "wg_gz1as", 
    "a_gxwas", 
    "ia_gxwas", 
    "pw_gxwasa", 
    "pw_gxwasd", 
    "pw_gxwas", 
    "wg_gxwas", 
    "filter_echo1as", 
    "a_gx1as", 
    "ia_gx1as", 
    "pw_gx1asa", 
    "pw_gx1asd", 
    "pw_gx1as", 
    "wg_gx1as", 
    "a_gy1as", 
    "a_gy1asa", 
    "a_gy1asb", 
    "ia_gy1as", 
    "ia_gy1aswa", 
    "ia_gy1aswb", 
    "pw_gy1asa", 
    "pw_gy1asd", 
    "pw_gy1as", 
    "wg_gy1as", 
    "a_gy1ras", 
    "a_gy1rasa", 
    "a_gy1rasb", 
    "ia_gy1ras", 
    "ia_gy1raswa", 
    "ia_gy1raswb", 
    "pw_gy1rasa", 
    "pw_gy1rasd", 
    "pw_gy1ras", 
    "wg_gy1ras", 
    "a_gxkas", 
    "ia_gxkas", 
    "pw_gxkasa", 
    "pw_gxkasd", 
    "pw_gxkas", 
    "wg_gxkas", 
    "a_gzkas", 
    "ia_gzkas", 
    "pw_gzkasa", 
    "pw_gzkasd", 
    "pw_gzkas", 
    "wg_gzkas", 
    "a_xdixon", 
    "ia_xdixon", 
    "pw_xdixon", 
    "wg_xdixon", 
    "a_ydixon", 
    "ia_ydixon", 
    "pw_ydixon", 
    "wg_ydixon", 
    "a_zdixon", 
    "ia_zdixon", 
    "pw_zdixon", 
    "wg_zdixon", 
    "a_sdixon", 
    "ia_sdixon", 
    "pw_sdixon", 
    "wg_sdixon", 
    "a_sdixon2", 
    "ia_sdixon2", 
    "pw_sdixon2", 
    "wg_sdixon2", 
    "ia_dDDIQ", 
    "res_rf1rs", 
    "wg_rf1rs", 
    "a_gzrf1rs", 
    "ia_gzrf1rs", 
    "pw_gzrf1rsa", 
    "pw_gzrf1rsd", 
    "pw_gzrf1rs", 
    "wg_gzrf1rs", 
    "a_gxkbsrs", 
    "ia_gxkbsrs", 
    "pw_gxkbsrsa", 
    "pw_gxkbsrsd", 
    "pw_gxkbsrs", 
    "wg_gxkbsrs", 
    "a_gz1rs", 
    "ia_gz1rs", 
    "pw_gz1rsa", 
    "pw_gz1rsd", 
    "pw_gz1rs", 
    "wg_gz1rs", 
    "a_rfbrs", 
    "ia_rfbrs", 
    "pw_rfbrs", 
    "res_rfbrs", 
    "off_rfbrs", 
    "rfslot_rfbrs", 
    "gscale_rfbrs", 
    "n_rfbrs", 
    "wg_rfbrs", 
    "a_thetarfbrs", 
    "ia_thetarfbrs", 
    "pw_thetarfbrs", 
    "res_thetarfbrs", 
    "off_thetarfbrs", 
    "rfslot_thetarfbrs", 
    "gscale_thetarfbrs", 
    "n_thetarfbrs", 
    "wg_thetarfbrs", 
    "a_gzkbsrs", 
    "ia_gzkbsrs", 
    "pw_gzkbsrsa", 
    "pw_gzkbsrsd", 
    "pw_gzkbsrs", 
    "wg_gzkbsrs", 
    "a_gxwrs", 
    "ia_gxwrs", 
    "pw_gxwrsa", 
    "pw_gxwrsd", 
    "pw_gxwrs", 
    "wg_gxwrs", 
    "filter_echo1rs", 
    "a_gx2rs", 
    "ia_gx2rs", 
    "pw_gx2rsa", 
    "pw_gx2rsd", 
    "pw_gx2rs", 
    "wg_gx2rs", 
    "a_gy2rs", 
    "a_gy2rsa", 
    "a_gy2rsb", 
    "ia_gy2rs", 
    "ia_gy2rswa", 
    "ia_gy2rswb", 
    "pw_gy2rsa", 
    "pw_gy2rsd", 
    "pw_gy2rs", 
    "wg_gy2rs", 
    "a_gxw2rs", 
    "ia_gxw2rs", 
    "pw_gxw2rsa", 
    "pw_gxw2rsd", 
    "pw_gxw2rs", 
    "wg_gxw2rs", 
    "a_gx1rs", 
    "ia_gx1rs", 
    "pw_gx1rsa", 
    "pw_gx1rsd", 
    "pw_gx1rs", 
    "wg_gx1rs", 
    "a_gy1rrs", 
    "a_gy1rrsa", 
    "a_gy1rrsb", 
    "ia_gy1rrs", 
    "ia_gy1rrswa", 
    "ia_gy1rrswb", 
    "pw_gy1rrsa", 
    "pw_gy1rrsd", 
    "pw_gy1rrs", 
    "wg_gy1rrs", 
    "a_gy1rs", 
    "a_gy1rsa", 
    "a_gy1rsb", 
    "ia_gy1rs", 
    "ia_gy1rswa", 
    "ia_gy1rswb", 
    "pw_gy1rsa", 
    "pw_gy1rsd", 
    "pw_gy1rs", 
    "wg_gy1rs", 
    "a_gzkrs", 
    "ia_gzkrs", 
    "pw_gzkrsa", 
    "pw_gzkrsd", 
    "pw_gzkrs", 
    "wg_gzkrs", 
    "a_gxkrs", 
    "ia_gxkrs", 
    "pw_gxkrsa", 
    "pw_gxkrsd", 
    "pw_gxkrs", 
    "wg_gxkrs", 
    "res_rf1dtg", 
    "wg_rf1dtg", 
    "a_gzrf1dtg", 
    "ia_gzrf1dtg", 
    "pw_gzrf1dtga", 
    "pw_gzrf1dtgd", 
    "pw_gzrf1dtg", 
    "wg_gzrf1dtg", 
    "a_gxkbsdtg", 
    "ia_gxkbsdtg", 
    "pw_gxkbsdtga", 
    "pw_gxkbsdtgd", 
    "pw_gxkbsdtg", 
    "wg_gxkbsdtg", 
    "a_gz1dtg", 
    "ia_gz1dtg", 
    "pw_gz1dtga", 
    "pw_gz1dtgd", 
    "pw_gz1dtg", 
    "wg_gz1dtg", 
    "a_rfbdtg", 
    "ia_rfbdtg", 
    "pw_rfbdtg", 
    "res_rfbdtg", 
    "off_rfbdtg", 
    "rfslot_rfbdtg", 
    "gscale_rfbdtg", 
    "n_rfbdtg", 
    "wg_rfbdtg", 
    "a_thetarfbdtg", 
    "ia_thetarfbdtg", 
    "pw_thetarfbdtg", 
    "res_thetarfbdtg", 
    "off_thetarfbdtg", 
    "rfslot_thetarfbdtg", 
    "gscale_thetarfbdtg", 
    "n_thetarfbdtg", 
    "wg_thetarfbdtg", 
    "a_gzkbsdtg", 
    "ia_gzkbsdtg", 
    "pw_gzkbsdtga", 
    "pw_gzkbsdtgd", 
    "pw_gzkbsdtg", 
    "wg_gzkbsdtg", 
    "a_gxwdtg", 
    "ia_gxwdtg", 
    "pw_gxwdtga", 
    "pw_gxwdtgd", 
    "pw_gxwdtg", 
    "wg_gxwdtg", 
    "filter_echo1dtg", 
    "a_gx2dtg", 
    "ia_gx2dtg", 
    "pw_gx2dtga", 
    "pw_gx2dtgd", 
    "pw_gx2dtg", 
    "wg_gx2dtg", 
    "a_gy2dtg", 
    "a_gy2dtga", 
    "a_gy2dtgb", 
    "ia_gy2dtg", 
    "ia_gy2dtgwa", 
    "ia_gy2dtgwb", 
    "pw_gy2dtga", 
    "pw_gy2dtgd", 
    "pw_gy2dtg", 
    "wg_gy2dtg", 
    "a_gxw2dtg", 
    "ia_gxw2dtg", 
    "pw_gxw2dtga", 
    "pw_gxw2dtgd", 
    "pw_gxw2dtg", 
    "wg_gxw2dtg", 
    "a_gx1dtg", 
    "ia_gx1dtg", 
    "pw_gx1dtga", 
    "pw_gx1dtgd", 
    "pw_gx1dtg", 
    "wg_gx1dtg", 
    "a_gy1rdtg", 
    "a_gy1rdtga", 
    "a_gy1rdtgb", 
    "ia_gy1rdtg", 
    "ia_gy1rdtgwa", 
    "ia_gy1rdtgwb", 
    "pw_gy1rdtga", 
    "pw_gy1rdtgd", 
    "pw_gy1rdtg", 
    "wg_gy1rdtg", 
    "a_gy1dtg", 
    "a_gy1dtga", 
    "a_gy1dtgb", 
    "ia_gy1dtg", 
    "ia_gy1dtgwa", 
    "ia_gy1dtgwb", 
    "pw_gy1dtga", 
    "pw_gy1dtgd", 
    "pw_gy1dtg", 
    "wg_gy1dtg", 
    "a_gzkdtg", 
    "ia_gzkdtg", 
    "pw_gzkdtga", 
    "pw_gzkdtgd", 
    "pw_gzkdtg", 
    "wg_gzkdtg", 
    "a_gxkdtg", 
    "ia_gxkdtg", 
    "pw_gxkdtga", 
    "pw_gxkdtgd", 
    "pw_gxkdtg", 
    "wg_gxkdtg", 
    "a_rf1cal", 
    "ia_rf1cal", 
    "pw_rf1cal", 
    "res_rf1cal", 
    "off_rf1cal", 
    "rfslot_rf1cal", 
    "gscale_rf1cal", 
    "n_rf1cal", 
    "wg_rf1cal", 
    "a_gzrf1cal", 
    "ia_gzrf1cal", 
    "pw_gzrf1cala", 
    "pw_gzrf1cald", 
    "pw_gzrf1cal", 
    "wg_gzrf1cal", 
    "a_gzcombcal", 
    "a_gzcombcala", 
    "a_gzcombcalb", 
    "ia_gzcombcal", 
    "ia_gzcombcalwa", 
    "ia_gzcombcalwb", 
    "pw_gzcombcala", 
    "pw_gzcombcald", 
    "pw_gzcombcalf", 
    "pw_gzcombcal", 
    "res_gzcombcal", 
    "per_gzcombcal", 
    "wg_gzcombcal", 
    "a_gzprcal", 
    "a_gzprcala", 
    "a_gzprcalb", 
    "ia_gzprcal", 
    "ia_gzprcalwa", 
    "ia_gzprcalwb", 
    "pw_gzprcala", 
    "pw_gzprcald", 
    "pw_gzprcalf", 
    "pw_gzprcal", 
    "res_gzprcal", 
    "per_gzprcal", 
    "wg_gzprcal", 
    "a_gxwcal", 
    "ia_gxwcal", 
    "pw_gxwcala", 
    "pw_gxwcald", 
    "pw_gxwcal", 
    "wg_gxwcal", 
    "filter_echo1cal", 
    "a_gx1cal", 
    "a_gx1cala", 
    "a_gx1calb", 
    "ia_gx1cal", 
    "ia_gx1calwa", 
    "ia_gx1calwb", 
    "pw_gx1cala", 
    "pw_gx1cald", 
    "pw_gx1calf", 
    "pw_gx1cal", 
    "res_gx1cal", 
    "per_gx1cal", 
    "wg_gx1cal", 
    "a_gy1cal", 
    "a_gy1cala", 
    "a_gy1calb", 
    "ia_gy1cal", 
    "ia_gy1calwa", 
    "ia_gy1calwb", 
    "pw_gy1cala", 
    "pw_gy1cald", 
    "pw_gy1calf", 
    "pw_gy1cal", 
    "res_gy1cal", 
    "per_gy1cal", 
    "wg_gy1cal", 
    "a_gy1rcal", 
    "a_gy1rcala", 
    "a_gy1rcalb", 
    "ia_gy1rcal", 
    "ia_gy1rcalwa", 
    "ia_gy1rcalwb", 
    "pw_gy1rcala", 
    "pw_gy1rcald", 
    "pw_gy1rcalf", 
    "pw_gy1rcal", 
    "res_gy1rcal", 
    "per_gy1rcal", 
    "wg_gy1rcal", 
    "a_rf1coil", 
    "ia_rf1coil", 
    "pw_rf1coil", 
    "res_rf1coil", 
    "off_rf1coil", 
    "rfslot_rf1coil", 
    "gscale_rf1coil", 
    "n_rf1coil", 
    "wg_rf1coil", 
    "a_gzrf1coil", 
    "ia_gzrf1coil", 
    "pw_gzrf1coila", 
    "pw_gzrf1coild", 
    "pw_gzrf1coil", 
    "wg_gzrf1coil", 
    "a_gzcombcoil", 
    "a_gzcombcoila", 
    "a_gzcombcoilb", 
    "ia_gzcombcoil", 
    "ia_gzcombcoilwa", 
    "ia_gzcombcoilwb", 
    "pw_gzcombcoila", 
    "pw_gzcombcoild", 
    "pw_gzcombcoilf", 
    "pw_gzcombcoil", 
    "res_gzcombcoil", 
    "per_gzcombcoil", 
    "wg_gzcombcoil", 
    "a_gzprcoil", 
    "a_gzprcoila", 
    "a_gzprcoilb", 
    "ia_gzprcoil", 
    "ia_gzprcoilwa", 
    "ia_gzprcoilwb", 
    "pw_gzprcoila", 
    "pw_gzprcoild", 
    "pw_gzprcoilf", 
    "pw_gzprcoil", 
    "res_gzprcoil", 
    "per_gzprcoil", 
    "wg_gzprcoil", 
    "a_gxwcoil", 
    "ia_gxwcoil", 
    "pw_gxwcoila", 
    "pw_gxwcoild", 
    "pw_gxwcoil", 
    "wg_gxwcoil", 
    "filter_echo1coil", 
    "a_gx1coil", 
    "a_gx1coila", 
    "a_gx1coilb", 
    "ia_gx1coil", 
    "ia_gx1coilwa", 
    "ia_gx1coilwb", 
    "pw_gx1coila", 
    "pw_gx1coild", 
    "pw_gx1coilf", 
    "pw_gx1coil", 
    "res_gx1coil", 
    "per_gx1coil", 
    "wg_gx1coil", 
    "a_gy1coil", 
    "a_gy1coila", 
    "a_gy1coilb", 
    "ia_gy1coil", 
    "ia_gy1coilwa", 
    "ia_gy1coilwb", 
    "pw_gy1coila", 
    "pw_gy1coild", 
    "pw_gy1coilf", 
    "pw_gy1coil", 
    "res_gy1coil", 
    "per_gy1coil", 
    "wg_gy1coil", 
    "a_gy1rcoil", 
    "a_gy1rcoila", 
    "a_gy1rcoilb", 
    "ia_gy1rcoil", 
    "ia_gy1rcoilwa", 
    "ia_gy1rcoilwb", 
    "pw_gy1rcoila", 
    "pw_gy1rcoild", 
    "pw_gy1rcoilf", 
    "pw_gy1rcoil", 
    "res_gy1rcoil", 
    "per_gy1rcoil", 
    "wg_gy1rcoil", 
    "start_gycylra", 
    "end_gycylra", 
    "ia_stgycylra", 
    "ia_endgycylra", 
    "pw_gycylra", 
    "res_gycylra", 
    "wg_gycylra", 
    "start_gzcylra", 
    "end_gzcylra", 
    "ia_stgzcylra", 
    "ia_endgzcylra", 
    "pw_gzcylra", 
    "res_gzcylra", 
    "wg_gzcylra", 
    "res_rfcylr", 
    "wg_rfcylr", 
    "res_thcylr", 
    "wg_thcylr", 
    "res_gycylr", 
    "wg_gycylr", 
    "res_gzcylr", 
    "wg_gzcylr", 
    "a_gzrf1mon", 
    "ia_gzrf1mon", 
    "pw_gzrf1mona", 
    "pw_gzrf1mond", 
    "pw_gzrf1mon", 
    "a_rf1mon", 
    "ia_rf1mon", 
    "pw_rf1mon", 
    "res_rf1mon", 
    "temp_res_rf1mon", 
    "cyc_rf1mon", 
    "off_rf1mon", 
    "alpha_rf1mon", 
    "thk_rf1mon", 
    "gscale_rf1mon", 
    "flip_rf1mon", 
    "wg_rf1mon", 
    "a_gyrf1mon", 
    "ia_gyrf1mon", 
    "pw_gyrf1mona", 
    "pw_gyrf1mond", 
    "pw_gyrf1mon", 
    "wg_gyrf1mon", 
    "a_gz1mon", 
    "ia_gz1mon", 
    "pw_gz1mona", 
    "pw_gz1mond", 
    "pw_gz1mon", 
    "wg_gz1mon", 
    "a_gy1mon", 
    "ia_gy1mon", 
    "pw_gy1mona", 
    "pw_gy1mond", 
    "pw_gy1mon", 
    "wg_gy1mon", 
    "a_gyrf2mon", 
    "ia_gyrf2mon", 
    "pw_gyrf2mona", 
    "pw_gyrf2mond", 
    "pw_gyrf2mon", 
    "a_rf2mon", 
    "ia_rf2mon", 
    "pw_rf2mon", 
    "res_rf2mon", 
    "temp_res_rf2mon", 
    "cyc_rf2mon", 
    "off_rf2mon", 
    "alpha_rf2mon", 
    "thk_rf2mon", 
    "gscale_rf2mon", 
    "flip_rf2mon", 
    "wg_rf2mon", 
    "a_gyrf2lmon", 
    "ia_gyrf2lmon", 
    "pw_gyrf2lmona", 
    "pw_gyrf2lmond", 
    "pw_gyrf2lmon", 
    "wg_gyrf2lmon", 
    "a_gyrf2rmon", 
    "ia_gyrf2rmon", 
    "pw_gyrf2rmona", 
    "pw_gyrf2rmond", 
    "pw_gyrf2rmon", 
    "wg_gyrf2rmon", 
    "a_gxwmon", 
    "ia_gxwmon", 
    "pw_gxwmona", 
    "pw_gxwmond", 
    "pw_gxwmon", 
    "wg_gxwmon", 
    "a_gx1mon", 
    "ia_gx1mon", 
    "pw_gx1mona", 
    "pw_gx1mond", 
    "pw_gx1mon", 
    "wg_gx1mon", 
    "a_gxfcmon", 
    "ia_gxfcmon", 
    "pw_gxfcmona", 
    "pw_gxfcmond", 
    "pw_gxfcmon", 
    "wg_gxfcmon", 
    "filter_echo1mon", 
    "a_gzkmon", 
    "ia_gzkmon", 
    "pw_gzkmona", 
    "pw_gzkmond", 
    "pw_gzkmon", 
    "wg_gzkmon", 
    "start_gycylratipup", 
    "end_gycylratipup", 
    "ia_stgycylratipup", 
    "ia_endgycylratipup", 
    "pw_gycylratipup", 
    "res_gycylratipup", 
    "wg_gycylratipup", 
    "start_gzcylratipup", 
    "end_gzcylratipup", 
    "ia_stgzcylratipup", 
    "ia_endgzcylratipup", 
    "pw_gzcylratipup", 
    "res_gzcylratipup", 
    "wg_gzcylratipup", 
    "res_rfcylrtipup", 
    "wg_rfcylrtipup", 
    "res_thcylrtipup", 
    "wg_thcylrtipup", 
    "res_gycylrtipup", 
    "wg_gycylrtipup", 
    "res_gzcylrtipup", 
    "wg_gzcylrtipup", 
    "a_gyrfmontipup", 
    "ia_gyrfmontipup", 
    "pw_gyrfmontipupa", 
    "pw_gyrfmontipupd", 
    "pw_gyrfmontipup", 
    "a_rfmontipup", 
    "ia_rfmontipup", 
    "pw_rfmontipup", 
    "res_rfmontipup", 
    "temp_res_rfmontipup", 
    "cyc_rfmontipup", 
    "off_rfmontipup", 
    "alpha_rfmontipup", 
    "thk_rfmontipup", 
    "gscale_rfmontipup", 
    "flip_rfmontipup", 
    "wg_rfmontipup", 
    "a_gzkmontipup", 
    "ia_gzkmontipup", 
    "pw_gzkmontipupa", 
    "pw_gzkmontipupd", 
    "pw_gzkmontipup", 
    "wg_gzkmontipup", 
    "_lastcv", 
    "rsp_info", 
    "rsprot", 
    "rsptrigger", 
    "ipg_alloc_instr", 
    "asrsp_info", 
    "sat_rot_matrices", 
    "sat_rot_ex_indices", 
    "phygrd", 
    "loggrd", 
    "satloggrd", 
    "asloggrd", 
    "asscan_info", 
    "PSrot", 
    "PSrot_mod", 
    "phase_off", 
    "yres_phase", 
    "yoffs1", 
    "off_rfcsz_base", 
    "scan_info_base", 
    "xyz_base", 
    "rsprot_base", 
    "rtia_first_scan_flag", 
    "rsp_psc_info", 
    "coilInfo_tgt", 
    "volRecCoilInfo_tgt", 
    "fullRecCoilInfo_tgt", 
    "txCoilInfo_tgt", 
    "cframpdir_tgt", 
    "chksum_rampdir_tgt", 
    "seqcfginfo", 
    "PSfreq_offset", 
    "cfl_tdaq", 
    "cfh_tdaq", 
    "rcvn_tdaq", 
    "rsp_PSrot", 
    "rsp_rcvnrot", 
    "rsrsprot", 
    "dtgrsprot", 
    "calrsprot", 
    "coilrsprot", 
    "min_ssp", 
    "rsrsp_info", 
    "dtgrsp_info", 
    "calrsp_info", 
    "coilrsp_info", 
    "cal_zyindex", 
    "coil_zyindex", 
    "presscfh_info", 
    "cflloggrd", 
    "ps1loggrd", 
    "cfhloggrd", 
    "rcvnloggrd", 
    "rsloggrd", 
    "dtgloggrd", 
    "calloggrd", 
    "coilloggrd", 
    "maptgloggrd", 
    "original_pgrd", 
    "read_axis", 
    "killer_axis", 
    "tg_killer_axis", 
    "tg_read_axis", 
    "z_to_omscale", 
    "y_to_omscale", 
    "shift_to_omscale", 
    "runtime_rf_waveform_rf1", 
    "runtime_rf_waveform_rf1a", 
    "runtime_rf_waveform_rf1b", 
    "runtime_rf_waveform_rf1c", 
    "runtime_rf_waveform_rf1d", 
    "runtime_rf_waveform_rf1e", 
    "runtime_rf_waveform_rf1f", 
    "runtime_rf_waveform_rf1g", 
    "runtime_rf_waveform_rf1h", 
    "runtime_rf_waveform_rf1i", 
    "slloc2sltime", 
    "sltime2slloc", 
    "f_sltime2slloc", 
    "act_slquant1", 
    "rsprot_unscaled", 
    "inversRR", 
    "D", 
    "log_incdifx", 
    "log_incdify", 
    "log_incdifz", 
    "diff_ampx2", 
    "diff_ampy2", 
    "diff_ampz2", 
    "off_rfcsz", 
    "dwigcor", 
    "dwibcor", 
    "dwikcor", 
    "dwi_hoec_gcor_XonX", 
    "dwi_hoec_gcor_YonX", 
    "dwi_hoec_gcor_ZonX", 
    "dwi_hoec_gcor_XonY", 
    "dwi_hoec_gcor_YonY", 
    "dwi_hoec_gcor_ZonY", 
    "dwi_hoec_bcor_XonB0", 
    "dwi_hoec_bcor_YonB0", 
    "dwi_hoec_bcor_ZonB0", 
    "diff_ampx", 
    "diff_ampy", 
    "diff_ampz", 
    "diff_bv_weight", 
    "epiphygrd", 
    "epiloggrd", 
    "orthphygrd", 
    "orthloggrd", 
    "rfpulseInfo", 
    "delay_buffer", 
    "dither_buffer", 
    "ccinx", 
    "cciny", 
    "ccinz", 
    "fesp_in", 
    "esp_in", 
    "g0", 
    "num_elements", 
    "file_exist", 
    "taratio_arr", 
    "totarea_arr", 
    "agxdif_tmp", 
    "agydif_tmp", 
    "agzdif_tmp", 
    "difnextab_rsp", 
    "ctlend_last", 
    "ctlend_fill", 
    "ctlend_unfill", 
    "t1flair_slice_info_enh", 
    "t1flair_slice_info_reg", 
    "ssrffile", 
    "ssgzfile", 
    "hgzssfn", 
    "ss_psd_slthick", 
    "mon_rsp_info", 
    "mon_rsp_info2", 
    "monloggrd", 
    "monphygrd", 
    "rsprot_monitor", 
    "mcbias_info", 
    "arcPhIndex", 
    "arcSlIndex", 
};

/**
 * returns array of names of CVs and TGT export variables to copy
 * the order of these variables is the same as returned by get_cvcopy_table
 */
const char ** get_cvcopy_table_names( void )
{
     return cvcopy_table_names;
}

#endif /* HOST_TGT */

#endif /* h_epi2_cvcopy_cpp */

